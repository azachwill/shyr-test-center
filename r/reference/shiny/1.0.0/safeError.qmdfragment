---
title: "safeError"
---

```{=html}

<pre class="code"><code class="r"><span class="functioncall"><a href='safeError.html'>safeError</a></span><span class="keyword">(</span><span class="symbol">error</span><span class="keyword">)</span></code></pre>

<h3 data-swiftype-index="false">Arguments</h3>
<table class="arguments">
  <tr>
    <th>error</th>
    <td>Either an &quot;error&quot; object or a &quot;character&quot; object (string).
In the latter case, the string will become the message of the error
returned by <code>safeError</code>.</td>
  </tr>
</table>

<div data-section="Value">
  <h3 data-swiftype-index="false">Value</h3>

  <p><dl>
An &quot;error&quot; object
</dl></p>

</div>

<div data-section="Description">
  <h3 data-swiftype-index="false">Description</h3>

  <p>This should be used when you want to let the user see an error
message even if the default is to sanitize all errors. If you have an
error <code>e</code> and call <code>stop(safeError(e))</code>, then Shiny will
ignore the value of <code>getOption(&quot;shiny.sanitize.errors&quot;)</code> and always
display the error in the app itself.</p>

</div>

<div data-section="Details">
  <h3 data-swiftype-index="false">Details</h3>

  <p>An error generated by <code>safeError</code> has priority over all
other Shiny errors. This can be dangerous. For example, if you have set
<code>options(shiny.sanitize.errors = TRUE)</code>, then by default all error
messages are omitted in the app, and replaced by a generic error message.
However, this does not apply to <code>safeError</code>: whatever you pass
through <code>error</code> will be displayed to the user. So, this should only
be used when you are sure that your error message does not contain any
sensitive information. In those situations, <code>safeError</code> can make
your users&#39; lives much easier by giving them a hint as to where the
error occurred.</p>

</div>

<h3 id="examples" data-swiftype-index="false">Examples</h3>
<pre class="examples"><code class="r"><div class='input'><span class="comment">## Only run examples in interactive R sessions</span>
<span class="keyword">if</span> <span class="keyword">(</span><span class="functioncall"><a href='http://www.rdocumentation.org/packages/base/topics/interactive'>interactive</a></span><span class="keyword">(</span><span class="keyword">)</span><span class="keyword">)</span> <span class="keyword">{</span>

<span class="comment"># uncomment the desired line to experiment with shiny.sanitize.errors</span>
<span class="comment"># options(shiny.sanitize.errors = TRUE)</span>
<span class="comment"># options(shiny.sanitize.errors = FALSE)</span>

<span class="comment"># Define UI</span>
<span class="symbol">ui</span> <span class="assignement">&lt;-</span> <span class="functioncall"><a href='fluidPage.html'>fluidPage</a></span><span class="keyword">(</span>
  <span class="functioncall"><a href='textInput.html'>textInput</a></span><span class="keyword">(</span><span class="string">'number'</span><span class="keyword">,</span> <span class="string">'Enter your favorite number from 1 to 10'</span><span class="keyword">,</span> <span class="string">'5'</span><span class="keyword">)</span><span class="keyword">,</span>
  <span class="functioncall"><a href='textOutput.html'>textOutput</a></span><span class="keyword">(</span><span class="string">'normalError'</span><span class="keyword">)</span><span class="keyword">,</span>
  <span class="functioncall"><a href='textOutput.html'>textOutput</a></span><span class="keyword">(</span><span class="string">'safeError'</span><span class="keyword">)</span>
<span class="keyword">)</span>

<span class="comment"># Server logic</span>
<span class="symbol">server</span> <span class="assignement">&lt;-</span> <span class="keyword">function</span><span class="keyword">(</span><span class="formalargs">input</span><span class="keyword">,</span> <span class="formalargs">output</span><span class="keyword">)</span> <span class="keyword">{</span>
  <span class="symbol">output</span><span class="keyword">$</span><span class="symbol">normalError</span> <span class="assignement">&lt;-</span> <span class="functioncall"><a href='renderText.html'>renderText</a></span><span class="keyword">(</span><span class="keyword">{</span>
    <span class="symbol">number</span> <span class="assignement">&lt;-</span> <span class="symbol">input</span><span class="keyword">$</span><span class="symbol">number</span>
    <span class="keyword">if</span> <span class="keyword">(</span><span class="symbol">number</span> <span class="keyword">%in%</span> <span class="number">1</span><span class="keyword">:</span><span class="number">10</span><span class="keyword">)</span> <span class="keyword">{</span>
      <span class="functioncall"><a href='http://www.rdocumentation.org/packages/base/topics/function'>return</a></span><span class="keyword">(</span><span class="functioncall"><a href='http://www.rdocumentation.org/packages/base/topics/paste'>paste</a></span><span class="keyword">(</span><span class="string">'You chose'</span><span class="keyword">,</span> <span class="symbol">number</span><span class="keyword">,</span> <span class="string">'!'</span><span class="keyword">)</span><span class="keyword">)</span>
    <span class="keyword">}</span> <span class="keyword">else</span> <span class="keyword">{</span>
      <span class="functioncall"><a href='http://www.rdocumentation.org/packages/base/topics/stop'>stop</a></span><span class="keyword">(</span>
        <span class="functioncall"><a href='http://www.rdocumentation.org/packages/base/topics/paste'>paste</a></span><span class="keyword">(</span><span class="symbol">number</span><span class="keyword">,</span> <span class="string">'is not a number between 1 and 10'</span><span class="keyword">)</span>
      <span class="keyword">)</span>
    <span class="keyword">}</span>
  <span class="keyword">}</span><span class="keyword">)</span>
  <span class="symbol">output</span><span class="keyword">$</span><span class="symbol">safeError</span> <span class="assignement">&lt;-</span> <span class="functioncall"><a href='renderText.html'>renderText</a></span><span class="keyword">(</span><span class="keyword">{</span>
    <span class="symbol">number</span> <span class="assignement">&lt;-</span> <span class="symbol">input</span><span class="keyword">$</span><span class="symbol">number</span>
    <span class="keyword">if</span> <span class="keyword">(</span><span class="symbol">number</span> <span class="keyword">%in%</span> <span class="number">1</span><span class="keyword">:</span><span class="number">10</span><span class="keyword">)</span> <span class="keyword">{</span>
      <span class="functioncall"><a href='http://www.rdocumentation.org/packages/base/topics/function'>return</a></span><span class="keyword">(</span><span class="functioncall"><a href='http://www.rdocumentation.org/packages/base/topics/paste'>paste</a></span><span class="keyword">(</span><span class="string">'You chose'</span><span class="keyword">,</span> <span class="symbol">number</span><span class="keyword">,</span> <span class="string">'!'</span><span class="keyword">)</span><span class="keyword">)</span>
    <span class="keyword">}</span> <span class="keyword">else</span> <span class="keyword">{</span>
      <span class="functioncall"><a href='http://www.rdocumentation.org/packages/base/topics/stop'>stop</a></span><span class="keyword">(</span><span class="functioncall"><a href='safeError.html'>safeError</a></span><span class="keyword">(</span>
        <span class="functioncall"><a href='http://www.rdocumentation.org/packages/base/topics/paste'>paste</a></span><span class="keyword">(</span><span class="symbol">number</span><span class="keyword">,</span> <span class="string">'is not a number between 1 and 10'</span><span class="keyword">)</span>
      <span class="keyword">)</span><span class="keyword">)</span>
    <span class="keyword">}</span>
  <span class="keyword">}</span><span class="keyword">)</span>
<span class="keyword">}</span>

<span class="comment"># Complete app with UI and server components</span>
<span class="functioncall"><a href='shinyApp.html'>shinyApp</a></span><span class="keyword">(</span><span class="symbol">ui</span><span class="keyword">,</span> <span class="symbol">server</span><span class="keyword">)</span>
<span class="keyword">}</span></div></code></pre>
<!-- <ul>
  <li>safeError</li>
</ul>
<ul>
  
</ul> -->

<div data-swiftype-index="false">
<h3>See also</h3>
  <p><code><a href='shiny-options.html'>shiny-options</a></code></p>
</div>
```
