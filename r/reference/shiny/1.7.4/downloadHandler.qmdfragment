---
title: "File Downloads â€” downloadHandler"
---

```{=html}
<div class="reference">
  <small class="dont-index pkg-version">v1.7.4</small><small class="dont-index pipe">|</small><small class="dont-index github-source">Source: <a href="https://github.com/rstudio/shiny/blob/v1.7.4/R/shinywrappers.R" class="external-link"><code>R/shinywrappers.R</code></a></small>

  <div data-section="description"><h3>Description</h3><p>Allows content from the Shiny application to be made available to the user as
file downloads (for example, downloading the currently visible data as a CSV
file). Both filename and contents can be calculated dynamically at the time
the user initiates the download. Assign the return value to a slot on
<code>output</code> in your server function, and in the UI use
<code><a href="downloadButton.html">downloadButton()</a></code> or <code><a href="downloadButton.html">downloadLink()</a></code> to make the
download available.</p></div>

  <div data-section="usage"><div class="sourceCode"><pre class="sourceCode r"><code><span id="cb1-1"><a href="#cb1-1" tabindex="-1"></a><span class="fu">downloadHandler</span>(filename, content, <span class="at">contentType =</span> <span class="cn">NULL</span>, <span class="at">outputArgs =</span> <span class="fu">list</span>())</span></code></pre></div></div>

  <div data-section="arguments">
    <h3 id="arguments">Arguments</h3>
    <dl><dt>filename</dt>
<dd><p>A string of the filename, including extension, that the
user's web browser should default to when downloading the file; or a
function that returns such a string. (Reactive values and functions may be
used from this function.)</p></dd>


<dt>content</dt>
<dd><p>A function that takes a single argument <code>file</code> that is a
file path (string) of a nonexistent temp file, and writes the content to
that file path. (Reactive values and functions may be used from this
function.)</p></dd>


<dt>contentType</dt>
<dd><p>A string of the download's
<a href="https://en.wikipedia.org/wiki/Internet_media_type" class="external-link">content type</a>, for
example <code>"text/csv"</code> or <code>"image/png"</code>. If <code>NULL</code>, the content type
will be guessed based on the filename extension, or
<code>application/octet-stream</code> if the extension is unknown.</p></dd>


<dt>outputArgs</dt>
<dd><p>A list of arguments to be passed through to the implicit
call to <code><a href="downloadButton.html">downloadButton()</a></code> when <code>downloadHandler</code> is used
in an interactive R Markdown document.</p></dd>

</dl></div>

  <div data-section="examples">
    <h3 id="examples">Examples</h3>
    <div class="sourceCode"><pre class="sourceCode r"><code><span id="cb1-1"><a href="#cb1-1" tabindex="-1"></a><span class="do">## Only run examples in interactive R sessions</span></span>
<span id="cb1-2"><a href="#cb1-2" tabindex="-1"></a><span class="cf">if</span> (<span class="fu">interactive</span>()) {</span>
<span id="cb1-3"><a href="#cb1-3" tabindex="-1"></a></span>
<span id="cb1-4"><a href="#cb1-4" tabindex="-1"></a>ui <span class="ot">&lt;-</span> <span class="fu">fluidPage</span>(</span>
<span id="cb1-5"><a href="#cb1-5" tabindex="-1"></a>  <span class="fu">downloadButton</span>(<span class="st">"downloadData"</span>, <span class="st">"Download"</span>)</span>
<span id="cb1-6"><a href="#cb1-6" tabindex="-1"></a>)</span>
<span id="cb1-7"><a href="#cb1-7" tabindex="-1"></a></span>
<span id="cb1-8"><a href="#cb1-8" tabindex="-1"></a>server <span class="ot">&lt;-</span> <span class="cf">function</span>(input, output) {</span>
<span id="cb1-9"><a href="#cb1-9" tabindex="-1"></a>  <span class="co"># Our dataset</span></span>
<span id="cb1-10"><a href="#cb1-10" tabindex="-1"></a>  data <span class="ot">&lt;-</span> mtcars</span>
<span id="cb1-11"><a href="#cb1-11" tabindex="-1"></a></span>
<span id="cb1-12"><a href="#cb1-12" tabindex="-1"></a>  output<span class="sc">$</span>downloadData <span class="ot">&lt;-</span> <span class="fu">downloadHandler</span>(</span>
<span id="cb1-13"><a href="#cb1-13" tabindex="-1"></a>    <span class="at">filename =</span> <span class="cf">function</span>() {</span>
<span id="cb1-14"><a href="#cb1-14" tabindex="-1"></a>      <span class="fu">paste</span>(<span class="st">"data-"</span>, <span class="fu">Sys.Date</span>(), <span class="st">".csv"</span>, <span class="at">sep=</span><span class="st">""</span>)</span>
<span id="cb1-15"><a href="#cb1-15" tabindex="-1"></a>    },</span>
<span id="cb1-16"><a href="#cb1-16" tabindex="-1"></a>    <span class="at">content =</span> <span class="cf">function</span>(file) {</span>
<span id="cb1-17"><a href="#cb1-17" tabindex="-1"></a>      <span class="fu">write.csv</span>(data, file)</span>
<span id="cb1-18"><a href="#cb1-18" tabindex="-1"></a>    }</span>
<span id="cb1-19"><a href="#cb1-19" tabindex="-1"></a>  )</span>
<span id="cb1-20"><a href="#cb1-20" tabindex="-1"></a>}</span>
<span id="cb1-21"><a href="#cb1-21" tabindex="-1"></a></span>
<span id="cb1-22"><a href="#cb1-22" tabindex="-1"></a><span class="fu">shinyApp</span>(ui, server)</span>
<span id="cb1-23"><a href="#cb1-23" tabindex="-1"></a>}</span></code></pre></div>
  </div>
</div>
```
