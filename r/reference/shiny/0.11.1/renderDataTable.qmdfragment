---
title: "renderDataTable"
---

```{=html}

<pre class="code"><code class="r"><span class="functioncall"><a href='renderDataTable.html'>renderDataTable</a></span><span class="keyword">(</span><span class="symbol">expr</span><span class="keyword">,</span> <span class="argument">options</span>&nbsp;<span class="argument">=</span>&nbsp;NULL<span class="keyword">,</span> <span class="argument">searchDelay</span>&nbsp;<span class="argument">=</span>&nbsp;<span class="number">500</span><span class="keyword">,</span>
  <span class="argument">callback</span>&nbsp;<span class="argument">=</span>&nbsp;<span class="string">"function(oTable) {}"</span><span class="keyword">,</span> <span class="argument">escape</span>&nbsp;<span class="argument">=</span>&nbsp;<span class="number">TRUE</span><span class="keyword">,</span> <span class="argument">env</span>&nbsp;<span class="argument">=</span>&nbsp;<span class="functioncall"><a href='http://www.rdocumentation.org/packages/base/topics/sys.parent'>parent.frame</a></span><span class="keyword">(</span><span class="keyword">)</span><span class="keyword">,</span>
  <span class="argument">quoted</span>&nbsp;<span class="argument">=</span>&nbsp;<span class="number">FALSE</span><span class="keyword">)</span></code></pre>

<h3 data-swiftype-index="false">Arguments</h3>
<table class="arguments">
  <tr>
    <th>expr</th>
    <td>An expression that returns a data frame or a matrix.</td>
  </tr>
  <tr>
    <th>options</th>
    <td>A list of initialization options to be passed to DataTables,
or a function to return such a list.</td>
  </tr>
  <tr>
    <th>searchDelay</th>
    <td>The delay for searching, in milliseconds (to avoid too
frequent search requests).</td>
  </tr>
  <tr>
    <th>callback</th>
    <td>A JavaScript function to be applied to the DataTable object.
This is useful for DataTables plug-ins, which often require the DataTable
instance to be available (<a href = 'http://datatables.net/extensions/'>http://datatables.net/extensions/</a>).</td>
  </tr>
  <tr>
    <th>escape</th>
    <td>Whether to escape HTML entities in the table: <code>TRUE</code> means
to escape the whole table, and <code>FALSE</code> means not to escape it.
Alternatively, you can specify numeric column indices or column names to
indicate which columns to escape, e.g. <code>1:5</code> (the first 5 columns),
<code>c(1, 3, 4)</code>, or <code>c(-1, -3)</code> (all columns except the first and
third), or <code>c(&#39;Species&#39;, &#39;Sepal.Length&#39;)</code>.</td>
  </tr>
  <tr>
    <th>env</th>
    <td>The environment in which to evaluate <code>expr</code>.</td>
  </tr>
  <tr>
    <th>quoted</th>
    <td>Is <code>expr</code> a quoted expression (with <code>quote()</code>)? This
is useful if you want to save an expression in a variable.</td>
  </tr>
</table>

<div data-section="Description">
  <h3 data-swiftype-index="false">Description</h3>

  <p>Makes a reactive version of the given function that returns a data frame (or
matrix), which will be rendered with the DataTables library. Paging,
searching, filtering, and sorting can be done on the R side using Shiny as
the server infrastructure.</p>

</div>

<div data-section="Details">
  <h3 data-swiftype-index="false">Details</h3>

  <p>For the <code>options</code> argument, the character elements that have the class
<code>&quot;AsIs&quot;</code> (usually returned from <code><a href='http://www.rdocumentation.org/packages/base/topics/AsIs'>I</a>()</code>) will be evaluated in
JavaScript. This is useful when the type of the option value is not supported
in JSON, e.g., a JavaScript function, which can be obtained by evaluating a
character string. Note this only applies to the root-level elements of the
options list, and the <code>I()</code> notation does not work for lower-level
elements in the list.</p>

</div>

<div data-section="Note">
  <h3 data-swiftype-index="false">Note</h3>

  <p>This function only provides the server-side version of DataTables
  (using R to process the data object on the server side). There is a
  separate package <span class = "pkg">DT</span> (<a href = 'https://github.com/rstudio/DT'>https://github.com/rstudio/DT</a>) that allows
  you to create both server-side and client-side DataTables. We may deprecate
  <code>renderDataTable()</code> and <code>dataTableOutput()</code> in the future when
  the <span class = "pkg">DT</span> package is mature enough.</p>

</div>

<div data-section="References">
  <h3 data-swiftype-index="false">References</h3>

  <p><a href = 'http://datatables.net'>http://datatables.net</a></p>

</div>

<h3 id="examples" data-swiftype-index="false">Examples</h3>
<pre class="examples"><code class="r"><div class='input'><span class="comment">## Only run this example in interactive R sessions</span>
<span class="keyword">if</span> <span class="keyword">(</span><span class="functioncall"><a href='http://www.rdocumentation.org/packages/base/topics/interactive'>interactive</a></span><span class="keyword">(</span><span class="keyword">)</span><span class="keyword">)</span> <span class="keyword">{</span>
  <span class="comment"># pass a callback function to DataTables using I()</span>
  <span class="functioncall"><a href='shinyApp.html'>shinyApp</a></span><span class="keyword">(</span>
    <span class="argument">ui</span> <span class="argument">=</span> <span class="functioncall"><a href='fluidPage.html'>fluidPage</a></span><span class="keyword">(</span>
      <span class="functioncall"><a href='fluidPage.html'>fluidRow</a></span><span class="keyword">(</span>
        <span class="functioncall"><a href='column.html'>column</a></span><span class="keyword">(</span><span class="number">12</span><span class="keyword">,</span>
          <span class="functioncall"><a href='tableOutput.html'>dataTableOutput</a></span><span class="keyword">(</span><span class="string">'table'</span><span class="keyword">)</span>
        <span class="keyword">)</span>
      <span class="keyword">)</span>
    <span class="keyword">)</span><span class="keyword">,</span>
    <span class="argument">server</span> <span class="argument">=</span> <span class="keyword">function</span><span class="keyword">(</span><span class="formalargs">input</span><span class="keyword">,</span> <span class="formalargs">output</span><span class="keyword">)</span> <span class="keyword">{</span>
      <span class="symbol">output</span><span class="keyword">$</span><span class="symbol">table</span> <span class="assignement">&lt;-</span> <span class="functioncall"><a href='renderDataTable.html'>renderDataTable</a></span><span class="keyword">(</span><span class="symbol">iris</span><span class="keyword">,</span>
        <span class="argument">options</span> <span class="argument">=</span> <span class="functioncall"><a href='http://www.rdocumentation.org/packages/base/topics/list'>list</a></span><span class="keyword">(</span>
          <span class="argument">pageLength</span> <span class="argument">=</span> <span class="number">5</span><span class="keyword">,</span>
          <span class="argument">initComplete</span> <span class="argument">=</span> <span class="functioncall"><a href='http://www.rdocumentation.org/packages/base/topics/AsIs'>I</a></span><span class="keyword">(</span><span class="string">"function(settings, json) {alert('Done.');}"</span><span class="keyword">)</span>
        <span class="keyword">)</span>
      <span class="keyword">)</span>
    <span class="keyword">}</span>
  <span class="keyword">)</span>
<span class="keyword">}</span></div></code></pre>
<!-- <ul>
  <li>renderDataTable</li>
</ul>
<ul>
  
</ul> -->

```
