---
title: "UI Output â€” renderUI"
---

```{=html}
<div class="reference">
  <small class="dont-index pkg-version">v1.7.5</small><small class="dont-index pipe">|</small><small class="dont-index github-source">Source: <a href="https://github.com/rstudio/shiny/blob/v1.7.5/R/shinywrappers.R" class="external-link"><code>R/shinywrappers.R</code></a></small>

  <div data-section="description"><h3>Description</h3><p>Renders reactive HTML using the Shiny UI library.</p></div>

  <div data-section="usage"><div class="sourceCode"><pre class="sourceCode r"><code><span id="cb1-1"><a href="#cb1-1" tabindex="-1"></a><span class="fu">renderUI</span>(expr, <span class="at">env =</span> <span class="fu">parent.frame</span>(), <span class="at">quoted =</span> <span class="cn">FALSE</span>, <span class="at">outputArgs =</span> <span class="fu">list</span>())</span></code></pre></div></div>

  <div data-section="arguments">
    <h3 id="arguments">Arguments</h3>
    <dl><dt>expr</dt>
<dd><p>An expression that returns a Shiny tag object, <code><a href="HTML.html">HTML()</a></code>,
or a list of such objects.</p></dd>


<dt>env</dt>
<dd><p>The parent environment for the reactive expression. By default,
this is the calling environment, the same as when defining an ordinary
non-reactive expression. If <code>expr</code> is a quosure and <code>quoted</code> is <code>TRUE</code>,
then <code>env</code> is ignored.</p></dd>


<dt>quoted</dt>
<dd><p>If it is <code>TRUE</code>, then the <code><a href="https://rdrr.io/r/base/substitute.html" class="external-link">quote()</a></code>ed value of <code>expr</code>
will be used when <code>expr</code> is evaluated. If <code>expr</code> is a quosure and you
would like to use its expression as a value for <code>expr</code>, then you must set
<code>quoted</code> to <code>TRUE</code>.</p></dd>


<dt>outputArgs</dt>
<dd><p>A list of arguments to be passed through to the implicit
call to <code><a href="htmlOutput.html">uiOutput()</a></code> when <code>renderUI</code> is used in an
interactive R Markdown document.</p></dd>

</dl></div>
  <div data-section="details">
    <h3 id="details">Details</h3>
    <p>The corresponding HTML output tag should be <code>div</code> and have the CSS class
name <code>shiny-html-output</code> (or use <code><a href="htmlOutput.html">uiOutput()</a></code>).</p>
  </div>
  <div data-section="see-also">
    <h3 id="see-also">See also</h3>
    <div class="dont-index"><p><code><a href="htmlOutput.html">uiOutput()</a></code></p></div>
  </div>

  <div data-section="examples">
    <h3 id="examples">Examples</h3>
    <div class="sourceCode"><pre class="sourceCode r"><code><span id="cb1-1"><a href="#cb1-1" tabindex="-1"></a><span class="do">## Only run examples in interactive R sessions</span></span>
<span id="cb1-2"><a href="#cb1-2" tabindex="-1"></a><span class="cf">if</span> (<span class="fu">interactive</span>()) {</span>
<span id="cb1-3"><a href="#cb1-3" tabindex="-1"></a></span>
<span id="cb1-4"><a href="#cb1-4" tabindex="-1"></a>ui <span class="ot">&lt;-</span> <span class="fu">fluidPage</span>(</span>
<span id="cb1-5"><a href="#cb1-5" tabindex="-1"></a>  <span class="fu">uiOutput</span>(<span class="st">"moreControls"</span>)</span>
<span id="cb1-6"><a href="#cb1-6" tabindex="-1"></a>)</span>
<span id="cb1-7"><a href="#cb1-7" tabindex="-1"></a></span>
<span id="cb1-8"><a href="#cb1-8" tabindex="-1"></a>server <span class="ot">&lt;-</span> <span class="cf">function</span>(input, output) {</span>
<span id="cb1-9"><a href="#cb1-9" tabindex="-1"></a>  output<span class="sc">$</span>moreControls <span class="ot">&lt;-</span> <span class="fu">renderUI</span>({</span>
<span id="cb1-10"><a href="#cb1-10" tabindex="-1"></a>    <span class="fu">tagList</span>(</span>
<span id="cb1-11"><a href="#cb1-11" tabindex="-1"></a>      <span class="fu">sliderInput</span>(<span class="st">"n"</span>, <span class="st">"N"</span>, <span class="dv">1</span>, <span class="dv">1000</span>, <span class="dv">500</span>),</span>
<span id="cb1-12"><a href="#cb1-12" tabindex="-1"></a>      <span class="fu">textInput</span>(<span class="st">"label"</span>, <span class="st">"Label"</span>)</span>
<span id="cb1-13"><a href="#cb1-13" tabindex="-1"></a>    )</span>
<span id="cb1-14"><a href="#cb1-14" tabindex="-1"></a>  })</span>
<span id="cb1-15"><a href="#cb1-15" tabindex="-1"></a>}</span>
<span id="cb1-16"><a href="#cb1-16" tabindex="-1"></a><span class="fu">shinyApp</span>(ui, server)</span>
<span id="cb1-17"><a href="#cb1-17" tabindex="-1"></a>}</span></code></pre></div>
  </div>
</div>
```
