---
title: "Text Output â€” renderPrint"
---

```{=html}
<div class="reference">
  

  <pre class="code"><span class='fu'>renderPrint</span>(
  <span class='no'>expr</span>,
  <span class='kw'>env</span> <span class='kw'>=</span> <span class='fu'><a href='https://rdrr.io/r/base/sys.parent.html'>parent.frame</a></span>(),
  <span class='kw'>quoted</span> <span class='kw'>=</span> <span class='fl'>FALSE</span>,
  <span class='kw'>width</span> <span class='kw'>=</span> <span class='fu'><a href='https://rdrr.io/r/base/options.html'>getOption</a></span>(<span class='st'>"width"</span>),
  <span class='kw'>outputArgs</span> <span class='kw'>=</span> <span class='fu'><a href='https://rdrr.io/r/base/list.html'>list</a></span>()
)

<span class='fu'>renderText</span>(
  <span class='no'>expr</span>,
  <span class='kw'>env</span> <span class='kw'>=</span> <span class='fu'><a href='https://rdrr.io/r/base/sys.parent.html'>parent.frame</a></span>(),
  <span class='kw'>quoted</span> <span class='kw'>=</span> <span class='fl'>FALSE</span>,
  <span class='kw'>outputArgs</span> <span class='kw'>=</span> <span class='fu'><a href='https://rdrr.io/r/base/list.html'>list</a></span>(),
  <span class='kw'>sep</span> <span class='kw'>=</span> <span class='st'>" "</span>
)</pre>

  <h3 class="hasAnchor" id="arguments"><a class="anchor" href="#arguments"></a>Arguments</h3>
  <table class="arguments">
  <colgroup><col class="name" /><col class="desc" /></colgroup>
  <tr>
    <th><p>expr</p></th>
    <td><p>An expression to evaluate.</p></td>
  </tr>
  <tr>
    <th><p>env</p></th>
    <td><p>The environment in which to evaluate <code>expr</code>. For expert use only.</p></td>
  </tr>
  <tr>
    <th><p>quoted</p></th>
    <td><p>Is <code>expr</code> a quoted expression (with <code><a href='https://rdrr.io/r/base/substitute.html'>quote()</a></code>)? This
is useful if you want to save an expression in a variable.</p></td>
  </tr>
  <tr>
    <th><p>width</p></th>
    <td><p>Width of printed output.</p></td>
  </tr>
  <tr>
    <th><p>outputArgs</p></th>
    <td><p>A list of arguments to be passed through to the implicit
call to <code><a href='textOutput.html'>verbatimTextOutput()</a></code> or <code><a href='textOutput.html'>textOutput()</a></code> when the functions are
used in an interactive RMarkdown document.</p></td>
  </tr>
  <tr>
    <th><p>sep</p></th>
    <td><p>A separator passed to <code>cat</code> to be appended after each
element.</p></td>
  </tr>
  </table>

  <div data-section="description">
  <h3>Description</h3>
  <p><code>renderPrint()</code> prints the result of <code>expr</code>, while <code>renderText()</code> pastes it
together into a single string. <code>renderPrint()</code> is equivalent to <code><a href='https://rdrr.io/r/base/print.html'>print()</a></code>;
<code>renderText()</code> is equivalent to <code><a href='https://rdrr.io/r/base/cat.html'>cat()</a></code>. Both functions capture all other
printed output generated while evaluating <code>expr</code>.</p>
<p><code>renderPrint()</code> is usually paired with <code><a href='textOutput.html'>verbatimTextOutput()</a></code>;
<code>renderText()</code> is usually paired with <code><a href='textOutput.html'>textOutput()</a></code>.</p>
  </div>


  <div data-section="details">
  <h3 class="hasAnchor" id="value"><a class="anchor" href="#value"></a>Value</h3>

  <p>For <code>renderPrint()</code>, note the given expression returns <code>NULL</code> then <code>NULL</code>
will actually be visible in the output. To display nothing, make your
function return <code><a href='https://rdrr.io/r/base/invisible.html'>invisible()</a></code>.</p>
  <h3 class="hasAnchor" id="details"><a class="anchor" href="#details"></a>Details</h3>

  <p>The corresponding HTML output tag can be anything (though <code>pre</code> is
recommended if you need a monospace font and whitespace preserved) and should
have the CSS class name <code>shiny-text-output</code>.</p>
  </div>

  <h3 class="hasAnchor" id="examples"><a class="anchor" href="#examples"></a>Examples</h3>
  <pre class="examples"><span class='fu'><a href='isolate.html'>isolate</a></span>({

<span class='co'># renderPrint captures any print output, converts it to a string, and</span>
<span class='co'># returns it</span>
<span class='no'>visFun</span> <span class='kw'>&lt;-</span> <span class='fu'>renderPrint</span>({ <span class='st'>"foo"</span> })
<span class='fu'>visFun</span>()
<span class='co'># '[1] "foo"'</span>

<span class='no'>invisFun</span> <span class='kw'>&lt;-</span> <span class='fu'>renderPrint</span>({ <span class='fu'><a href='https://rdrr.io/r/base/invisible.html'>invisible</a></span>(<span class='st'>"foo"</span>) })
<span class='fu'>invisFun</span>()
<span class='co'># ''</span>

<span class='no'>multiprintFun</span> <span class='kw'>&lt;-</span> <span class='fu'>renderPrint</span>({
  <span class='fu'><a href='https://rdrr.io/r/base/print.html'>print</a></span>(<span class='st'>"foo"</span>);
  <span class='st'>"bar"</span>
})
<span class='fu'>multiprintFun</span>()
<span class='co'># '[1] "foo"\n[1] "bar"'</span>

<span class='no'>nullFun</span> <span class='kw'>&lt;-</span> <span class='fu'>renderPrint</span>({ <span class='kw'>NULL</span> })
<span class='fu'>nullFun</span>()
<span class='co'># 'NULL'</span>

<span class='no'>invisNullFun</span> <span class='kw'>&lt;-</span> <span class='fu'>renderPrint</span>({ <span class='fu'><a href='https://rdrr.io/r/base/invisible.html'>invisible</a></span>(<span class='kw'>NULL</span>) })
<span class='fu'>invisNullFun</span>()
<span class='co'># ''</span>

<span class='no'>vecFun</span> <span class='kw'>&lt;-</span> <span class='fu'>renderPrint</span>({ <span class='fl'>1</span>:<span class='fl'>5</span> })
<span class='fu'>vecFun</span>()
<span class='co'># '[1] 1 2 3 4 5'</span>


<span class='co'># Contrast with renderText, which takes the value returned from the function</span>
<span class='co'># and uses cat() to convert it to a string</span>
<span class='no'>visFun</span> <span class='kw'>&lt;-</span> <span class='fu'>renderText</span>({ <span class='st'>"foo"</span> })
<span class='fu'>visFun</span>()
<span class='co'># 'foo'</span>

<span class='no'>invisFun</span> <span class='kw'>&lt;-</span> <span class='fu'>renderText</span>({ <span class='fu'><a href='https://rdrr.io/r/base/invisible.html'>invisible</a></span>(<span class='st'>"foo"</span>) })
<span class='fu'>invisFun</span>()
<span class='co'># 'foo'</span>

<span class='no'>multiprintFun</span> <span class='kw'>&lt;-</span> <span class='fu'>renderText</span>({
  <span class='fu'><a href='https://rdrr.io/r/base/print.html'>print</a></span>(<span class='st'>"foo"</span>);
  <span class='st'>"bar"</span>
})
<span class='fu'>multiprintFun</span>()
<span class='co'># 'bar'</span>

<span class='no'>nullFun</span> <span class='kw'>&lt;-</span> <span class='fu'>renderText</span>({ <span class='kw'>NULL</span> })
<span class='fu'>nullFun</span>()
<span class='co'># ''</span>

<span class='no'>invisNullFun</span> <span class='kw'>&lt;-</span> <span class='fu'>renderText</span>({ <span class='fu'><a href='https://rdrr.io/r/base/invisible.html'>invisible</a></span>(<span class='kw'>NULL</span>) })
<span class='fu'>invisNullFun</span>()
<span class='co'># ''</span>

<span class='no'>vecFun</span> <span class='kw'>&lt;-</span> <span class='fu'>renderText</span>({ <span class='fl'>1</span>:<span class='fl'>5</span> })
<span class='fu'>vecFun</span>()
<span class='co'># '1 2 3 4 5'</span>

})</pre>
</div>


```
