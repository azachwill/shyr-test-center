---
title: "validateCssUnit"
---

```{=html}

<pre class="code"><code class="r"><div>validateCssUnit(x)</div></code></pre>

<h3 data-swiftype-index="false">Arguments</h3>
<table class="arguments">
  <tr>
    <th>x</th>
    <td>The unit to validate. Will be treated as a
  number of pixels if a unit is not specified.</td>
  </tr>
</table>

<div data-section="Validate proper CSS formatting of a unit">
  <h3 data-swiftype-index="false">Validate proper CSS formatting of a unit</h3>
  
</div>

<div data-section="Value">
  <h3 data-swiftype-index="false">Value</h3>
  
  <p>A properly formatted CSS unit of length, if possible. Otherwise, will
  throw an error.</p>

</div>

<div data-section="Description">
  <h3 data-swiftype-index="false">Description</h3>
  
  <p>Checks that the argument is valid for use as a CSS unit of length.</p>

</div>

<div data-section="Details">
  <h3 data-swiftype-index="false">Details</h3>
  
  <p><code>NULL</code> and <code>NA</code> are returned unchanged.</p>

  <p>Single element numeric vectors are returned as a character vector with the
number plus a suffix of <code>"px"</code>.</p>

  <p>Single element character vectors must be <code>"auto"</code> or <code>"inherit"</code>,
or a number followed by a valid suffix: <code>px</code>, <code>%</code>, <code>em</code>,
<code>pt</code>, <code>in</code>, <code>cm</code>, <code>mm</code>, <code>ex</code>, or <code>pc</code>.</p>

  <p>Any other value will cause an error to be thrown.</p>

</div>

<h3 id="examples" data-swiftype-index="false">Examples</h3>
<pre class="examples"><div class='input'>validateCssUnit(&quot;10%&quot;)
</div>
<div class='output'>[1] &quot;10%&quot;
</div>
<div class='input'>validateCssUnit(400)  #treated as &#39;400px&#39;
</div>
<div class='output'>[1] &quot;400px&quot;
</div></pre>
<!-- <ul>
  <li>validateCssUnit</li>
</ul>
<ul>
  
</ul> -->
  
```
