---
title: "Create an plot or image output element â€” plotOutput"
---

```{=html}
<div class="reference">
  <small class="dont-index pkg-version">v1.7.2</small><small class="dont-index pipe">|</small><small class="dont-index github-source">Source: <a href="https://github.com/rstudio/shiny/blob/v1.7.2/R/bootstrap.R" class="external-link"><code>R/bootstrap.R</code></a></small>

  <div data-section="description"><h3>Description</h3><p>Render a <code><a href="renderPlot.html">renderPlot()</a></code> or <code><a href="renderImage.html">renderImage()</a></code> within an
application page.</p></div>

  <div data-section="usage"><div class="sourceCode"><pre class="sourceCode r"><code><span id="cb1-1"><a href="#cb1-1" tabindex="-1"></a><span class="fu">imageOutput</span>(</span>
<span id="cb1-2"><a href="#cb1-2" tabindex="-1"></a>  outputId,</span>
<span id="cb1-3"><a href="#cb1-3" tabindex="-1"></a>  <span class="at">width =</span> <span class="st">"100%"</span>,</span>
<span id="cb1-4"><a href="#cb1-4" tabindex="-1"></a>  <span class="at">height =</span> <span class="st">"400px"</span>,</span>
<span id="cb1-5"><a href="#cb1-5" tabindex="-1"></a>  <span class="at">click =</span> <span class="cn">NULL</span>,</span>
<span id="cb1-6"><a href="#cb1-6" tabindex="-1"></a>  <span class="at">dblclick =</span> <span class="cn">NULL</span>,</span>
<span id="cb1-7"><a href="#cb1-7" tabindex="-1"></a>  <span class="at">hover =</span> <span class="cn">NULL</span>,</span>
<span id="cb1-8"><a href="#cb1-8" tabindex="-1"></a>  <span class="at">brush =</span> <span class="cn">NULL</span>,</span>
<span id="cb1-9"><a href="#cb1-9" tabindex="-1"></a>  <span class="at">inline =</span> <span class="cn">FALSE</span></span>
<span id="cb1-10"><a href="#cb1-10" tabindex="-1"></a>)</span>
<span id="cb1-11"><a href="#cb1-11" tabindex="-1"></a></span>
<span id="cb1-12"><a href="#cb1-12" tabindex="-1"></a><span class="fu">plotOutput</span>(</span>
<span id="cb1-13"><a href="#cb1-13" tabindex="-1"></a>  outputId,</span>
<span id="cb1-14"><a href="#cb1-14" tabindex="-1"></a>  <span class="at">width =</span> <span class="st">"100%"</span>,</span>
<span id="cb1-15"><a href="#cb1-15" tabindex="-1"></a>  <span class="at">height =</span> <span class="st">"400px"</span>,</span>
<span id="cb1-16"><a href="#cb1-16" tabindex="-1"></a>  <span class="at">click =</span> <span class="cn">NULL</span>,</span>
<span id="cb1-17"><a href="#cb1-17" tabindex="-1"></a>  <span class="at">dblclick =</span> <span class="cn">NULL</span>,</span>
<span id="cb1-18"><a href="#cb1-18" tabindex="-1"></a>  <span class="at">hover =</span> <span class="cn">NULL</span>,</span>
<span id="cb1-19"><a href="#cb1-19" tabindex="-1"></a>  <span class="at">brush =</span> <span class="cn">NULL</span>,</span>
<span id="cb1-20"><a href="#cb1-20" tabindex="-1"></a>  <span class="at">inline =</span> <span class="cn">FALSE</span></span>
<span id="cb1-21"><a href="#cb1-21" tabindex="-1"></a>)</span></code></pre></div></div>

  <div data-section="arguments">
    <h3 id="arguments">Arguments</h3>
    <dl><dt>outputId</dt>
<dd><p>output variable to read the plot/image from.</p></dd>


<dt>width, height</dt>
<dd><p>Image width/height. Must be a valid CSS unit (like
<code>"100%"</code>, <code>"400px"</code>, <code>"auto"</code>) or a number, which will be
coerced to a string and have <code>"px"</code> appended. These two arguments are
ignored when <code>inline = TRUE</code>, in which case the width/height of a plot
must be specified in <code><a href="renderPlot.html">renderPlot()</a></code>. Note that, for height, using
<code>"auto"</code> or <code>"100%"</code> generally will not work as expected,
because of how height is computed with HTML/CSS.</p></dd>


<dt>click</dt>
<dd><p>This can be <code>NULL</code> (the default), a string, or an object
created by the <code><a href="clickOpts.html">clickOpts()</a></code> function. If you use a value like
<code>"plot_click"</code> (or equivalently, <code>clickOpts(id="plot_click")</code>),
the plot will send coordinates to the server whenever it is clicked, and
the value will be accessible via <code>input$plot_click</code>. The value will be
a named list  with <code>x</code> and <code>y</code> elements indicating the mouse
position.</p></dd>


<dt>dblclick</dt>
<dd><p>This is just like the <code>click</code> argument, but for
double-click events.</p></dd>


<dt>hover</dt>
<dd><p>Similar to the <code>click</code> argument, this can be <code>NULL</code>
(the default), a string, or an object created by the
<code><a href="clickOpts.html">hoverOpts()</a></code> function. If you use a value like
<code>"plot_hover"</code> (or equivalently, <code>hoverOpts(id="plot_hover")</code>),
the plot will send coordinates to the server pauses on the plot, and the
value will be accessible via <code>input$plot_hover</code>. The value will be a
named list with <code>x</code> and <code>y</code> elements indicating the mouse
position. To control the hover time or hover delay type, you must use
<code><a href="clickOpts.html">hoverOpts()</a></code>.</p></dd>


<dt>brush</dt>
<dd><p>Similar to the <code>click</code> argument, this can be <code>NULL</code>
(the default), a string, or an object created by the
<code><a href="brushOpts.html">brushOpts()</a></code> function. If you use a value like
<code>"plot_brush"</code> (or equivalently, <code>brushOpts(id="plot_brush")</code>),
the plot will allow the user to "brush" in the plotting area, and will send
information about the brushed area to the server, and the value will be
accessible via <code>input$plot_brush</code>. Brushing means that the user will
be able to draw a rectangle in the plotting area and drag it around. The
value will be a named list with <code>xmin</code>, <code>xmax</code>, <code>ymin</code>, and
<code>ymax</code> elements indicating the brush area. To control the brush
behavior, use <code><a href="brushOpts.html">brushOpts()</a></code>. Multiple
<code>imageOutput</code>/<code>plotOutput</code> calls may share the same <code>id</code>
value; brushing one image or plot will cause any other brushes with the
same <code>id</code> to disappear.</p></dd>


<dt>inline</dt>
<dd><p>use an inline (<code><a href="builder.html">span()</a></code>) or block container (<code><a href="builder.html">div()</a></code>)
for the output</p></dd>

</dl></div>
  <div data-section="value">
    <h3 id="value">Value</h3>
    

<p>A plot or image output element that can be included in a panel.</p>
  </div>
  <div data-section="note">
    <h3 id="note">Note</h3>
    <p>The arguments <code>clickId</code> and <code>hoverId</code> only work for R base graphics
(see the <span class="pkg"><a href="https://rdrr.io/r/graphics/graphics-package.html" class="external-link">graphics</a></span> package). They do
not work for <span class="pkg"><a href="https://rdrr.io/r/grid/grid-package.html" class="external-link">grid</a></span>-based graphics, such as
<span class="pkg">ggplot2</span>, <span class="pkg">lattice</span>, and so on.</p>
  </div>
  <div data-section="interactive-plots">
    <h3 id="interactive-plots">Interactive plots</h3>
    


<p>Plots and images in Shiny support mouse-based interaction, via clicking,
double-clicking, hovering, and brushing. When these interaction events
occur, the mouse coordinates will be sent to the server as <code>input$</code>
variables, as specified by <code>click</code>, <code>dblclick</code>, <code>hover</code>, or
<code>brush</code>.</p>
<p>For <code>plotOutput</code>, the coordinates will be sent scaled to the data
space, if possible. (At the moment, plots generated by base graphics and
ggplot2 support this scaling, although plots generated by lattice and
others do not.) If scaling is not possible, the raw pixel coordinates will
be sent. For <code>imageOutput</code>, the coordinates will be sent in raw pixel
coordinates.</p>
<p>With ggplot2 graphics, the code in <code>renderPlot</code> should return a ggplot
object; if instead the code prints the ggplot2 object with something like
<code>print(p)</code>, then the coordinates for interactive graphics will not be
properly scaled to the data space.</p>
  </div>
  <div data-section="see-also">
    <h3 id="see-also">See also</h3>
    <div class="dont-index"><p>For the corresponding server-side functions, see <code><a href="renderPlot.html">renderPlot()</a></code> and
<code><a href="renderImage.html">renderImage()</a></code>.</p></div>
  </div>

  <div data-section="examples">
    <h3 id="examples">Examples</h3>
    <div class="sourceCode"><pre class="sourceCode r"><code><span id="cb1-1"><a href="#cb1-1" tabindex="-1"></a><span class="co"># Only run these examples in interactive R sessions</span></span>
<span id="cb1-2"><a href="#cb1-2" tabindex="-1"></a><span class="cf">if</span> (<span class="fu">interactive</span>()) {</span>
<span id="cb1-3"><a href="#cb1-3" tabindex="-1"></a></span>
<span id="cb1-4"><a href="#cb1-4" tabindex="-1"></a><span class="co"># A basic shiny app with a plotOutput</span></span>
<span id="cb1-5"><a href="#cb1-5" tabindex="-1"></a><span class="fu">shinyApp</span>(</span>
<span id="cb1-6"><a href="#cb1-6" tabindex="-1"></a>  <span class="at">ui =</span> <span class="fu">fluidPage</span>(</span>
<span id="cb1-7"><a href="#cb1-7" tabindex="-1"></a>    <span class="fu">sidebarLayout</span>(</span>
<span id="cb1-8"><a href="#cb1-8" tabindex="-1"></a>      <span class="fu">sidebarPanel</span>(</span>
<span id="cb1-9"><a href="#cb1-9" tabindex="-1"></a>        <span class="fu">actionButton</span>(<span class="st">"newplot"</span>, <span class="st">"New plot"</span>)</span>
<span id="cb1-10"><a href="#cb1-10" tabindex="-1"></a>      ),</span>
<span id="cb1-11"><a href="#cb1-11" tabindex="-1"></a>      <span class="fu">mainPanel</span>(</span>
<span id="cb1-12"><a href="#cb1-12" tabindex="-1"></a>        <span class="fu">plotOutput</span>(<span class="st">"plot"</span>)</span>
<span id="cb1-13"><a href="#cb1-13" tabindex="-1"></a>      )</span>
<span id="cb1-14"><a href="#cb1-14" tabindex="-1"></a>    )</span>
<span id="cb1-15"><a href="#cb1-15" tabindex="-1"></a>  ),</span>
<span id="cb1-16"><a href="#cb1-16" tabindex="-1"></a>  <span class="at">server =</span> <span class="cf">function</span>(input, output) {</span>
<span id="cb1-17"><a href="#cb1-17" tabindex="-1"></a>    output<span class="sc">$</span>plot <span class="ot">&lt;-</span> <span class="fu">renderPlot</span>({</span>
<span id="cb1-18"><a href="#cb1-18" tabindex="-1"></a>      input<span class="sc">$</span>newplot</span>
<span id="cb1-19"><a href="#cb1-19" tabindex="-1"></a>      <span class="co"># Add a little noise to the cars data</span></span>
<span id="cb1-20"><a href="#cb1-20" tabindex="-1"></a>      cars2 <span class="ot">&lt;-</span> cars <span class="sc">+</span> <span class="fu">rnorm</span>(<span class="fu">nrow</span>(cars))</span>
<span id="cb1-21"><a href="#cb1-21" tabindex="-1"></a>      <span class="fu">plot</span>(cars2)</span>
<span id="cb1-22"><a href="#cb1-22" tabindex="-1"></a>    })</span>
<span id="cb1-23"><a href="#cb1-23" tabindex="-1"></a>  }</span>
<span id="cb1-24"><a href="#cb1-24" tabindex="-1"></a>)</span>
<span id="cb1-25"><a href="#cb1-25" tabindex="-1"></a></span>
<span id="cb1-26"><a href="#cb1-26" tabindex="-1"></a></span>
<span id="cb1-27"><a href="#cb1-27" tabindex="-1"></a><span class="co"># A demonstration of clicking, hovering, and brushing</span></span>
<span id="cb1-28"><a href="#cb1-28" tabindex="-1"></a><span class="fu">shinyApp</span>(</span>
<span id="cb1-29"><a href="#cb1-29" tabindex="-1"></a>  <span class="at">ui =</span> <span class="fu">basicPage</span>(</span>
<span id="cb1-30"><a href="#cb1-30" tabindex="-1"></a>    <span class="fu">fluidRow</span>(</span>
<span id="cb1-31"><a href="#cb1-31" tabindex="-1"></a>      <span class="fu">column</span>(<span class="at">width =</span> <span class="dv">4</span>,</span>
<span id="cb1-32"><a href="#cb1-32" tabindex="-1"></a>        <span class="fu">plotOutput</span>(<span class="st">"plot"</span>, <span class="at">height=</span><span class="dv">300</span>,</span>
<span id="cb1-33"><a href="#cb1-33" tabindex="-1"></a>          <span class="at">click =</span> <span class="st">"plot_click"</span>,  <span class="co"># Equiv, to click=clickOpts(id="plot_click")</span></span>
<span id="cb1-34"><a href="#cb1-34" tabindex="-1"></a>          <span class="at">hover =</span> <span class="fu">hoverOpts</span>(<span class="at">id =</span> <span class="st">"plot_hover"</span>, <span class="at">delayType =</span> <span class="st">"throttle"</span>),</span>
<span id="cb1-35"><a href="#cb1-35" tabindex="-1"></a>          <span class="at">brush =</span> <span class="fu">brushOpts</span>(<span class="at">id =</span> <span class="st">"plot_brush"</span>)</span>
<span id="cb1-36"><a href="#cb1-36" tabindex="-1"></a>        ),</span>
<span id="cb1-37"><a href="#cb1-37" tabindex="-1"></a>        <span class="fu">h4</span>(<span class="st">"Clicked points"</span>),</span>
<span id="cb1-38"><a href="#cb1-38" tabindex="-1"></a>        <span class="fu">tableOutput</span>(<span class="st">"plot_clickedpoints"</span>),</span>
<span id="cb1-39"><a href="#cb1-39" tabindex="-1"></a>        <span class="fu">h4</span>(<span class="st">"Brushed points"</span>),</span>
<span id="cb1-40"><a href="#cb1-40" tabindex="-1"></a>        <span class="fu">tableOutput</span>(<span class="st">"plot_brushedpoints"</span>)</span>
<span id="cb1-41"><a href="#cb1-41" tabindex="-1"></a>      ),</span>
<span id="cb1-42"><a href="#cb1-42" tabindex="-1"></a>      <span class="fu">column</span>(<span class="at">width =</span> <span class="dv">4</span>,</span>
<span id="cb1-43"><a href="#cb1-43" tabindex="-1"></a>        <span class="fu">verbatimTextOutput</span>(<span class="st">"plot_clickinfo"</span>),</span>
<span id="cb1-44"><a href="#cb1-44" tabindex="-1"></a>        <span class="fu">verbatimTextOutput</span>(<span class="st">"plot_hoverinfo"</span>)</span>
<span id="cb1-45"><a href="#cb1-45" tabindex="-1"></a>      ),</span>
<span id="cb1-46"><a href="#cb1-46" tabindex="-1"></a>      <span class="fu">column</span>(<span class="at">width =</span> <span class="dv">4</span>,</span>
<span id="cb1-47"><a href="#cb1-47" tabindex="-1"></a>        <span class="fu">wellPanel</span>(<span class="fu">actionButton</span>(<span class="st">"newplot"</span>, <span class="st">"New plot"</span>)),</span>
<span id="cb1-48"><a href="#cb1-48" tabindex="-1"></a>        <span class="fu">verbatimTextOutput</span>(<span class="st">"plot_brushinfo"</span>)</span>
<span id="cb1-49"><a href="#cb1-49" tabindex="-1"></a>      )</span>
<span id="cb1-50"><a href="#cb1-50" tabindex="-1"></a>    )</span>
<span id="cb1-51"><a href="#cb1-51" tabindex="-1"></a>  ),</span>
<span id="cb1-52"><a href="#cb1-52" tabindex="-1"></a>  <span class="at">server =</span> <span class="cf">function</span>(input, output, session) {</span>
<span id="cb1-53"><a href="#cb1-53" tabindex="-1"></a>    data <span class="ot">&lt;-</span> <span class="fu">reactive</span>({</span>
<span id="cb1-54"><a href="#cb1-54" tabindex="-1"></a>      input<span class="sc">$</span>newplot</span>
<span id="cb1-55"><a href="#cb1-55" tabindex="-1"></a>      <span class="co"># Add a little noise to the cars data so the points move</span></span>
<span id="cb1-56"><a href="#cb1-56" tabindex="-1"></a>      cars <span class="sc">+</span> <span class="fu">rnorm</span>(<span class="fu">nrow</span>(cars))</span>
<span id="cb1-57"><a href="#cb1-57" tabindex="-1"></a>    })</span>
<span id="cb1-58"><a href="#cb1-58" tabindex="-1"></a>    output<span class="sc">$</span>plot <span class="ot">&lt;-</span> <span class="fu">renderPlot</span>({</span>
<span id="cb1-59"><a href="#cb1-59" tabindex="-1"></a>      d <span class="ot">&lt;-</span> <span class="fu">data</span>()</span>
<span id="cb1-60"><a href="#cb1-60" tabindex="-1"></a>      <span class="fu">plot</span>(d<span class="sc">$</span>speed, d<span class="sc">$</span>dist)</span>
<span id="cb1-61"><a href="#cb1-61" tabindex="-1"></a>    })</span>
<span id="cb1-62"><a href="#cb1-62" tabindex="-1"></a>    output<span class="sc">$</span>plot_clickinfo <span class="ot">&lt;-</span> <span class="fu">renderPrint</span>({</span>
<span id="cb1-63"><a href="#cb1-63" tabindex="-1"></a>      <span class="fu">cat</span>(<span class="st">"Click:</span><span class="sc">\n</span><span class="st">"</span>)</span>
<span id="cb1-64"><a href="#cb1-64" tabindex="-1"></a>      <span class="fu">str</span>(input<span class="sc">$</span>plot_click)</span>
<span id="cb1-65"><a href="#cb1-65" tabindex="-1"></a>    })</span>
<span id="cb1-66"><a href="#cb1-66" tabindex="-1"></a>    output<span class="sc">$</span>plot_hoverinfo <span class="ot">&lt;-</span> <span class="fu">renderPrint</span>({</span>
<span id="cb1-67"><a href="#cb1-67" tabindex="-1"></a>      <span class="fu">cat</span>(<span class="st">"Hover (throttled):</span><span class="sc">\n</span><span class="st">"</span>)</span>
<span id="cb1-68"><a href="#cb1-68" tabindex="-1"></a>      <span class="fu">str</span>(input<span class="sc">$</span>plot_hover)</span>
<span id="cb1-69"><a href="#cb1-69" tabindex="-1"></a>    })</span>
<span id="cb1-70"><a href="#cb1-70" tabindex="-1"></a>    output<span class="sc">$</span>plot_brushinfo <span class="ot">&lt;-</span> <span class="fu">renderPrint</span>({</span>
<span id="cb1-71"><a href="#cb1-71" tabindex="-1"></a>      <span class="fu">cat</span>(<span class="st">"Brush (debounced):</span><span class="sc">\n</span><span class="st">"</span>)</span>
<span id="cb1-72"><a href="#cb1-72" tabindex="-1"></a>      <span class="fu">str</span>(input<span class="sc">$</span>plot_brush)</span>
<span id="cb1-73"><a href="#cb1-73" tabindex="-1"></a>    })</span>
<span id="cb1-74"><a href="#cb1-74" tabindex="-1"></a>    output<span class="sc">$</span>plot_clickedpoints <span class="ot">&lt;-</span> <span class="fu">renderTable</span>({</span>
<span id="cb1-75"><a href="#cb1-75" tabindex="-1"></a>      <span class="co"># For base graphics, we need to specify columns, though for ggplot2,</span></span>
<span id="cb1-76"><a href="#cb1-76" tabindex="-1"></a>      <span class="co"># it's usually not necessary.</span></span>
<span id="cb1-77"><a href="#cb1-77" tabindex="-1"></a>      res <span class="ot">&lt;-</span> <span class="fu">nearPoints</span>(<span class="fu">data</span>(), input<span class="sc">$</span>plot_click, <span class="st">"speed"</span>, <span class="st">"dist"</span>)</span>
<span id="cb1-78"><a href="#cb1-78" tabindex="-1"></a>      <span class="cf">if</span> (<span class="fu">nrow</span>(res) <span class="sc">==</span> <span class="dv">0</span>)</span>
<span id="cb1-79"><a href="#cb1-79" tabindex="-1"></a>        <span class="fu">return</span>()</span>
<span id="cb1-80"><a href="#cb1-80" tabindex="-1"></a>      res</span>
<span id="cb1-81"><a href="#cb1-81" tabindex="-1"></a>    })</span>
<span id="cb1-82"><a href="#cb1-82" tabindex="-1"></a>    output<span class="sc">$</span>plot_brushedpoints <span class="ot">&lt;-</span> <span class="fu">renderTable</span>({</span>
<span id="cb1-83"><a href="#cb1-83" tabindex="-1"></a>      res <span class="ot">&lt;-</span> <span class="fu">brushedPoints</span>(<span class="fu">data</span>(), input<span class="sc">$</span>plot_brush, <span class="st">"speed"</span>, <span class="st">"dist"</span>)</span>
<span id="cb1-84"><a href="#cb1-84" tabindex="-1"></a>      <span class="cf">if</span> (<span class="fu">nrow</span>(res) <span class="sc">==</span> <span class="dv">0</span>)</span>
<span id="cb1-85"><a href="#cb1-85" tabindex="-1"></a>        <span class="fu">return</span>()</span>
<span id="cb1-86"><a href="#cb1-86" tabindex="-1"></a>      res</span>
<span id="cb1-87"><a href="#cb1-87" tabindex="-1"></a>    })</span>
<span id="cb1-88"><a href="#cb1-88" tabindex="-1"></a>  }</span>
<span id="cb1-89"><a href="#cb1-89" tabindex="-1"></a>)</span>
<span id="cb1-90"><a href="#cb1-90" tabindex="-1"></a></span>
<span id="cb1-91"><a href="#cb1-91" tabindex="-1"></a></span>
<span id="cb1-92"><a href="#cb1-92" tabindex="-1"></a><span class="co"># Demo of clicking, hovering, brushing with imageOutput</span></span>
<span id="cb1-93"><a href="#cb1-93" tabindex="-1"></a><span class="co"># Note that coordinates are in pixels</span></span>
<span id="cb1-94"><a href="#cb1-94" tabindex="-1"></a><span class="fu">shinyApp</span>(</span>
<span id="cb1-95"><a href="#cb1-95" tabindex="-1"></a>  <span class="at">ui =</span> <span class="fu">basicPage</span>(</span>
<span id="cb1-96"><a href="#cb1-96" tabindex="-1"></a>    <span class="fu">fluidRow</span>(</span>
<span id="cb1-97"><a href="#cb1-97" tabindex="-1"></a>      <span class="fu">column</span>(<span class="at">width =</span> <span class="dv">4</span>,</span>
<span id="cb1-98"><a href="#cb1-98" tabindex="-1"></a>        <span class="fu">imageOutput</span>(<span class="st">"image"</span>, <span class="at">height=</span><span class="dv">300</span>,</span>
<span id="cb1-99"><a href="#cb1-99" tabindex="-1"></a>          <span class="at">click =</span> <span class="st">"image_click"</span>,</span>
<span id="cb1-100"><a href="#cb1-100" tabindex="-1"></a>          <span class="at">hover =</span> <span class="fu">hoverOpts</span>(</span>
<span id="cb1-101"><a href="#cb1-101" tabindex="-1"></a>            <span class="at">id =</span> <span class="st">"image_hover"</span>,</span>
<span id="cb1-102"><a href="#cb1-102" tabindex="-1"></a>            <span class="at">delay =</span> <span class="dv">500</span>,</span>
<span id="cb1-103"><a href="#cb1-103" tabindex="-1"></a>            <span class="at">delayType =</span> <span class="st">"throttle"</span></span>
<span id="cb1-104"><a href="#cb1-104" tabindex="-1"></a>          ),</span>
<span id="cb1-105"><a href="#cb1-105" tabindex="-1"></a>          <span class="at">brush =</span> <span class="fu">brushOpts</span>(<span class="at">id =</span> <span class="st">"image_brush"</span>)</span>
<span id="cb1-106"><a href="#cb1-106" tabindex="-1"></a>        )</span>
<span id="cb1-107"><a href="#cb1-107" tabindex="-1"></a>      ),</span>
<span id="cb1-108"><a href="#cb1-108" tabindex="-1"></a>      <span class="fu">column</span>(<span class="at">width =</span> <span class="dv">4</span>,</span>
<span id="cb1-109"><a href="#cb1-109" tabindex="-1"></a>        <span class="fu">verbatimTextOutput</span>(<span class="st">"image_clickinfo"</span>),</span>
<span id="cb1-110"><a href="#cb1-110" tabindex="-1"></a>        <span class="fu">verbatimTextOutput</span>(<span class="st">"image_hoverinfo"</span>)</span>
<span id="cb1-111"><a href="#cb1-111" tabindex="-1"></a>      ),</span>
<span id="cb1-112"><a href="#cb1-112" tabindex="-1"></a>      <span class="fu">column</span>(<span class="at">width =</span> <span class="dv">4</span>,</span>
<span id="cb1-113"><a href="#cb1-113" tabindex="-1"></a>        <span class="fu">wellPanel</span>(<span class="fu">actionButton</span>(<span class="st">"newimage"</span>, <span class="st">"New image"</span>)),</span>
<span id="cb1-114"><a href="#cb1-114" tabindex="-1"></a>        <span class="fu">verbatimTextOutput</span>(<span class="st">"image_brushinfo"</span>)</span>
<span id="cb1-115"><a href="#cb1-115" tabindex="-1"></a>      )</span>
<span id="cb1-116"><a href="#cb1-116" tabindex="-1"></a>    )</span>
<span id="cb1-117"><a href="#cb1-117" tabindex="-1"></a>  ),</span>
<span id="cb1-118"><a href="#cb1-118" tabindex="-1"></a>  <span class="at">server =</span> <span class="cf">function</span>(input, output, session) {</span>
<span id="cb1-119"><a href="#cb1-119" tabindex="-1"></a>    output<span class="sc">$</span>image <span class="ot">&lt;-</span> <span class="fu">renderImage</span>({</span>
<span id="cb1-120"><a href="#cb1-120" tabindex="-1"></a>      input<span class="sc">$</span>newimage</span>
<span id="cb1-121"><a href="#cb1-121" tabindex="-1"></a></span>
<span id="cb1-122"><a href="#cb1-122" tabindex="-1"></a>      <span class="co"># Get width and height of image output</span></span>
<span id="cb1-123"><a href="#cb1-123" tabindex="-1"></a>      width  <span class="ot">&lt;-</span> session<span class="sc">$</span>clientData<span class="sc">$</span>output_image_width</span>
<span id="cb1-124"><a href="#cb1-124" tabindex="-1"></a>      height <span class="ot">&lt;-</span> session<span class="sc">$</span>clientData<span class="sc">$</span>output_image_height</span>
<span id="cb1-125"><a href="#cb1-125" tabindex="-1"></a></span>
<span id="cb1-126"><a href="#cb1-126" tabindex="-1"></a>      <span class="co"># Write to a temporary PNG file</span></span>
<span id="cb1-127"><a href="#cb1-127" tabindex="-1"></a>      outfile <span class="ot">&lt;-</span> <span class="fu">tempfile</span>(<span class="at">fileext =</span> <span class="st">".png"</span>)</span>
<span id="cb1-128"><a href="#cb1-128" tabindex="-1"></a></span>
<span id="cb1-129"><a href="#cb1-129" tabindex="-1"></a>      <span class="fu">png</span>(outfile, <span class="at">width=</span>width, <span class="at">height=</span>height)</span>
<span id="cb1-130"><a href="#cb1-130" tabindex="-1"></a>      <span class="fu">plot</span>(<span class="fu">rnorm</span>(<span class="dv">200</span>), <span class="fu">rnorm</span>(<span class="dv">200</span>))</span>
<span id="cb1-131"><a href="#cb1-131" tabindex="-1"></a>      <span class="fu">dev.off</span>()</span>
<span id="cb1-132"><a href="#cb1-132" tabindex="-1"></a></span>
<span id="cb1-133"><a href="#cb1-133" tabindex="-1"></a>      <span class="co"># Return a list containing information about the image</span></span>
<span id="cb1-134"><a href="#cb1-134" tabindex="-1"></a>      <span class="fu">list</span>(</span>
<span id="cb1-135"><a href="#cb1-135" tabindex="-1"></a>        <span class="at">src =</span> outfile,</span>
<span id="cb1-136"><a href="#cb1-136" tabindex="-1"></a>        <span class="at">contentType =</span> <span class="st">"image/png"</span>,</span>
<span id="cb1-137"><a href="#cb1-137" tabindex="-1"></a>        <span class="at">width =</span> width,</span>
<span id="cb1-138"><a href="#cb1-138" tabindex="-1"></a>        <span class="at">height =</span> height,</span>
<span id="cb1-139"><a href="#cb1-139" tabindex="-1"></a>        <span class="at">alt =</span> <span class="st">"This is alternate text"</span></span>
<span id="cb1-140"><a href="#cb1-140" tabindex="-1"></a>      )</span>
<span id="cb1-141"><a href="#cb1-141" tabindex="-1"></a>    })</span>
<span id="cb1-142"><a href="#cb1-142" tabindex="-1"></a>    output<span class="sc">$</span>image_clickinfo <span class="ot">&lt;-</span> <span class="fu">renderPrint</span>({</span>
<span id="cb1-143"><a href="#cb1-143" tabindex="-1"></a>      <span class="fu">cat</span>(<span class="st">"Click:</span><span class="sc">\n</span><span class="st">"</span>)</span>
<span id="cb1-144"><a href="#cb1-144" tabindex="-1"></a>      <span class="fu">str</span>(input<span class="sc">$</span>image_click)</span>
<span id="cb1-145"><a href="#cb1-145" tabindex="-1"></a>    })</span>
<span id="cb1-146"><a href="#cb1-146" tabindex="-1"></a>    output<span class="sc">$</span>image_hoverinfo <span class="ot">&lt;-</span> <span class="fu">renderPrint</span>({</span>
<span id="cb1-147"><a href="#cb1-147" tabindex="-1"></a>      <span class="fu">cat</span>(<span class="st">"Hover (throttled):</span><span class="sc">\n</span><span class="st">"</span>)</span>
<span id="cb1-148"><a href="#cb1-148" tabindex="-1"></a>      <span class="fu">str</span>(input<span class="sc">$</span>image_hover)</span>
<span id="cb1-149"><a href="#cb1-149" tabindex="-1"></a>    })</span>
<span id="cb1-150"><a href="#cb1-150" tabindex="-1"></a>    output<span class="sc">$</span>image_brushinfo <span class="ot">&lt;-</span> <span class="fu">renderPrint</span>({</span>
<span id="cb1-151"><a href="#cb1-151" tabindex="-1"></a>      <span class="fu">cat</span>(<span class="st">"Brush (debounced):</span><span class="sc">\n</span><span class="st">"</span>)</span>
<span id="cb1-152"><a href="#cb1-152" tabindex="-1"></a>      <span class="fu">str</span>(input<span class="sc">$</span>image_brush)</span>
<span id="cb1-153"><a href="#cb1-153" tabindex="-1"></a>    })</span>
<span id="cb1-154"><a href="#cb1-154" tabindex="-1"></a>  }</span>
<span id="cb1-155"><a href="#cb1-155" tabindex="-1"></a>)</span>
<span id="cb1-156"><a href="#cb1-156" tabindex="-1"></a></span>
<span id="cb1-157"><a href="#cb1-157" tabindex="-1"></a>}</span></code></pre></div>
  </div>
</div>
```
