---
title: "Run Shiny Application â€” runApp"
---

```{=html}
<div class="reference">
  <small class="dont-index pkg-version">v1.7.2</small><small class="dont-index pipe">|</small><small class="dont-index github-source">Source: <a href="https://github.com/rstudio/shiny/blob/v1.7.2/R/runapp.R" class="external-link"><code>R/runapp.R</code></a></small>

  <div data-section="description"><h3>Description</h3><p>Runs a Shiny application. This function normally does not return; interrupt R
to stop the application (usually by pressing Ctrl+C or Esc).</p></div>

  <div data-section="usage"><div class="sourceCode"><pre class="sourceCode r"><code><span id="cb1-1"><a href="#cb1-1" tabindex="-1"></a><span class="fu">runApp</span>(</span>
<span id="cb1-2"><a href="#cb1-2" tabindex="-1"></a>  <span class="at">appDir =</span> <span class="fu">getwd</span>(),</span>
<span id="cb1-3"><a href="#cb1-3" tabindex="-1"></a>  <span class="at">port =</span> <span class="fu">getOption</span>(<span class="st">"shiny.port"</span>),</span>
<span id="cb1-4"><a href="#cb1-4" tabindex="-1"></a>  <span class="at">launch.browser =</span> <span class="fu">getOption</span>(<span class="st">"shiny.launch.browser"</span>, <span class="fu">interactive</span>()),</span>
<span id="cb1-5"><a href="#cb1-5" tabindex="-1"></a>  <span class="at">host =</span> <span class="fu">getOption</span>(<span class="st">"shiny.host"</span>, <span class="st">"127.0.0.1"</span>),</span>
<span id="cb1-6"><a href="#cb1-6" tabindex="-1"></a>  <span class="at">workerId =</span> <span class="st">""</span>,</span>
<span id="cb1-7"><a href="#cb1-7" tabindex="-1"></a>  <span class="at">quiet =</span> <span class="cn">FALSE</span>,</span>
<span id="cb1-8"><a href="#cb1-8" tabindex="-1"></a>  <span class="at">display.mode =</span> <span class="fu">c</span>(<span class="st">"auto"</span>, <span class="st">"normal"</span>, <span class="st">"showcase"</span>),</span>
<span id="cb1-9"><a href="#cb1-9" tabindex="-1"></a>  <span class="at">test.mode =</span> <span class="fu">getOption</span>(<span class="st">"shiny.testmode"</span>, <span class="cn">FALSE</span>)</span>
<span id="cb1-10"><a href="#cb1-10" tabindex="-1"></a>)</span></code></pre></div></div>

  <div data-section="arguments">
    <h3 id="arguments">Arguments</h3>
    <dl><dt>appDir</dt>
<dd><p>The application to run. Should be one of the following:</p><ul><li><p>A directory containing <code>server.R</code>, plus, either <code>ui.R</code> or
a <code>www</code> directory that contains the file <code>index.html</code>.</p></li>
<li><p>A directory containing <code>app.R</code>.</p></li>
<li><p>An <code>.R</code> file containing a Shiny application, ending with an
expression that produces a Shiny app object.</p></li>
<li><p>A list with <code>ui</code> and <code>server</code> components.</p></li>
<li><p>A Shiny app object created by <code><a href="shinyApp.html">shinyApp()</a></code>.</p></li>
</ul></dd>


<dt>port</dt>
<dd><p>The TCP port that the application should listen on. If the
<code>port</code> is not specified, and the <code>shiny.port</code> option is set (with
<code>options(shiny.port = XX)</code>), then that port will be used. Otherwise,
use a random port between 3000:8000, excluding ports that are blocked
by Google Chrome for being considered unsafe: 3659, 4045, 5060,
5061, 6000, 6566, 6665:6669 and 6697. Up to twenty random
ports will be tried.</p></dd>


<dt>launch.browser</dt>
<dd><p>If true, the system's default web browser will be
launched automatically after the app is started. Defaults to true in
interactive sessions only. The value of this parameter can also be a
function to call with the application's URL.</p></dd>


<dt>host</dt>
<dd><p>The IPv4 address that the application should listen on. Defaults
to the <code>shiny.host</code> option, if set, or <code>"127.0.0.1"</code> if not. See
Details.</p></dd>


<dt>workerId</dt>
<dd><p>Can generally be ignored. Exists to help some editions of
Shiny Server Pro route requests to the correct process.</p></dd>


<dt>quiet</dt>
<dd><p>Should Shiny status messages be shown? Defaults to FALSE.</p></dd>


<dt>display.mode</dt>
<dd><p>The mode in which to display the application. If set to
the value <code>"showcase"</code>, shows application code and metadata from a
<code>DESCRIPTION</code> file in the application directory alongside the
application. If set to <code>"normal"</code>, displays the application normally.
Defaults to <code>"auto"</code>, which displays the application in the mode given
in its <code>DESCRIPTION</code> file, if any.</p></dd>


<dt>test.mode</dt>
<dd><p>Should the application be launched in test mode? This is
only used for recording or running automated tests. Defaults to the
<code>shiny.testmode</code> option, or FALSE if the option is not set.</p></dd>

</dl></div>
  <div data-section="details">
    <h3 id="details">Details</h3>
    <p>The host parameter was introduced in Shiny 0.9.0. Its default value of
<code>"127.0.0.1"</code> means that, contrary to previous versions of Shiny, only
the current machine can access locally hosted Shiny apps. To allow other
clients to connect, use the value <code>"0.0.0.0"</code> instead (which was the
value that was hard-coded into Shiny in 0.8.0 and earlier).</p>
  </div>

  <div data-section="examples">
    <h3 id="examples">Examples</h3>
    <div class="sourceCode"><pre class="sourceCode r"><code><span id="cb1-1"><a href="#cb1-1" tabindex="-1"></a><span class="cf">if</span> (<span class="cn">FALSE</span>) {</span>
<span id="cb1-2"><a href="#cb1-2" tabindex="-1"></a><span class="co"># Start app in the current working directory</span></span>
<span id="cb1-3"><a href="#cb1-3" tabindex="-1"></a><span class="fu">runApp</span>()</span>
<span id="cb1-4"><a href="#cb1-4" tabindex="-1"></a></span>
<span id="cb1-5"><a href="#cb1-5" tabindex="-1"></a><span class="co"># Start app in a subdirectory called myapp</span></span>
<span id="cb1-6"><a href="#cb1-6" tabindex="-1"></a><span class="fu">runApp</span>(<span class="st">"myapp"</span>)</span>
<span id="cb1-7"><a href="#cb1-7" tabindex="-1"></a>}</span>
<span id="cb1-8"><a href="#cb1-8" tabindex="-1"></a></span>
<span id="cb1-9"><a href="#cb1-9" tabindex="-1"></a><span class="do">## Only run this example in interactive R sessions</span></span>
<span id="cb1-10"><a href="#cb1-10" tabindex="-1"></a><span class="cf">if</span> (<span class="fu">interactive</span>()) {</span>
<span id="cb1-11"><a href="#cb1-11" tabindex="-1"></a>  <span class="fu">options</span>(<span class="at">device.ask.default =</span> <span class="cn">FALSE</span>)</span>
<span id="cb1-12"><a href="#cb1-12" tabindex="-1"></a></span>
<span id="cb1-13"><a href="#cb1-13" tabindex="-1"></a>  <span class="co"># Apps can be run without a server.r and ui.r file</span></span>
<span id="cb1-14"><a href="#cb1-14" tabindex="-1"></a>  <span class="fu">runApp</span>(<span class="fu">list</span>(</span>
<span id="cb1-15"><a href="#cb1-15" tabindex="-1"></a>    <span class="at">ui =</span> <span class="fu">bootstrapPage</span>(</span>
<span id="cb1-16"><a href="#cb1-16" tabindex="-1"></a>      <span class="fu">numericInput</span>(<span class="st">'n'</span>, <span class="st">'Number of obs'</span>, <span class="dv">100</span>),</span>
<span id="cb1-17"><a href="#cb1-17" tabindex="-1"></a>      <span class="fu">plotOutput</span>(<span class="st">'plot'</span>)</span>
<span id="cb1-18"><a href="#cb1-18" tabindex="-1"></a>    ),</span>
<span id="cb1-19"><a href="#cb1-19" tabindex="-1"></a>    <span class="at">server =</span> <span class="cf">function</span>(input, output) {</span>
<span id="cb1-20"><a href="#cb1-20" tabindex="-1"></a>      output<span class="sc">$</span>plot <span class="ot">&lt;-</span> <span class="fu">renderPlot</span>({ <span class="fu">hist</span>(<span class="fu">runif</span>(input<span class="sc">$</span>n)) })</span>
<span id="cb1-21"><a href="#cb1-21" tabindex="-1"></a>    }</span>
<span id="cb1-22"><a href="#cb1-22" tabindex="-1"></a>  ))</span>
<span id="cb1-23"><a href="#cb1-23" tabindex="-1"></a></span>
<span id="cb1-24"><a href="#cb1-24" tabindex="-1"></a></span>
<span id="cb1-25"><a href="#cb1-25" tabindex="-1"></a>  <span class="co"># Running a Shiny app object</span></span>
<span id="cb1-26"><a href="#cb1-26" tabindex="-1"></a>  app <span class="ot">&lt;-</span> <span class="fu">shinyApp</span>(</span>
<span id="cb1-27"><a href="#cb1-27" tabindex="-1"></a>    <span class="at">ui =</span> <span class="fu">bootstrapPage</span>(</span>
<span id="cb1-28"><a href="#cb1-28" tabindex="-1"></a>      <span class="fu">numericInput</span>(<span class="st">'n'</span>, <span class="st">'Number of obs'</span>, <span class="dv">100</span>),</span>
<span id="cb1-29"><a href="#cb1-29" tabindex="-1"></a>      <span class="fu">plotOutput</span>(<span class="st">'plot'</span>)</span>
<span id="cb1-30"><a href="#cb1-30" tabindex="-1"></a>    ),</span>
<span id="cb1-31"><a href="#cb1-31" tabindex="-1"></a>    <span class="at">server =</span> <span class="cf">function</span>(input, output) {</span>
<span id="cb1-32"><a href="#cb1-32" tabindex="-1"></a>      output<span class="sc">$</span>plot <span class="ot">&lt;-</span> <span class="fu">renderPlot</span>({ <span class="fu">hist</span>(<span class="fu">runif</span>(input<span class="sc">$</span>n)) })</span>
<span id="cb1-33"><a href="#cb1-33" tabindex="-1"></a>    }</span>
<span id="cb1-34"><a href="#cb1-34" tabindex="-1"></a>  )</span>
<span id="cb1-35"><a href="#cb1-35" tabindex="-1"></a>  <span class="fu">runApp</span>(app)</span>
<span id="cb1-36"><a href="#cb1-36" tabindex="-1"></a>}</span></code></pre></div>
  </div>
</div>
```
