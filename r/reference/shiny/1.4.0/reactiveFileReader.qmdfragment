---
title: "Reactive file reader â€” reactiveFileReader"
---

```{=html}
<div class="reference">
  

  <pre class="code"><span class='fu'>reactiveFileReader</span>(<span class='no'>intervalMillis</span>, <span class='no'>session</span>, <span class='no'>filePath</span>, <span class='no'>readFunc</span>, <span class='no'>...</span>)</pre>
  
  <h3 class="hasAnchor" id="arguments"><a class="anchor" href="#arguments"></a>Arguments</h3>
  <table class="arguments">
  <colgroup><col class="name" /><col class="desc" /></colgroup>
  <tr>
    <th><p>intervalMillis</p></th>
    <td><p>Approximate number of milliseconds to wait between
checks of the file's last modified time. This can be a numeric value, or a
function that returns a numeric value.</p></td>
  </tr>
  <tr>
    <th><p>session</p></th>
    <td><p>The user session to associate this file reader with, or
<code>NULL</code> if none. If non-null, the reader will automatically stop when
the session ends.</p></td>
  </tr>
  <tr>
    <th><p>filePath</p></th>
    <td><p>The file path to poll against and to pass to <code>readFunc</code>.
This can either be a single-element character vector, or a function that
returns one.</p></td>
  </tr>
  <tr>
    <th><p>readFunc</p></th>
    <td><p>The function to use to read the file; must expect the first
argument to be the file path to read. The return value of this function is
used as the value of the reactive file reader.</p></td>
  </tr>
  <tr>
    <th><p>...</p></th>
    <td><p>Any additional arguments to pass to <code>readFunc</code> whenever it is
invoked.</p></td>
  </tr>
  </table>
  <div data-section="description">
  <h3>Description</h3>
  
  <p>Given a file path and read function, returns a reactive data source for the
contents of the file.</p>
  
  </div>


  <div data-section="details">
  <h3 class="hasAnchor" id="value"><a class="anchor" href="#value"></a>Value</h3>

  <p>A reactive expression that returns the contents of the file, and
automatically invalidates when the file changes on disk (as determined by
last modified time).</p>
    <h3 class="hasAnchor" id="details"><a class="anchor" href="#details"></a>Details</h3>

  <p><code>reactiveFileReader</code> works by periodically checking the file's last
modified time; if it has changed, then the file is re-read and any reactive
dependents are invalidated.</p>
<p>The <code>intervalMillis</code>, <code>filePath</code>, and <code>readFunc</code> functions
will each be executed in a reactive context; therefore, they may read
reactive values and reactive expressions.</p>
    <h3 class="hasAnchor" id="see-also"><a class="anchor" href="#see-also"></a>See also</h3>

  <div class='dont-index'><p><code><a href='reactivePoll.html'>reactivePoll()</a></code></p></div>
  
  </div>

  <h3 class="hasAnchor" id="examples"><a class="anchor" href="#examples"></a>Examples</h3>
  <pre class="examples"><span class='kw'>if</span> (<span class='fl'>FALSE</span>) {
<span class='co'># Per-session reactive file reader</span>
<span class='kw'>function</span>(<span class='no'>input</span>, <span class='no'>output</span>, <span class='no'>session</span>) {
  <span class='no'>fileData</span> <span class='kw'>&lt;-</span> <span class='fu'>reactiveFileReader</span>(<span class='fl'>1000</span>, <span class='no'>session</span>, <span class='st'>'data.csv'</span>, <span class='no'>read.csv</span>)

  <span class='no'>output</span>$<span class='no'>data</span> <span class='kw'>&lt;-</span> <span class='fu'><a href='renderTable.html'>renderTable</a></span>({
    <span class='fu'>fileData</span>()
  })
}

<span class='co'># Cross-session reactive file reader. In this example, all sessions share</span>
<span class='co'># the same reader, so read.csv only gets executed once no matter how many</span>
<span class='co'># user sessions are connected.</span>
<span class='no'>fileData</span> <span class='kw'>&lt;-</span> <span class='fu'>reactiveFileReader</span>(<span class='fl'>1000</span>, <span class='kw'>NULL</span>, <span class='st'>'data.csv'</span>, <span class='no'>read.csv</span>)
<span class='kw'>function</span>(<span class='no'>input</span>, <span class='no'>output</span>, <span class='no'>session</span>) {
  <span class='no'>output</span>$<span class='no'>data</span> <span class='kw'>&lt;-</span> <span class='fu'><a href='renderTable.html'>renderTable</a></span>({
    <span class='fu'>fileData</span>()
  })
}
}</pre>
</div>


```
