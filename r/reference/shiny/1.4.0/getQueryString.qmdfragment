---
title: "Get the query string / hash component from the URL â€” getQueryString"
---

```{=html}
<div class="reference">
  

  <pre class="code"><span class='fu'>getQueryString</span>(<span class='kw'>session</span> <span class='kw'>=</span> <span class='fu'><a href='domains.html'>getDefaultReactiveDomain</a></span>())

<span class='fu'>getUrlHash</span>(<span class='kw'>session</span> <span class='kw'>=</span> <span class='fu'><a href='domains.html'>getDefaultReactiveDomain</a></span>())</pre>
  
  <h3 class="hasAnchor" id="arguments"><a class="anchor" href="#arguments"></a>Arguments</h3>
  <table class="arguments">
  <colgroup><col class="name" /><col class="desc" /></colgroup>
  <tr>
    <th><p>session</p></th>
    <td><p>A Shiny session object.</p></td>
  </tr>
  </table>
  <div data-section="description">
  <h3>Description</h3>
  
  <p>Two user friendly wrappers for getting the query string and the hash
component from the app's URL.</p>
  
  </div>


  <div data-section="details">
  <h3 class="hasAnchor" id="value"><a class="anchor" href="#value"></a>Value</h3>

  <p>For <code>getQueryString</code>, a named list. For example, the query
string <code>?param1=value1&amp;param2=value2</code> becomes <code><a href='https://rdrr.io/r/base/list.html'>list(param1 = value1, param2 = value2)</a></code>. For <code>getUrlHash</code>, a character vector with
the hash (including the leading <code>#</code> symbol).</p>
    <h3 class="hasAnchor" id="details"><a class="anchor" href="#details"></a>Details</h3>

  <p>These can be particularly useful if you want to display different content
depending on the values in the query string / hash (e.g. instead of basing
the conditional on an input or a calculated reactive, you can base it on the
query string). However, note that, if you're changing the query string / hash
programatically from within the server code, you must use
<code>updateQueryString(_yourNewQueryString_, mode = "push")</code>. The default
<code>mode</code> for <code>updateQueryString</code> is <code>"replace"</code>, which doesn't
raise any events, so any observers or reactives that depend on it will
<em>not</em> get triggered. However, if you're changing the query string / hash
directly by typing directly in the browser and hitting enter, you don't have
to worry about this.</p>
    <h3 class="hasAnchor" id="see-also"><a class="anchor" href="#see-also"></a>See also</h3>

  <div class='dont-index'><p><code><a href='updateQueryString.html'>updateQueryString()</a></code></p></div>
  
  </div>

  <h3 class="hasAnchor" id="examples"><a class="anchor" href="#examples"></a>Examples</h3>
  <pre class="examples"><span class='co'>## Only run this example in interactive R sessions</span>
<span class='kw'>if</span> (<span class='fu'><a href='https://rdrr.io/r/base/interactive.html'>interactive</a></span>()) {

  <span class='co'>## App 1: getQueryString</span>
  <span class='co'>## Printing the value of the query string</span>
  <span class='co'>## (Use the back and forward buttons to see how the browser</span>
  <span class='co'>## keeps a record of each state)</span>
  <span class='fu'><a href='shinyApp.html'>shinyApp</a></span>(
    <span class='kw'>ui</span> <span class='kw'>=</span> <span class='fu'><a href='fluidPage.html'>fluidPage</a></span>(
      <span class='fu'><a href='textInput.html'>textInput</a></span>(<span class='st'>"txt"</span>, <span class='st'>"Enter new query string"</span>),
      <span class='fu'><a href='helpText.html'>helpText</a></span>(<span class='st'>"Format: ?param1=val1&amp;param2=val2"</span>),
      <span class='fu'><a href='actionButton.html'>actionButton</a></span>(<span class='st'>"go"</span>, <span class='st'>"Update"</span>),
      <span class='fu'><a href='builder.html'>hr</a></span>(),
      <span class='fu'><a href='verbatimTextOutput.html'>verbatimTextOutput</a></span>(<span class='st'>"query"</span>)
    ),
    <span class='kw'>server</span> <span class='kw'>=</span> <span class='kw'>function</span>(<span class='no'>input</span>, <span class='no'>output</span>, <span class='no'>session</span>) {
      <span class='fu'><a href='observeEvent.html'>observeEvent</a></span>(<span class='no'>input</span>$<span class='no'>go</span>, {
        <span class='fu'><a href='updateQueryString.html'>updateQueryString</a></span>(<span class='no'>input</span>$<span class='no'>txt</span>, <span class='kw'>mode</span> <span class='kw'>=</span> <span class='st'>"push"</span>)
      })
      <span class='no'>output</span>$<span class='no'>query</span> <span class='kw'>&lt;-</span> <span class='fu'><a href='renderText.html'>renderText</a></span>({
        <span class='no'>query</span> <span class='kw'>&lt;-</span> <span class='fu'>getQueryString</span>()
        <span class='no'>queryText</span> <span class='kw'>&lt;-</span> <span class='fu'><a href='https://rdrr.io/r/base/paste.html'>paste</a></span>(<span class='fu'><a href='https://rdrr.io/r/base/names.html'>names</a></span>(<span class='no'>query</span>), <span class='no'>query</span>,
                       <span class='kw'>sep</span> <span class='kw'>=</span> <span class='st'>"="</span>, <span class='kw'>collapse</span><span class='kw'>=</span><span class='st'>", "</span>)
        <span class='fu'><a href='https://rdrr.io/r/base/paste.html'>paste</a></span>(<span class='st'>"Your query string is:\n"</span>, <span class='no'>queryText</span>)
      })
    }
  )

  <span class='co'>## App 2: getUrlHash</span>
  <span class='co'>## Printing the value of the URL hash</span>
  <span class='co'>## (Use the back and forward buttons to see how the browser</span>
  <span class='co'>## keeps a record of each state)</span>
  <span class='fu'><a href='shinyApp.html'>shinyApp</a></span>(
    <span class='kw'>ui</span> <span class='kw'>=</span> <span class='fu'><a href='fluidPage.html'>fluidPage</a></span>(
      <span class='fu'><a href='textInput.html'>textInput</a></span>(<span class='st'>"txt"</span>, <span class='st'>"Enter new hash"</span>),
      <span class='fu'><a href='helpText.html'>helpText</a></span>(<span class='st'>"Format: #hash"</span>),
      <span class='fu'><a href='actionButton.html'>actionButton</a></span>(<span class='st'>"go"</span>, <span class='st'>"Update"</span>),
      <span class='fu'><a href='builder.html'>hr</a></span>(),
      <span class='fu'><a href='verbatimTextOutput.html'>verbatimTextOutput</a></span>(<span class='st'>"hash"</span>)
    ),
    <span class='kw'>server</span> <span class='kw'>=</span> <span class='kw'>function</span>(<span class='no'>input</span>, <span class='no'>output</span>, <span class='no'>session</span>) {
      <span class='fu'><a href='observeEvent.html'>observeEvent</a></span>(<span class='no'>input</span>$<span class='no'>go</span>, {
        <span class='fu'><a href='updateQueryString.html'>updateQueryString</a></span>(<span class='no'>input</span>$<span class='no'>txt</span>, <span class='kw'>mode</span> <span class='kw'>=</span> <span class='st'>"push"</span>)
      })
      <span class='no'>output</span>$<span class='no'>hash</span> <span class='kw'>&lt;-</span> <span class='fu'><a href='renderText.html'>renderText</a></span>({
        <span class='no'>hash</span> <span class='kw'>&lt;-</span> <span class='fu'>getUrlHash</span>()
        <span class='fu'><a href='https://rdrr.io/r/base/paste.html'>paste</a></span>(<span class='st'>"Your hash is:\n"</span>, <span class='no'>hash</span>)
      })
    }
  )
}</pre>
</div>


```
