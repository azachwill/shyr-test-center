---
title: "Remove UI objects â€” removeUI"
---

```{=html}
<div class="reference">
  

  <pre class="code"><span class='fu'>removeUI</span>(<span class='no'>selector</span>, <span class='kw'>multiple</span> <span class='kw'>=</span> <span class='fl'>FALSE</span>, <span class='kw'>immediate</span> <span class='kw'>=</span> <span class='fl'>FALSE</span>,
  <span class='kw'>session</span> <span class='kw'>=</span> <span class='fu'><a href='domains.html'>getDefaultReactiveDomain</a></span>())</pre>
  
  <h3 class="hasAnchor" id="arguments"><a class="anchor" href="#arguments"></a>Arguments</h3>
  <table class="arguments">
  <colgroup><col class="name" /><col class="desc" /></colgroup>
  <tr>
    <th><p>selector</p></th>
    <td><p>A string that is accepted by jQuery's selector (i.e. the
string <code>s</code> to be placed in a <code>$(s)</code> jQuery call). This selector
will determine the element(s) to be removed. If you want to remove a
Shiny input or output, note that many of these are wrapped in <code>div</code>s,
so you may need to use a somewhat complex selector --- see the Examples below.
(Alternatively, you could also wrap the inputs/outputs that you want to be
able to remove easily in a <code>div</code> with an id.)</p></td>
  </tr>
  <tr>
    <th><p>multiple</p></th>
    <td><p>In case your selector matches more than one element,
<code>multiple</code> determines whether Shiny should remove all the matched
elements or just the first matched element (default).</p></td>
  </tr>
  <tr>
    <th><p>immediate</p></th>
    <td><p>Whether the element(s) should be immediately removed from
the app when you call <code>removeUI</code>, or whether Shiny should wait until
all outputs have been updated and all observers have been run (default).</p></td>
  </tr>
  <tr>
    <th><p>session</p></th>
    <td><p>The shiny session within which to call <code>removeUI</code>.</p></td>
  </tr>
  </table>
  <div data-section="description">
  <h3>Description</h3>
  
  <p>Remove a UI object from the app.</p>
  
  </div>


  <div data-section="details">
  <h3 class="hasAnchor" id="details"><a class="anchor" href="#details"></a>Details</h3>

  <p>This function allows you to remove any part of your UI. Once <code>removeUI</code>
is executed on some element, it is gone forever.</p>
<p>While it may be a particularly useful pattern to pair this with
<code><a href='insertUI.html'>insertUI()</a></code> (to remove some UI you had previously inserted),
there is no restriction on what you can use <code>removeUI</code> on. Any
element that can be selected through a jQuery selector can be removed
through this function.</p>
    <h3 class="hasAnchor" id="see-also"><a class="anchor" href="#see-also"></a>See also</h3>

  <div class='dont-index'><p><code><a href='insertUI.html'>insertUI()</a></code></p></div>
  
  </div>

  <h3 class="hasAnchor" id="examples"><a class="anchor" href="#examples"></a>Examples</h3>
  <pre class="examples"><span class='co'>## Only run this example in interactive R sessions</span>
<span class='kw'>if</span> (<span class='fu'><a href='https://rdrr.io/r/base/interactive.html'>interactive</a></span>()) {
<span class='co'># Define UI</span>
<span class='no'>ui</span> <span class='kw'>&lt;-</span> <span class='fu'><a href='fluidPage.html'>fluidPage</a></span>(
  <span class='fu'><a href='actionButton.html'>actionButton</a></span>(<span class='st'>"rmv"</span>, <span class='st'>"Remove UI"</span>),
  <span class='fu'><a href='textInput.html'>textInput</a></span>(<span class='st'>"txt"</span>, <span class='st'>"This is no longer useful"</span>)
)

<span class='co'># Server logic</span>
<span class='no'>server</span> <span class='kw'>&lt;-</span> <span class='kw'>function</span>(<span class='no'>input</span>, <span class='no'>output</span>, <span class='no'>session</span>) {
  <span class='fu'><a href='observeEvent.html'>observeEvent</a></span>(<span class='no'>input</span>$<span class='no'>rmv</span>, {
    <span class='fu'>removeUI</span>(
      <span class='kw'>selector</span> <span class='kw'>=</span> <span class='st'>"div:has(&gt; #txt)"</span>
    )
  })
}

<span class='co'># Complete app with UI and server components</span>
<span class='fu'><a href='shinyApp.html'>shinyApp</a></span>(<span class='no'>ui</span>, <span class='no'>server</span>)
}</pre>
</div>


```
