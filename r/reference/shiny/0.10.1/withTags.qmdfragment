---
title: "withTags"
---

```{=html}

<pre class="code"><code class="r"><div>withTags(code)</div></code></pre>

<h3 data-swiftype-index="false">Arguments</h3>
<table class="arguments">
  <tr>
    <th>code</th>
    <td>A set of tags.</td>
  </tr>
</table>

<div data-section="Description">
  <h3 data-swiftype-index="false">Description</h3>
  
  <p>This function makes it simpler to write HTML-generating code. Instead of
needing to specify <code>tags</code> each time a tag function is used, as in
<code>tags$div()</code> and <code>tags$p()</code>, code inside <code>withTags</code> is
evaluated with <code>tags</code> searched first, so you can simply use
<code>div()</code> and <code>p()</code>.</p>

</div>

<div data-section="Details">
  <h3 data-swiftype-index="false">Details</h3>
  
  <p>If your code uses an object which happens to have the same name as an
HTML tag function, such as <code>source()</code> or <code>summary()</code>, it will call
the tag function. To call the intended (non-tags function), specify the
namespace, as in <code>base::source()</code> or <code>base::summary()</code>.</p>

</div>

<h3 id="examples" data-swiftype-index="false">Examples</h3>
<pre class="examples"><div class='input'># Using tags$ each time
tags$div(class = &quot;myclass&quot;,
  tags$h3(&quot;header&quot;),
  tags$p(&quot;text&quot;)
)
</div>
<div class='output'>&lt;div class=&quot;myclass&quot;&gt;
  &lt;h3&gt;header&lt;/h3&gt;
  &lt;p&gt;text&lt;/p&gt;
&lt;/div&gt; 
</div>
<div class='input'>
# Equivalent to above, but using withTags
withTags(
  div(class = &quot;myclass&quot;,
    h3(&quot;header&quot;),
    p(&quot;text&quot;)
  )
)
</div>
<div class='output'>&lt;div class=&quot;myclass&quot;&gt;
  &lt;h3&gt;header&lt;/h3&gt;
  &lt;p&gt;text&lt;/p&gt;
&lt;/div&gt; 
</div></pre>
<!-- <ul>
  <li>withTags</li>
</ul>
<ul>
  
</ul> -->
  
```
