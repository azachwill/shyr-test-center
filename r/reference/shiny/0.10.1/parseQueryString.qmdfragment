---
title: "parseQueryString"
---

```{=html}

<pre class="code"><code class="r"><div>parseQueryString(str)</div></code></pre>

<h3 data-swiftype-index="false">Arguments</h3>
<table class="arguments">
  <tr>
    <th>str</th>
    <td>The query string. It can have a leading <code>"?"</code> or not.</td>
  </tr>
</table>

<div data-section="Parse a GET query string from a URL">
  <h3 data-swiftype-index="false">Parse a GET query string from a URL</h3>
  
</div>

<div data-section="Description">
  <h3 data-swiftype-index="false">Description</h3>
  
  <p>Returns a named character vector of key-value pairs.</p>

</div>

<h3 id="examples" data-swiftype-index="false">Examples</h3>
<pre class="examples"><div class='input'>parseQueryString(&quot;?foo=1&amp;bar=b%20a%20r&quot;)
</div>
<div class='output'>$foo
[1] &quot;1&quot;

$bar
[1] &quot;b a r&quot;

</div>
<div class='input'>
## &lt;strong&gt;Not run&lt;/strong&gt;: 
# # Example of usage within a Shiny app
# shinyServer(function(input, output, clientData) {
# 
#   output$queryText &lt;- renderText({
#     query &lt;- parseQueryString(clientData$url_search)
# 
#     # Ways of accessing the values
#     if (as.numeric(query$foo) == 1) {
#       # Do something
#     }
#     if (query[[&quot;bar&quot;]] == &quot;targetstring&quot;) {
#       # Do something else
#     }
# 
#     # Return a string with key-value pairs
#     paste(names(query), query, sep = &quot;=&quot;, collapse=&quot;, &quot;)
#   })
# })
# ## &lt;strong&gt;End(Not run)&lt;/strong&gt;
</div></pre>
<!-- <ul>
  <li>parseQueryString</li>
</ul>
<ul>
  
</ul> -->
  
```
