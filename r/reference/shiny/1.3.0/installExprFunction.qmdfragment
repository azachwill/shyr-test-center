---
title: "installExprFunction"
---

```{=html}

<pre class="code"><code class="r"><span class="functioncall"><a href='installExprFunction.html'>installExprFunction</a></span><span class="keyword">(</span><span class="symbol">expr</span><span class="keyword">,</span> <span class="symbol">name</span><span class="keyword">,</span> <span class="argument">eval.env</span>&nbsp;<span class="argument">=</span>&nbsp;<span class="functioncall"><a href='http://www.rdocumentation.org/packages/base/topics/sys.parent'>parent.frame</a></span><span class="keyword">(</span><span class="number">2</span><span class="keyword">)</span><span class="keyword">,</span>
  <span class="argument">quoted</span>&nbsp;<span class="argument">=</span>&nbsp;<span class="number">FALSE</span><span class="keyword">,</span> <span class="argument">assign.env</span>&nbsp;<span class="argument">=</span>&nbsp;<span class="functioncall"><a href='http://www.rdocumentation.org/packages/base/topics/sys.parent'>parent.frame</a></span><span class="keyword">(</span><span class="number">1</span><span class="keyword">)</span><span class="keyword">,</span>
  <span class="argument">label</span>&nbsp;<span class="argument">=</span>&nbsp;<span class="functioncall"><a href='http://www.rdocumentation.org/packages/base/topics/deparse'>deparse</a></span><span class="keyword">(</span><span class="functioncall"><a href='http://www.rdocumentation.org/packages/base/topics/sys.parent'>sys.call</a></span><span class="keyword">(</span><span class="keyword">-</span><span class="number">1</span><span class="keyword">)</span><span class="keyword">[[</span><span class="number">1</span><span class="keyword">]</span><span class="keyword">]</span><span class="keyword">)</span><span class="keyword">,</span> <span class="argument">wrappedWithLabel</span>&nbsp;<span class="argument">=</span>&nbsp;<span class="number">TRUE</span><span class="keyword">,</span>
  <span class="argument">..stacktraceon</span>&nbsp;<span class="argument">=</span>&nbsp;<span class="number">FALSE</span><span class="keyword">)</span></code></pre>

<h3 data-swiftype-index="false">Arguments</h3>
<table class="arguments">
  <tr>
    <th>expr</th>
    <td>A quoted or unquoted expression</td>
  </tr>
  <tr>
    <th>name</th>
    <td>The name the function should be given</td>
  </tr>
  <tr>
    <th>eval.env</th>
    <td>The desired environment for the function. Defaults to the
calling environment two steps back.</td>
  </tr>
  <tr>
    <th>quoted</th>
    <td>Is the expression quoted?</td>
  </tr>
  <tr>
    <th>assign.env</th>
    <td>The environment in which the function should be assigned.</td>
  </tr>
  <tr>
    <th>label</th>
    <td>A label for the object to be shown in the debugger. Defaults to
the name of the calling function.</td>
  </tr>
  <tr>
    <th>wrappedWithLabel, ..stacktraceon</th>
    <td>Advanced use only. For stack manipulation purposes; see
<code><a href='stacktrace.html'>stacktrace</a></code>.</td>
  </tr>
</table>

<div data-section="Description">
  <h3 data-swiftype-index="false">Description</h3>

  <p>Installs an expression in the given environment as a function, and registers
debug hooks so that breakpoints may be set in the function.</p>

</div>

<div data-section="Details">
  <h3 data-swiftype-index="false">Details</h3>

  <p>This function can replace <code>exprToFunction</code> as follows: we may use
<code>func &lt;- exprToFunction(expr)</code> if we do not want the debug hooks, or
<code>installExprFunction(expr, &quot;func&quot;)</code> if we do. Both approaches create a
function named <code>func</code> in the current environment.</p>

</div>
<!-- <ul>
  <li>installExprFunction</li>
</ul>
<ul>
  
</ul> -->

<div data-swiftype-index="false">
<h3>See also</h3>
  <p>Wraps <code><a href='exprToFunction.html'>exprToFunction</a></code>; see that method&#39;s documentation
  for more documentation and examples.</p>
</div>
```
