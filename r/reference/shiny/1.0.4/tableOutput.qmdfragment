---
title: "tableOutput"
---

```{=html}

<pre class="code"><code class="r"><span class="functioncall"><a href='tableOutput.html'>tableOutput</a></span><span class="keyword">(</span><span class="symbol">outputId</span><span class="keyword">)</span>

<span class="functioncall"><a href='tableOutput.html'>dataTableOutput</a></span><span class="keyword">(</span><span class="symbol">outputId</span><span class="keyword">)</span></code></pre>

<h3 data-swiftype-index="false">Arguments</h3>
<table class="arguments">
  <tr>
    <th>outputId</th>
    <td>output variable to read the table from</td>
  </tr>
</table>

<div data-section="Value">
  <h3 data-swiftype-index="false">Value</h3>

  <p><dl>
A table output element that can be included in a panel
</dl></p>

</div>

<div data-section="Description">
  <h3 data-swiftype-index="false">Description</h3>

  <p>Render a <code><a href='renderTable.html'>renderTable</a></code> or <code><a href='renderDataTable.html'>renderDataTable</a></code> within an
application page. <code>renderTable</code> uses a standard HTML table, while
<code>renderDataTable</code> uses the DataTables Javascript library to create an
interactive table with more features.</p>

</div>

<h3 id="examples" data-swiftype-index="false">Examples</h3>
<pre class="examples"><code class="r"><div class='input'><span class="comment">## Only run this example in interactive R sessions</span>
<span class="keyword">if</span> <span class="keyword">(</span><span class="functioncall"><a href='http://www.rdocumentation.org/packages/base/topics/interactive'>interactive</a></span><span class="keyword">(</span><span class="keyword">)</span><span class="keyword">)</span> <span class="keyword">{</span>
  <span class="comment"># table example</span>
  <span class="functioncall"><a href='shinyApp.html'>shinyApp</a></span><span class="keyword">(</span>
    <span class="argument">ui</span> <span class="argument">=</span> <span class="functioncall"><a href='fluidPage.html'>fluidPage</a></span><span class="keyword">(</span>
      <span class="functioncall"><a href='fluidPage.html'>fluidRow</a></span><span class="keyword">(</span>
        <span class="functioncall"><a href='column.html'>column</a></span><span class="keyword">(</span><span class="number">12</span><span class="keyword">,</span>
          <span class="functioncall"><a href='tableOutput.html'>tableOutput</a></span><span class="keyword">(</span><span class="string">'table'</span><span class="keyword">)</span>
        <span class="keyword">)</span>
      <span class="keyword">)</span>
    <span class="keyword">)</span><span class="keyword">,</span>
    <span class="argument">server</span> <span class="argument">=</span> <span class="keyword">function</span><span class="keyword">(</span><span class="formalargs">input</span><span class="keyword">,</span> <span class="formalargs">output</span><span class="keyword">)</span> <span class="keyword">{</span>
      <span class="symbol">output</span><span class="keyword">$</span><span class="symbol">table</span> <span class="assignement">&lt;-</span> <span class="functioncall"><a href='renderTable.html'>renderTable</a></span><span class="keyword">(</span><span class="symbol">iris</span><span class="keyword">)</span>
    <span class="keyword">}</span>
  <span class="keyword">)</span>


  <span class="comment"># DataTables example</span>
  <span class="functioncall"><a href='shinyApp.html'>shinyApp</a></span><span class="keyword">(</span>
    <span class="argument">ui</span> <span class="argument">=</span> <span class="functioncall"><a href='fluidPage.html'>fluidPage</a></span><span class="keyword">(</span>
      <span class="functioncall"><a href='fluidPage.html'>fluidRow</a></span><span class="keyword">(</span>
        <span class="functioncall"><a href='column.html'>column</a></span><span class="keyword">(</span><span class="number">12</span><span class="keyword">,</span>
          <span class="functioncall"><a href='tableOutput.html'>dataTableOutput</a></span><span class="keyword">(</span><span class="string">'table'</span><span class="keyword">)</span>
        <span class="keyword">)</span>
      <span class="keyword">)</span>
    <span class="keyword">)</span><span class="keyword">,</span>
    <span class="argument">server</span> <span class="argument">=</span> <span class="keyword">function</span><span class="keyword">(</span><span class="formalargs">input</span><span class="keyword">,</span> <span class="formalargs">output</span><span class="keyword">)</span> <span class="keyword">{</span>
      <span class="symbol">output</span><span class="keyword">$</span><span class="symbol">table</span> <span class="assignement">&lt;-</span> <span class="functioncall"><a href='renderDataTable.html'>renderDataTable</a></span><span class="keyword">(</span><span class="symbol">iris</span><span class="keyword">)</span>
    <span class="keyword">}</span>
  <span class="keyword">)</span>
<span class="keyword">}</span></div></code></pre>
<!-- <ul>
  <li>tableOutput</li><li>dataTableOutput</li>
</ul>
<ul>
  
</ul> -->

<div data-swiftype-index="false">
<h3>See also</h3>
  <p><code><a href='renderTable.html'>renderTable</a></code>, <code><a href='renderDataTable.html'>renderDataTable</a></code>.</p>
</div>
```
