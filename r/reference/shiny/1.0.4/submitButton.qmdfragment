---
title: "submitButton"
---

```{=html}

<pre class="code"><code class="r"><span class="functioncall"><a href='submitButton.html'>submitButton</a></span><span class="keyword">(</span><span class="argument">text</span>&nbsp;<span class="argument">=</span>&nbsp;<span class="string">"Apply Changes"</span><span class="keyword">,</span> <span class="argument">icon</span>&nbsp;<span class="argument">=</span>&nbsp;NULL<span class="keyword">,</span> <span class="argument">width</span>&nbsp;<span class="argument">=</span>&nbsp;NULL<span class="keyword">)</span></code></pre>

<h3 data-swiftype-index="false">Arguments</h3>
<table class="arguments">
  <tr>
    <th>text</th>
    <td>Button caption</td>
  </tr>
  <tr>
    <th>icon</th>
    <td>Optional <code><a href='icon.html'>icon</a></code> to appear on the button</td>
  </tr>
  <tr>
    <th>width</th>
    <td>The width of the button, e.g. <code>&#39;400px&#39;</code>, or <code>&#39;100%&#39;</code>;
see <code><a href='validateCssUnit.html'>validateCssUnit</a></code>.</td>
  </tr>
</table>

<div data-section="Value">
  <h3 data-swiftype-index="false">Value</h3>

  <p><dl>
A submit button that can be added to a UI definition.
</dl></p>

</div>

<div data-section="Description">
  <h3 data-swiftype-index="false">Description</h3>

  <p>Create a submit button for an app. Apps that include a submit
button do not automatically update their outputs when inputs change,
rather they wait until the user explicitly clicks the submit button.
The use of <code>submitButton</code> is generally discouraged in favor of
the more versatile <code><a href='actionButton.html'>actionButton</a></code> (see details below).</p>

</div>

<div data-section="Details">
  <h3 data-swiftype-index="false">Details</h3>

  <p>Submit buttons are unusual Shiny inputs, and we recommend using
<code><a href='actionButton.html'>actionButton</a></code> instead of <code>submitButton</code> when you
want to delay a reaction.
See <a href = 'https://shiny.posit.co/articles/action-buttons.html'>this
article</a> for more information (including a demo of how to &quot;translate&quot;
code using a <code>submitButton</code> to code using an <code>actionButton</code>).</p>

  <p>In essence, the presence of a submit button stops all inputs from
sending their values automatically to the server. This means, for
instance, that if there are <em>two</em> submit buttons in the same app,
clicking either one will cause all inputs in the app to send their
values to the server. This is probably not what you&#39;d want, which is
why submit button are unwieldy for all but the simplest apps. There
are other problems with submit buttons: for example, dynamically
created submit buttons (for example, with <code><a href='renderUI.html'>renderUI</a></code>
or <code><a href='insertUI.html'>insertUI</a></code>) will not work.</p>

</div>

<h3 id="examples" data-swiftype-index="false">Examples</h3>
<pre class="examples"><code class="r"><div class='input'><span class="keyword">if</span> <span class="keyword">(</span><span class="functioncall"><a href='http://www.rdocumentation.org/packages/base/topics/interactive'>interactive</a></span><span class="keyword">(</span><span class="keyword">)</span><span class="keyword">)</span> <span class="keyword">{</span>

<span class="functioncall"><a href='shinyApp.html'>shinyApp</a></span><span class="keyword">(</span>
  <span class="argument">ui</span> <span class="argument">=</span> <span class="functioncall"><a href='bootstrapPage.html'>basicPage</a></span><span class="keyword">(</span>
    <span class="functioncall"><a href='numericInput.html'>numericInput</a></span><span class="keyword">(</span><span class="string">"num"</span><span class="keyword">,</span> <span class="argument">label</span> <span class="argument">=</span> <span class="string">"Make changes"</span><span class="keyword">,</span> <span class="argument">value</span> <span class="argument">=</span> <span class="number">1</span><span class="keyword">)</span><span class="keyword">,</span>
    <span class="functioncall"><a href='submitButton.html'>submitButton</a></span><span class="keyword">(</span><span class="string">"Update View"</span><span class="keyword">,</span> <span class="functioncall"><a href='icon.html'>icon</a></span><span class="keyword">(</span><span class="string">"refresh"</span><span class="keyword">)</span><span class="keyword">)</span><span class="keyword">,</span>
    <span class="functioncall"><a href='helpText.html'>helpText</a></span><span class="keyword">(</span><span class="string">"When you click the button above, you should see"</span><span class="keyword">,</span>
             <span class="string">"the output below update to reflect the value you"</span><span class="keyword">,</span>
             <span class="string">"entered at the top:"</span><span class="keyword">)</span><span class="keyword">,</span>
    <span class="functioncall"><a href='verbatimTextOutput.html'>verbatimTextOutput</a></span><span class="keyword">(</span><span class="string">"value"</span><span class="keyword">)</span>
  <span class="keyword">)</span><span class="keyword">,</span>
  <span class="argument">server</span> <span class="argument">=</span> <span class="keyword">function</span><span class="keyword">(</span><span class="formalargs">input</span><span class="keyword">,</span> <span class="formalargs">output</span><span class="keyword">)</span> <span class="keyword">{</span>

    <span class="comment"># submit buttons do not have a value of their own,</span>
    <span class="comment"># they control when the app accesses values of other widgets.</span>
    <span class="comment"># input$num is the value of the number widget.</span>
    <span class="symbol">output</span><span class="keyword">$</span><span class="symbol">value</span> <span class="assignement">&lt;-</span> <span class="functioncall"><a href='renderPrint.html'>renderPrint</a></span><span class="keyword">(</span><span class="keyword">{</span> <span class="symbol">input</span><span class="keyword">$</span><span class="symbol">num</span> <span class="keyword">}</span><span class="keyword">)</span>
  <span class="keyword">}</span>
<span class="keyword">)</span>
<span class="keyword">}</span></div></code></pre>
<!-- <ul>
  <li>submitButton</li>
</ul>
<ul>
  
</ul> -->

<div data-swiftype-index="false">
<h3>See also</h3>
  <p>Other input elements: <code><a href='actionButton.html'>actionButton</a></code>,
  <code><a href='checkboxGroupInput.html'>checkboxGroupInput</a></code>,
  <code><a href='checkboxInput.html'>checkboxInput</a></code>, <code><a href='dateInput.html'>dateInput</a></code>,
  <code><a href='dateRangeInput.html'>dateRangeInput</a></code>, <code><a href='fileInput.html'>fileInput</a></code>,
  <code><a href='numericInput.html'>numericInput</a></code>, <code><a href='passwordInput.html'>passwordInput</a></code>,
  <code><a href='radioButtons.html'>radioButtons</a></code>, <code><a href='selectInput.html'>selectInput</a></code>,
  <code><a href='sliderInput.html'>sliderInput</a></code>, <code><a href='textAreaInput.html'>textAreaInput</a></code>,
  <code><a href='textInput.html'>textInput</a></code></p>
</div>
```
