---
title: "Register expressions for export in test mode â€” exportTestValues"
---

```{=html}
<div class="reference">
  <small class="dont-index pkg-version">v1.8.0</small><small class="dont-index pipe">|</small><small class="dont-index github-source">Source: <a href="https://github.com/rstudio/shiny/blob/v1.8.0/R/test-export.R" class="external-link"><code>R/test-export.R</code></a></small>

  <div data-section="description"><h3>Description</h3><p>This function registers expressions that will be evaluated when a test export
event occurs. These events are triggered by accessing a snapshot URL.</p></div>

  <div data-section="usage"><div class="sourceCode"><pre class="sourceCode r"><code><span id="cb1-1"><a href="#cb1-1" tabindex="-1"></a><span class="fu">exportTestValues</span>(</span>
<span id="cb1-2"><a href="#cb1-2" tabindex="-1"></a>  ...,</span>
<span id="cb1-3"><a href="#cb1-3" tabindex="-1"></a>  <span class="at">quoted_ =</span> <span class="cn">FALSE</span>,</span>
<span id="cb1-4"><a href="#cb1-4" tabindex="-1"></a>  <span class="at">env_ =</span> <span class="fu">parent.frame</span>(),</span>
<span id="cb1-5"><a href="#cb1-5" tabindex="-1"></a>  <span class="at">session_ =</span> <span class="fu">getDefaultReactiveDomain</span>()</span>
<span id="cb1-6"><a href="#cb1-6" tabindex="-1"></a>)</span></code></pre></div></div>

  <div data-section="arguments">
    <h3 id="arguments">Arguments</h3>
    <dl><dt>...</dt>
<dd><p>Named arguments that are quoted or unquoted expressions that will
be captured and evaluated when snapshot URL is visited.</p></dd>


<dt>quoted_</dt>
<dd><p>Are the expression quoted? Default is <code>FALSE</code>.</p></dd>


<dt>env_</dt>
<dd><p>The environment in which the expression should be evaluated.</p></dd>


<dt>session_</dt>
<dd><p>A Shiny session object.</p></dd>

</dl></div>
  <div data-section="details">
    <h3 id="details">Details</h3>
    <p>This function only has an effect if the app is launched in test mode. This is
done by calling <code><a href="runApp.html">runApp()</a></code> with <code>test.mode=TRUE</code>, or by setting the
global option <code>shiny.testmode</code> to <code>TRUE</code>.</p>
  </div>

  <div data-section="examples">
    <h3 id="examples">Examples</h3>
    <div class="sourceCode"><pre class="sourceCode r"><code><span id="cb1-1"><a href="#cb1-1" tabindex="-1"></a><span class="do">## Only run this example in interactive R sessions</span></span>
<span id="cb1-2"><a href="#cb1-2" tabindex="-1"></a><span class="cf">if</span> (<span class="fu">interactive</span>()) {</span>
<span id="cb1-3"><a href="#cb1-3" tabindex="-1"></a></span>
<span id="cb1-4"><a href="#cb1-4" tabindex="-1"></a><span class="fu">options</span>(<span class="at">shiny.testmode =</span> <span class="cn">TRUE</span>)</span>
<span id="cb1-5"><a href="#cb1-5" tabindex="-1"></a></span>
<span id="cb1-6"><a href="#cb1-6" tabindex="-1"></a><span class="co"># This application shows the test snapshot URL; clicking on it will</span></span>
<span id="cb1-7"><a href="#cb1-7" tabindex="-1"></a><span class="co"># fetch the input, output, and exported values in JSON format.</span></span>
<span id="cb1-8"><a href="#cb1-8" tabindex="-1"></a><span class="fu">shinyApp</span>(</span>
<span id="cb1-9"><a href="#cb1-9" tabindex="-1"></a>  <span class="at">ui =</span> <span class="fu">basicPage</span>(</span>
<span id="cb1-10"><a href="#cb1-10" tabindex="-1"></a>    <span class="fu">h4</span>(<span class="st">"Snapshot URL: "</span>),</span>
<span id="cb1-11"><a href="#cb1-11" tabindex="-1"></a>    <span class="fu">uiOutput</span>(<span class="st">"url"</span>),</span>
<span id="cb1-12"><a href="#cb1-12" tabindex="-1"></a>    <span class="fu">h4</span>(<span class="st">"Current values:"</span>),</span>
<span id="cb1-13"><a href="#cb1-13" tabindex="-1"></a>    <span class="fu">verbatimTextOutput</span>(<span class="st">"values"</span>),</span>
<span id="cb1-14"><a href="#cb1-14" tabindex="-1"></a>    <span class="fu">actionButton</span>(<span class="st">"inc"</span>, <span class="st">"Increment x"</span>)</span>
<span id="cb1-15"><a href="#cb1-15" tabindex="-1"></a>  ),</span>
<span id="cb1-16"><a href="#cb1-16" tabindex="-1"></a></span>
<span id="cb1-17"><a href="#cb1-17" tabindex="-1"></a>  <span class="at">server =</span> <span class="cf">function</span>(input, output, session) {</span>
<span id="cb1-18"><a href="#cb1-18" tabindex="-1"></a>    vals <span class="ot">&lt;-</span> <span class="fu">reactiveValues</span>(<span class="at">x =</span> <span class="dv">1</span>)</span>
<span id="cb1-19"><a href="#cb1-19" tabindex="-1"></a>    y <span class="ot">&lt;-</span> <span class="fu">reactive</span>({ vals<span class="sc">$</span>x <span class="sc">+</span> <span class="dv">1</span> })</span>
<span id="cb1-20"><a href="#cb1-20" tabindex="-1"></a></span>
<span id="cb1-21"><a href="#cb1-21" tabindex="-1"></a>    <span class="fu">observeEvent</span>(input<span class="sc">$</span>inc, {</span>
<span id="cb1-22"><a href="#cb1-22" tabindex="-1"></a>      vals<span class="sc">$</span>x <span class="ot">&lt;&lt;-</span> vals<span class="sc">$</span>x <span class="sc">+</span> <span class="dv">1</span></span>
<span id="cb1-23"><a href="#cb1-23" tabindex="-1"></a>    })</span>
<span id="cb1-24"><a href="#cb1-24" tabindex="-1"></a></span>
<span id="cb1-25"><a href="#cb1-25" tabindex="-1"></a>    <span class="fu">exportTestValues</span>(</span>
<span id="cb1-26"><a href="#cb1-26" tabindex="-1"></a>      <span class="at">x =</span> vals<span class="sc">$</span>x,</span>
<span id="cb1-27"><a href="#cb1-27" tabindex="-1"></a>      <span class="at">y =</span> <span class="fu">y</span>()</span>
<span id="cb1-28"><a href="#cb1-28" tabindex="-1"></a>    )</span>
<span id="cb1-29"><a href="#cb1-29" tabindex="-1"></a></span>
<span id="cb1-30"><a href="#cb1-30" tabindex="-1"></a>    output<span class="sc">$</span>url <span class="ot">&lt;-</span> <span class="fu">renderUI</span>({</span>
<span id="cb1-31"><a href="#cb1-31" tabindex="-1"></a>      url <span class="ot">&lt;-</span> session<span class="sc">$</span><span class="fu">getTestSnapshotUrl</span>(<span class="at">format=</span><span class="st">"json"</span>)</span>
<span id="cb1-32"><a href="#cb1-32" tabindex="-1"></a>      <span class="fu">a</span>(<span class="at">href =</span> url, url)</span>
<span id="cb1-33"><a href="#cb1-33" tabindex="-1"></a>    })</span>
<span id="cb1-34"><a href="#cb1-34" tabindex="-1"></a></span>
<span id="cb1-35"><a href="#cb1-35" tabindex="-1"></a>    output<span class="sc">$</span>values <span class="ot">&lt;-</span> <span class="fu">renderText</span>({</span>
<span id="cb1-36"><a href="#cb1-36" tabindex="-1"></a>      <span class="fu">paste0</span>(<span class="st">"vals$x: "</span>, vals<span class="sc">$</span>x, <span class="st">"</span><span class="sc">\n</span><span class="st">y: "</span>, <span class="fu">y</span>())</span>
<span id="cb1-37"><a href="#cb1-37" tabindex="-1"></a>    })</span>
<span id="cb1-38"><a href="#cb1-38" tabindex="-1"></a>  }</span>
<span id="cb1-39"><a href="#cb1-39" tabindex="-1"></a>)</span>
<span id="cb1-40"><a href="#cb1-40" tabindex="-1"></a>}</span></code></pre></div>
  </div>
</div>
```
