---
title: "Table Output â€” tableOutput"
---

```{=html}
<div class="reference">
  <small class="dont-index pkg-version">v1.8.0</small><small class="dont-index pipe">|</small><small class="dont-index github-source">Source: <a href="https://github.com/rstudio/shiny/blob/v1.8.0/R/bootstrap.R" class="external-link"><code>R/bootstrap.R</code></a>, <a href="https://github.com/rstudio/shiny/blob/v1.8.0/R/render-table.R" class="external-link"><code>R/render-table.R</code></a></small>

  <div data-section="description"><h3>Description</h3><p>The <code>tableOuptut()</code>/<code>renderTable()</code> pair creates a reactive table that is
suitable for display small matrices and data frames. The columns are
formatted with <code><a href="https://rdrr.io/pkg/xtable/man/xtable.html" class="external-link">xtable::xtable()</a></code>.</p>
<p>See <code><a href="renderDataTable.html">renderDataTable()</a></code> for data frames that are too big to fit on a single
page.</p></div>

  <div data-section="usage"><div class="sourceCode"><pre class="sourceCode r"><code><span id="cb1-1"><a href="#cb1-1" tabindex="-1"></a><span class="fu">tableOutput</span>(outputId)</span>
<span id="cb1-2"><a href="#cb1-2" tabindex="-1"></a></span>
<span id="cb1-3"><a href="#cb1-3" tabindex="-1"></a><span class="fu">renderTable</span>(</span>
<span id="cb1-4"><a href="#cb1-4" tabindex="-1"></a>  expr,</span>
<span id="cb1-5"><a href="#cb1-5" tabindex="-1"></a>  <span class="at">striped =</span> <span class="cn">FALSE</span>,</span>
<span id="cb1-6"><a href="#cb1-6" tabindex="-1"></a>  <span class="at">hover =</span> <span class="cn">FALSE</span>,</span>
<span id="cb1-7"><a href="#cb1-7" tabindex="-1"></a>  <span class="at">bordered =</span> <span class="cn">FALSE</span>,</span>
<span id="cb1-8"><a href="#cb1-8" tabindex="-1"></a>  <span class="at">spacing =</span> <span class="fu">c</span>(<span class="st">"s"</span>, <span class="st">"xs"</span>, <span class="st">"m"</span>, <span class="st">"l"</span>),</span>
<span id="cb1-9"><a href="#cb1-9" tabindex="-1"></a>  <span class="at">width =</span> <span class="st">"auto"</span>,</span>
<span id="cb1-10"><a href="#cb1-10" tabindex="-1"></a>  <span class="at">align =</span> <span class="cn">NULL</span>,</span>
<span id="cb1-11"><a href="#cb1-11" tabindex="-1"></a>  <span class="at">rownames =</span> <span class="cn">FALSE</span>,</span>
<span id="cb1-12"><a href="#cb1-12" tabindex="-1"></a>  <span class="at">colnames =</span> <span class="cn">TRUE</span>,</span>
<span id="cb1-13"><a href="#cb1-13" tabindex="-1"></a>  <span class="at">digits =</span> <span class="cn">NULL</span>,</span>
<span id="cb1-14"><a href="#cb1-14" tabindex="-1"></a>  <span class="at">na =</span> <span class="st">"NA"</span>,</span>
<span id="cb1-15"><a href="#cb1-15" tabindex="-1"></a>  ...,</span>
<span id="cb1-16"><a href="#cb1-16" tabindex="-1"></a>  <span class="at">env =</span> <span class="fu">parent.frame</span>(),</span>
<span id="cb1-17"><a href="#cb1-17" tabindex="-1"></a>  <span class="at">quoted =</span> <span class="cn">FALSE</span>,</span>
<span id="cb1-18"><a href="#cb1-18" tabindex="-1"></a>  <span class="at">outputArgs =</span> <span class="fu">list</span>()</span>
<span id="cb1-19"><a href="#cb1-19" tabindex="-1"></a>)</span></code></pre></div></div>

  <div data-section="arguments">
    <h3 id="arguments">Arguments</h3>
    <dl><dt>outputId</dt>
<dd><p>output variable to read the table from</p></dd>


<dt>expr</dt>
<dd><p>An expression that returns an R object that can be used with
<code><a href="https://rdrr.io/pkg/xtable/man/xtable.html" class="external-link">xtable::xtable()</a></code>.</p></dd>


<dt>striped, hover, bordered</dt>
<dd><p>Logicals: if <code>TRUE</code>, apply the
corresponding Bootstrap table format to the output table.</p></dd>


<dt>spacing</dt>
<dd><p>The spacing between the rows of the table (<code>xs</code>
stands for "extra small", <code>s</code> for "small", <code>m</code> for "medium"
and <code>l</code> for "large").</p></dd>


<dt>width</dt>
<dd><p>Table width. Must be a valid CSS unit (like "100%", "400px",
"auto") or a number, which will be coerced to a string and
have "px" appended.</p></dd>


<dt>align</dt>
<dd><p>A string that specifies the column alignment. If equal to
<code>'l'</code>, <code>'c'</code> or <code>'r'</code>, then all columns will be,
respectively, left-, center- or right-aligned. Otherwise, <code>align</code>
must have the same number of characters as the resulting table (if
<code>rownames = TRUE</code>, this will be equal to <code>ncol()+1</code>), with
the <em>i</em>-th character specifying the alignment for the
<em>i</em>-th column (besides <code>'l'</code>, <code>'c'</code> and
<code>'r'</code>, <code>'?'</code> is also permitted - <code>'?'</code> is a placeholder
for that particular column, indicating that it should keep its default
alignment). If <code>NULL</code>, then all numeric/integer columns (including
the row names, if they are numbers) will be right-aligned and
everything else will be left-aligned (<code>align = '?'</code> produces the
same result).</p></dd>


<dt>rownames, colnames</dt>
<dd><p>Logicals: include rownames? include colnames
(column headers)?</p></dd>


<dt>digits</dt>
<dd><p>An integer specifying the number of decimal places for
the numeric columns (this will not apply to columns with an integer
class). If <code>digits</code> is set to a negative value, then the numeric
columns will be displayed in scientific format with a precision of
<code>abs(digits)</code> digits.</p></dd>


<dt>na</dt>
<dd><p>The string to use in the table cells whose values are missing
(i.e. they either evaluate to <code>NA</code> or <code>NaN</code>).</p></dd>


<dt>...</dt>
<dd><p>Arguments to be passed through to <code><a href="https://rdrr.io/pkg/xtable/man/xtable.html" class="external-link">xtable::xtable()</a></code>
and <code><a href="https://rdrr.io/pkg/xtable/man/print.xtable.html" class="external-link">xtable::print.xtable()</a></code>.</p></dd>


<dt>env</dt>
<dd><p>The parent environment for the reactive expression. By default,
this is the calling environment, the same as when defining an ordinary
non-reactive expression. If <code>expr</code> is a quosure and <code>quoted</code> is <code>TRUE</code>,
then <code>env</code> is ignored.</p></dd>


<dt>quoted</dt>
<dd><p>If it is <code>TRUE</code>, then the <code><a href="https://rdrr.io/r/base/substitute.html" class="external-link">quote()</a></code>ed value of <code>expr</code>
will be used when <code>expr</code> is evaluated. If <code>expr</code> is a quosure and you
would like to use its expression as a value for <code>expr</code>, then you must set
<code>quoted</code> to <code>TRUE</code>.</p></dd>


<dt>outputArgs</dt>
<dd><p>A list of arguments to be passed through to the
implicit call to <code>tableOutput()</code> when <code>renderTable</code> is
used in an interactive R Markdown document.</p></dd>

</dl></div>

  <div data-section="examples">
    <h3 id="examples">Examples</h3>
    <div class="sourceCode"><pre class="sourceCode r"><code><span id="cb1-1"><a href="#cb1-1" tabindex="-1"></a><span class="do">## Only run this example in interactive R sessions</span></span>
<span id="cb1-2"><a href="#cb1-2" tabindex="-1"></a><span class="cf">if</span> (<span class="fu">interactive</span>()) {</span>
<span id="cb1-3"><a href="#cb1-3" tabindex="-1"></a>  <span class="co"># table example</span></span>
<span id="cb1-4"><a href="#cb1-4" tabindex="-1"></a>  <span class="fu">shinyApp</span>(</span>
<span id="cb1-5"><a href="#cb1-5" tabindex="-1"></a>    <span class="at">ui =</span> <span class="fu">fluidPage</span>(</span>
<span id="cb1-6"><a href="#cb1-6" tabindex="-1"></a>      <span class="fu">fluidRow</span>(</span>
<span id="cb1-7"><a href="#cb1-7" tabindex="-1"></a>        <span class="fu">column</span>(<span class="dv">12</span>,</span>
<span id="cb1-8"><a href="#cb1-8" tabindex="-1"></a>          <span class="fu">tableOutput</span>(<span class="st">'table'</span>)</span>
<span id="cb1-9"><a href="#cb1-9" tabindex="-1"></a>        )</span>
<span id="cb1-10"><a href="#cb1-10" tabindex="-1"></a>      )</span>
<span id="cb1-11"><a href="#cb1-11" tabindex="-1"></a>    ),</span>
<span id="cb1-12"><a href="#cb1-12" tabindex="-1"></a>    <span class="at">server =</span> <span class="cf">function</span>(input, output) {</span>
<span id="cb1-13"><a href="#cb1-13" tabindex="-1"></a>      output<span class="sc">$</span>table <span class="ot">&lt;-</span> <span class="fu">renderTable</span>(iris)</span>
<span id="cb1-14"><a href="#cb1-14" tabindex="-1"></a>    }</span>
<span id="cb1-15"><a href="#cb1-15" tabindex="-1"></a>  )</span>
<span id="cb1-16"><a href="#cb1-16" tabindex="-1"></a>}</span></code></pre></div>
  </div>
</div>
```
