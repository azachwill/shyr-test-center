---
title: How to get help
date: 2017-09-15
author: 
 - Garrett Grolemund 
 - Mine Cetinkaya-Rundel
description: Writing code can be tricky. Sometimes you will want more advice than you can find in R's help pages. This article will show you where to seek help, how to get it.
---

Writing code can be tricky. Sometimes you will want more advice than you can find in R's [help pages](http://www.rdocumentation.org/).

This article will show you where to seek help, how to get it.

Support for R and Shiny has developed like the languages themselves, organically and through the excellent work of volunteers. You can be a part of this process. Simply ask your questions in the right places and in a clear manner. Not only will your question help you, it will create a record that will benefit everyone who has the same question later.

## Where to seek help

You will get the quickest response if you submit your question to a place that people already visit to ask and answer similar questions. We recommend these resources for questions on the following topics:

* __R__:
  * [RStudio Community](https://community.rstudio.com/)
  * [StackOverflow](http://stackoverflow.com/questions/tagged/r)
* __Shiny__:
  * [RStudio Community](https://community.rstudio.com/c/shiny)
  * [shiny-dicuss Google group](https://groups.google.com/forum/#!forum/shiny-discuss)
  * [StackOverflow](http://stackoverflow.com/questions/tagged/shiny)
* __Shiny Server__: The [Shiny Server support forum](https://support.rstudio.com/hc/communities/public/topics/200092706-Shiny-Server)
* __Posit Connect and Shiny Server Pro__: email the RStudio customer support team<sup>1</sup>
* __ShinyApps.io__: The [ShinyApps.io discussion group](https://groups.google.com/forum/#!forum/shinyapps-users)
* __RStudio IDE__: The [RStudio IDE support forum](https://support.rstudio.com/hc/communities/public/topics/200022748-RStudio-IDE)

<sup>1</sup>_Since Posit Connect and Shiny Server Pro are paid products, they have a dedicated customer support team._

These sites all have archives that you can search to see if your question has already been answered. If answered, you can get an immediate solution!

Once answered your question will go into these archives and expand the knowledge base in the Shiny community.

## How to get help

You will get the most useful help if you do these simple things:

1. Search the archives and check if your question has an answer already.
2. Write a [minimal reproducible example](https://www.tidyverse.org/help/#reprex) that illustrates your problem.
3. Be precise. Include the exact error messages that you see.
4. Run `sessionInfo()` in R and include the output with your question _(`sessionInfo()` displays the versions of R and its packages that you are using, as well as your OS. This is important information for debugging)_.
5. Be friendly and appreciative.

These steps will make it easier for a mentor to help you.

### How to write a good reproducible example

A reproducible example is a snippet of R code that someone can run and recreate your problem. Many bugs cannot be diagnosed unless you include the code that causes them.

A _good_ reproducible example is:

1. **Minimal** - It should contain just enough code to recreate the bug. This will help both you and your mentors zero in on the problem.
2. **Complete** - It should contain _everything_ a person needs to recreate the bug. In other words, a person should be able to copy and paste the code into R and see the bug.

You do not need to share your own code and data (if you do not want to). Often you can create an example that reproduces your bug with toy code and a dummy data set.

If you need to create a reproducible example of a Shiny app, we recommend you [save your app as a gist](/tutorial/written-tutorial/lesson7). When you write your question, include the `runGist` command that will launch your app. A `runGist` command looks like this:

````r
shiny::runGist("eb3470beb1c0252bd0289cbc89bcf36f")
````

Don't forget to explain how to create the error in your app. You may need to provide instructions such as "Click this checkbox" or "Select this value."

If you need to create a reproducible example of Rcpp code, we recommend you supply a .cpp file that can be executed
through `Rcpp::sourceCpp`. It is the easiest way of testing or
debugging C++ / Rcpp code.

If you want more details on writing a good example, Hadley gives some advice [here](https://gist.github.com/hadley/270442).


## What about the Shiny Dev Center?

RStudio wants to make the [Shiny Dev Center](../../) as useful as possible. We hope it can be a one stop shop for [advice](/articles), [wisdom](/tutorial), and [inspiration](/gallery). However the Shiny Dev Center is not designed to be an interactive resource.

If you ask a question _about an article or tutorial_ in its comments section, we will try our best to answer it there. However, the comments section is _not_ a good place to ask for specific help with your code. Why not?

* __Practicality__ - Volunteers do not hang out in the comments sections waiting to answer your questions.
* __Efficiency__ - The resources listed above are searchable and well known, which makes it easy for others to benefit from your questions and answers. Not so for the comments.
* __Redundancy__ - There is a good chance someone already answered your question at one of the help sites. Why not find out?

## Recap

You can get the help you need and make Shiny better in the process by visiting a help site specific to your question. Do not forget to make your question clear with a reproducible example, an error message, and the output of `sessionInfo()`.
