<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Shiny</title>
<link>https://shiny.posit.co/blog/</link>
<atom:link href="https://shiny.posit.co/blog/index.xml" rel="self" type="application/rss+xml"/>
<description>News, tips, and commentary about all things Shiny</description>
<image>
<url>https://shiny.posit.co/images/shiny-thumb.png</url>
<title>Shiny</title>
<link>https://shiny.posit.co/blog/</link>
</image>
<generator>quarto-1.5.55</generator>
<lastBuildDate>Mon, 22 Jul 2024 04:00:00 GMT</lastBuildDate>
<item>
  <title>Announcing Shiny for Python 1.0</title>
  <dc:creator>Shiny Team</dc:creator>
  <link>https://shiny.posit.co/blog/posts/shiny-python-1.0/</link>
  <description><![CDATA[ 
<!-- Google Tag Manager (noscript) -->
 <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KHBDBW7" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<style type="text/css">
  #quarto-content>* {
  padding-top: 0px;
  }
</style>


        <div class="column-body-outset blog-image-container pb-5">
      <video muted="" autoplay="" playsinline="" style="width: 100%; height: auto;">
        <source src="shinyforpython-1.0.mp4" type="video/mp4">
        Your browser does not support the video tag.
      </video>
    </div>
    


<p>It’s time for another Shiny for Python release! Not only does this release include a number of exciting features and big improvements, it’s also the release we’re choosing to call Shiny for Python v1.0.</p>
<p>In this post, we’ll talk about what v1.0 means to us, and then get into the feast of new features we have for you!</p>
<ul>
<li><strong>What does it mean to hit v1.0?</strong></li>
<li><strong>New <code>Chat()</code> component</strong></li>
<li><strong>End-to-end testing</strong></li>
<li><strong>Data frame improvements</strong></li>
<li><strong>Multimedia components</strong></li>
<li><strong>Modules for Express</strong></li>
<li><strong>Use Bootswatch themes with shinyswatch</strong></li>
</ul>
<div class="pt-2 pb-1">
<hr>
</div>
<section id="what-does-it-mean-to-hit-v1.0" class="level2">
<h2 data-anchor-id="what-does-it-mean-to-hit-v1.0">What does it mean to hit v1.0?</h2>
<p>For the Shiny team, bestowing the “v1.0” label on a piece of software is a declaration of a certain level of quality, feature completeness, and API stability.</p>
<p>In April 2023, we <a href="https://shiny.posit.co/blog/posts/shiny-python-general-availability/">removed the alpha tag from Shiny for Python</a>, signaling our team’s belief that its level of quality and runtime stability made it appropriate for production use. And that belief has borne out: the feedback we’ve received from real-world users of the framework has been overwhelmingly positive.</p>
<p>At that time, we chose not to use a 1.0 moniker, preferring to stick to 0.x until after we had shipped essential features like <a href="../shiny-python-0.4.0/">interactive data tables</a> (June 2023) and <a href="../shiny-python-0.6.0/">dashboard UI components</a> (Nov 2023). And soon after that, we came up with <a href="https://shiny.posit.co/blog/posts/shiny-express/">Shiny Express</a>, a completely new syntax for writing Shiny apps, which meant another period of heavy feedback and potential revisions of the API.</p>
<p>Sitting here in July 2024, it feels like a great time to acknowledge Shiny for Python’s maturity by bestowing it with the big 1-point-0. The API feels appropriately stable now, and most of the new features of the last few releases have been about building on top of Shiny’s existing API design vocabulary, rather than extending or changing it (although one notable brand-new primitive is Modules for Shiny Express, which you can read about below).</p>
<p>So please join us in raising a proverbial glass to Shiny for Python 1.0! And if you’ve been waiting on the sidelines, now is a great time to <a href="https://shiny.posit.co/py/docs/overview.html">get in the game</a>!</p>
<p>And now, let’s take a look at all the cool features that are part of this release!</p>
<div class="pt-2 pb-1">
<hr>
</div>
</section>
<section id="new-chat-component" class="level2">
<h2 data-anchor-id="new-chat-component">New <code>Chat()</code> component</h2>
<p>The new <code>Chat()</code> component makes it easy to implement generative AI chatbots, powered by any LLM of your choosing. For a comprehensive overview, see the new <a href="https://shiny.posit.co/py/components/display-messages/chat/">component page</a>.</p>
<p>The main steps of any generative AI chatbot are:</p>
<ol type="1">
<li>Create a <code>Chat</code> instance.</li>
<li>Display the chat <code>.ui()</code>.</li>
<li>Define a <code>on_user_submit</code> callback.
<ul>
<li>This callback typically passes <code>.messages()</code> to a generative AI model (<code>ai_model</code>) and appends the result to the chat.</li>
<li>The <code>ai_model</code> can be anything, but <code>Chat</code> makes it especially easy to use interfaces from OpenAI, Anthropic, Google, LangChain, and Ollama.</li>
</ul></li>
</ol>
<div class="pt-3">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>app.py</strong></pre>
</div>
<div class="sourceCode" id="cb1" data-filename="app.py" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shiny.express <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ui</span>
<span id="cb1-2"></span>
<span id="cb1-3">chat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ui.Chat(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chat"</span>)</span>
<span id="cb1-4">chat.ui()</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@chat.on_user_submit</span></span>
<span id="cb1-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> _():</span>
<span id="cb1-8">    messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> chat.messages()</span>
<span id="cb1-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The next line is a placeholder for the actual generative AI model</span></span>
<span id="cb1-10">    response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> ai_model.generate_response(messages, stream<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb1-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use append_message_stream() when streaming responses</span></span>
<span id="cb1-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> chat.append_message_stream(response)</span></code></pre></div>
</div>
</div>
<p>The generative AI <a href="https://shiny.posit.co/py/components/display-messages/chat/#ai-quick-start">quickstart</a> has a variety of <code>ai_model</code> implementations, but we do recommend starting with <a href="https://www.langchain.com/">LangChain</a>, as it helps standardize response generation across different LLMs. Use the terminal command below to get the LangChain (with OpenAI) template:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">shiny</span> create <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-g</span> https://github.com/posit-dev/py-shiny/tree/main/examples/chat/hello-providers/langchain</span></code></pre></div>
<p>Then, follow the instructions at the top of <code>app.py</code> to set up your OpenAI API key before running the app. Once you have your credentials set up and <a href="https://shiny.posit.co/py/docs/install-create-run.html">run the app</a> and start chatting!</p>
<div class="py-3">
<p><video src="chat2.mp4" class="border rounded img-fluid" controls=""><a href="chat2.mp4">Video</a></video></p>
</div>
<p>The template above is a great starting point for building your own generative AI chatbot. To learn how to do more advanced things with <code>Chat</code> (e.g., system messages, RAG, etc), check out the <a href="https://shiny.posit.co/py/components/display-messages/chat/">component page</a>.</p>
<p>For now, <code>ui.Chat()</code> is limited to textual input and output. We hope to expand this in the future to include more complex inputs and outputs, such as images, videos, and audio (for now, you can checkout shinymedia for video in / audio out). We also hope to get <a href="https://discord.com/invite/yMGCamUMnS">your feedback</a> on what you’d like to see in future versions of <code>Chat</code>!</p>
<div class="pt-2 pb-1">
<hr>
</div>
</section>
<section id="end-to-end-testing" class="level2">
<h2 data-anchor-id="end-to-end-testing">End-to-end testing</h2>
<p>After more than a year of development and internal testing, we’re now exporting an end-to-end testing framework for Shiny apps. End-to-end tests are a great way to maintain code quality by ensuring that apps behave as expected in response to (simulated) user interactions in a real browser. Our approach builds on the fabulous <a href="https://playwright.dev/">Playwright</a> framework, which provides a fast, powerful, and resilient foundation for browser-based testing.</p>
<p>The video below demonstrates the experience of writing an end-to-end test for a Shiny app. Note that the new <code>shiny.playwright</code> module is where you can find dozens of “controllers” that make it easy to mimic user interactions with Shiny <a href="https://shiny.posit.co/py/components/">components</a> and assert their expected state.</p>
<div class="py-3">
<p><video src="leverage_controllers.mp4" class="border rounded img-fluid" controls=""><a href="leverage_controllers.mp4">Video</a></video></p>
</div>
<p>For a comprehensive overview of end-to-end testing, see the new article on <a href="https://shiny.posit.co/py/docs/end-to-end-testing.html">End-to-end testing in Shiny</a>.</p>
<div class="pt-2 pb-1">
<hr>
</div>
</section>
<section id="data-frame-improvements" class="level2">
<h2 data-anchor-id="data-frame-improvements">Data frame improvements</h2>
<p>Shiny provides two components for rendering data frames: <a href="https://shiny.posit.co/py/components/outputs/data-grid/"><code>DataGrid()</code></a> and <a href="https://shiny.posit.co/py/components/outputs/data-table/"><code>DataTable()</code></a>. The former is a more interactive and feature-rich table, while the latter is a simpler, more lightweight table. All of the improvements described below are available to both components.</p>
<section id="styling" class="level3">
<h3 data-anchor-id="styling">Styling</h3>
<p><code>DataGrid()</code> and <code>DataTable()</code> gain a <code>styles</code> argument for styling the displayed result. <code>styles</code> can take a list of dictionaries where each dictionary represents a style to be applied to the table (and thus should have at least a <code>style</code> (or <code>class</code>) key to apply CSS styles or classes to the relevant cells). To scope the styling to particular cells, use the <code>rows</code> and <code>cols</code> keys (with 0-based indexing). Note that if both <code>rows</code> and <code>cols</code> are specified, the style will be applied only to the intersection of the specified rows and columns.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">render.DataGrid(</span>
<span id="cb3-2">    pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]}),</span>
<span id="cb3-3">    styles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb3-4">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Center the text of each cell (using Bootstrap utility class)</span></span>
<span id="cb3-5">        {</span>
<span id="cb3-6">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"class"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text-center"</span>,</span>
<span id="cb3-7">        },</span>
<span id="cb3-8">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Highlight 1st column green</span></span>
<span id="cb3-9">        {</span>
<span id="cb3-10">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cols"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb3-11">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"style"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"background-color"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mediumspringgreen"</span>},</span>
<span id="cb3-12">        },</span>
<span id="cb3-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Highlight rows 1-2 within 2nd column</span></span>
<span id="cb3-14">        {</span>
<span id="cb3-15">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rows"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb3-16">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cols"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb3-17">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"style"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"background-color"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkorange"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>},</span>
<span id="cb3-18">        },</span>
<span id="cb3-19">    ],</span>
<span id="cb3-20">)</span></code></pre></div>
<div class="border rounded p-2 pb-0 mb-5">
<p><img src="https://shiny.posit.co/blog/posts/shiny-python-1.0/data-frame-styles.png" class="w-100 img-fluid"></p>
</div>
</section>
<section id="selection-editing" class="level3">
<h3 data-anchor-id="selection-editing">Selection &amp; editing</h3>
<p>It’s now possible to enable both selection and editing simultaneously! 🎉</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">render.DataGrid(</span>
<span id="cb4-2">    pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]}),</span>
<span id="cb4-3">    selection_mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row"</span>,</span>
<span id="cb4-4">    editable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb4-5">)</span></code></pre></div>
<p><video src="data-frame-edit-selection.mp4" class="border rounded mb-3 img-fluid" controls=""><a href="data-frame-edit-selection.mp4">Video</a></video></p>
<p>Note that a row/cell can be selected by clicking on it, and a cell can be edited by double-clicking on it. Also, keyboard nativigation works as expected: use the arrow keys to navigate the table, press <code>Enter</code> to start editing a cell, and press <code>Esc</code> to cancel editing.</p>
</section>
<section id="polars-typing-support" class="level3">
<h3 data-anchor-id="polars-typing-support">Polars &amp; typing support</h3>
<p>Both <code>DataGrid()</code> and <code>DataTable()</code> now support <a href="https://pola.rs/">Polars</a> DataFrames in addition to <a href="https://pandas.pydata.org/">pandas</a> DataFrames. Also, accessor methods like <code>.data()</code> and <code>.data_view()</code> now return the same type as the rendered data. This even works with type hints, meaning your IDE will know the correct return type of the accessor. See the screenshot below for an example, and note the <code>polars</code> type hint in the tooltip.</p>
<div class="py-3">
<p><img src="https://shiny.posit.co/blog/posts/shiny-python-1.0/data-frame-polars.png" class="border rounded img-fluid"></p>
</div>
</section>
<section id="more-control-over-sorting-and-filtering" class="level3">
<h3 data-anchor-id="more-control-over-sorting-and-filtering">More control over sorting and filtering</h3>
<p>It’s now easier than ever to access and manipulate the sorting and filtering state of the table. Here are a few new methods to access that state more easily:</p>
<ul>
<li><code>.data_view_rows()</code>: Reactive value representing the sorted and filtered row numbers.</li>
<li><code>.sort()</code>: Reactive value representing the sorted column information.</li>
<li><code>.filter()</code>: Reactive value representing the filtered column information.</li>
</ul>
<p>And, to programmatically update the sorting and filtering:</p>
<ul>
<li><code>.update_sort(sort=)</code>: Update the sorting of the data frame.</li>
<li><code>.update_filter(filter=)</code>: Update the filtering of the data frame.</li>
</ul>
<p>Note that these methods (as well as other methods for accessing and manipulating state), are placed on the render function. Here’s an example of having a button that sorts the data frame on column 0 in ascending order:</p>
<div class="pt-3">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>app.py</strong></pre>
</div>
<div class="sourceCode" id="cb5" data-filename="app.py" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shiny <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> reactive</span>
<span id="cb5-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shiny.express <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>, render, ui</span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@render.data_frame</span></span>
<span id="cb5-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> df():</span>
<span id="cb5-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]})</span>
<span id="cb5-8"></span>
<span id="cb5-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@reactive.effect</span></span>
<span id="cb5-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@reactive.event</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>.sort)</span>
<span id="cb5-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update_sort():</span>
<span id="cb5-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> df.update_sort([{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"desc"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>}])</span>
<span id="cb5-13"></span>
<span id="cb5-14">ui.input_action_button(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sort"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sort on column 0↑"</span>)</span></code></pre></div>
</div>
</div>
</section>
<section id="learn-more" class="level3">
<h3 data-anchor-id="learn-more">Learn more</h3>
<p>For a comprehensive overview of new and old data frame features, see the updated articles on <a href="https://shiny.posit.co/py/components/outputs/data-grid/">DataGrid</a> and <a href="https://shiny.posit.co/py/components/outputs/data-table/">DataTable</a>.</p>
<div class="pt-2 pb-1">
<hr>
</div>
</section>
</section>
<section id="multimedia-components" class="level2">
<h2 data-anchor-id="multimedia-components">Multimedia components</h2>
<p>A couple of months ago, a couple of our developers had the privilege of joining one of our favorite data science YouTubers, <a href="https://www.youtube.com/@TinaHuang1">Tina Huang</a>, on one of her livestreams. Tina challenged us to livecode a Shiny app that provides a video assistant chat UI backed by GPT-4o, like a basic version of the widely viewed <a href="https://www.youtube.com/live/DQacCB9tDaw?si=AG6luavMRxkitS9I&amp;t=584">OpenAI demo</a> that had just dropped.</p>
<p>Spoiler: we were fairly successful, and you can experience the result in this <a href="https://jcheng.shinyapps.io/multimodal/">live demo</a>.</p>
<p>Our assistant app takes webcam video as input, and plays audio as output. To make this a nice polished experience, we created a pair of Shiny-enabled web components to serve as input/output:</p>
<ul>
<li><code>input_video_clip()</code>: A video preview of your webcam, with a button that lets you start/stop recording, and a settings menu that lets you choose the camera/microphone.</li>
<li><code>audio_spinner()</code>: An audio player than spins and pulses in sync with the audio signal.</li>
</ul>
<div class="border rounded p-2 pb-0 mb-4 mx-auto" style="max-width: min(400px, 100%);">
<p><img src="https://shiny.posit.co/blog/posts/shiny-python-1.0/shinymedia.jpg" class="img-fluid"></p>
</div>
<p>These components are now available in a standalone package called <a href="https://posit-dev.github.io/shinymedia/">shinymedia</a>. They’re designed to be super easy to drop into your Shiny for Python app, no different than any input/output component that comes with Shiny.</p>
<p>As for the livestream, we had a lot of fun and the feedback was great from everyone in the audience. It’s astonishing how easy this app was to build, once we had the right widgets. If you’re at all interested in building AI apps with Shiny, <a href="https://www.youtube.com/watch?v=OLTgI6DAQ_A">be sure to check out the recording</a>!</p>
<div class="pt-2 pb-1">
<hr>
</div>
</section>
<section id="modules-for-express" class="level2">
<h2 data-anchor-id="modules-for-express">Modules for Express</h2>
<p>When it comes to building more complicated Shiny applications, some of the most useful tools at your disposal are Shiny modules. You can use Shiny modules to build components that abstract away complexity and can be reused in your applications.</p>
<p>Shiny Express now has support for using Shiny modules, and you can even create Shiny modules using Express syntax. To learn more, see our documentation on <a href="https://shiny.posit.co/py/docs/modules.html" target="_blank">Shiny modules</a>.</p>
<div class="pt-2 pb-1">
<hr>
</div>
</section>
<section id="use-bootswatch-themes-with-shinyswatch" class="level2">
<h2 data-anchor-id="use-bootswatch-themes-with-shinyswatch">Use Bootswatch themes with shinyswatch</h2>
<div class="py-3">
<p><img src="https://shiny.posit.co/blog/posts/shiny-python-1.0/shinyswatch.jpg" class="border rounded img-fluid"></p>
</div>
<p>We’re also happy to announce <a href="../../../blog/posts/shinyswatch-0.7.0/index.html">the release of shinyswatch v0.7.0</a>. shinyswatch brings Bootswatch themes to Shiny for Python, allowing you to customize the appearance of your Shiny apps with a variety of themes.</p>
<div class="pt-2 pb-1">
<hr>
</div>
<p>We’re thrilled to bring you these new features and improvements in Shiny for Python 1.0. As always, if you have any questions or feedback, please <a href="https://discord.gg/yMGCamUMnS">join us on Discord</a> or <a href="https://github.com/posit-dev/py-shiny/issues/new">open an issue on GitHub</a>. Happy Shiny-ing!</p>


</section>

 ]]></description>
  <guid>https://shiny.posit.co/blog/posts/shiny-python-1.0/</guid>
  <pubDate>Mon, 22 Jul 2024 04:00:00 GMT</pubDate>
  <media:content url="https://shiny.posit.co/blog/posts/shiny-python-1.0/shinyforpython-1.0.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>shinyswatch v0.7.0</title>
  <dc:creator>Garrick Aden-Buie</dc:creator>
  <link>https://shiny.posit.co/blog/posts/shinyswatch-0.7.0/</link>
  <description><![CDATA[ 
<!-- Google Tag Manager (noscript) -->
 <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KHBDBW7" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<style type="text/css">
  #quarto-content>* {
  padding-top: 0px;
  }
</style>


        <div class="column-body-outset blog-image-container pb-5">
      <img src="https://shiny.posit.co/blog/posts/shinyswatch-0.7.0/feature.jpg" style="width: 100%; height: auto;">
    </div>
    


<style>
.highlight-line {
  font-weight: bold;
}
body:not(.modal-open) div.sourceCode pre code.has-line-highlights > span:not(.highlight-line) {
  opacity: 0.6;
}
body:not(.modal-open) div.sourceCode:hover pre code.has-line-highlights > span:not(.highlight-line) {
  opacity: 0.8;
}
</style>
<p>We’re happy to announce the release of <a href="https://posit-dev.github.io/py-shinyswatch">shinyswatch</a> v0.7.0. shinyswatch brings <a href="https://bootswatch.com">Bootstwatch themes</a> to <a href="https://shiny.posit.co/py">Shiny for Python</a>, allowing you to easily customize the appearance of your Shiny apps with a variety of themes.</p>
<p>You can install the latest version of shinyswatch from PyPI with:</p>
<div class="sourceCode" id="cb1" data-code-line-numbers="" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install shinyswatch</span></code></pre></div>
<p>This release includes a number of new features that we’re excited to share with you. Some of these changes may require you to update your existing code, so please read on to learn more!</p>
<p>Prior to shinyswatch v0.7.0, the Shiny themes provided by shinyswatch were fixed and could not be customized. With this release, we’re taking advantage of new theming features added in <a href="../../../blog/posts/shiny-python-1.0/index.html">Shiny v1.0</a> to allow you to customize the shinyswatch themes!</p>
<p>This change, however, necessitated a few small breaking changes in shinyswatch that we’ll cover first.</p>
<section id="migrating-to-v0.7.0" class="level2">
<h2 data-anchor-id="migrating-to-v0.7.0">Migrating to v0.7.0</h2>
<section id="setting-the-app-theme" class="level3">
<h3 data-anchor-id="setting-the-app-theme">Setting the app theme</h3>
<p>Prior to v0.7.0, to set the theme of a Shiny app, you could add the shinyswatch theme object to your app’s UI anywhere you wanted.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset shiny-mode-tabset" data-group="shiny-app-mode">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Express</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Core</a></li></ul>
<div class="tab-content shiny-mode-tabset" data-group="shiny-app-mode">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>app.py</strong></pre>
</div>
<div class="sourceCode" id="cb2" data-filename="app.py" data-code-line-numbers="5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shiny.express <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>, ui</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> shinyswatch</span>
<span id="cb2-4"></span>
<span id="cb2-5">shinyswatch.theme.darkly  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># No longer allowed </span></span>
<span id="cb2-6"></span>
<span id="cb2-7">ui.input_slider(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"num"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number:"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb2-8">ui.output_text_verbatim(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slider_val"</span>)</span>
<span id="cb2-9"></span>
<span id="cb2-10"></span>
<span id="cb2-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the rest of your app ...</span></span></code></pre></div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>app.py</strong></pre>
</div>
<div class="sourceCode" id="cb3" data-filename="app.py" data-code-line-numbers="6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shiny <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> App, Inputs, Outputs, Session, render, ui</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> shinyswatch</span>
<span id="cb3-4"></span>
<span id="cb3-5">app_ui <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ui.page_fluid(</span>
<span id="cb3-6">    shinyswatch.theme.darkly,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># No longer allowed </span></span>
<span id="cb3-7">    ui.input_slider(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"num"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number:"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>),</span>
<span id="cb3-8">    ui.output_text_verbatim(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slider_val"</span>),</span>
<span id="cb3-9">)</span>
<span id="cb3-10"></span>
<span id="cb3-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># server ...</span></span></code></pre></div>
</div>
</div>
</div>
</div>
<p><strong>With shinyswatch v0.7.0,</strong> you now need to pass the <code>shinyswatch.theme</code> object to the <code>theme</code> argument of <code>shiny.express.ui.page_opts()</code> or of any <code>shiny.ui.page_*()</code> function.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset shiny-mode-tabset" data-group="shiny-app-mode">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">Express</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">Core</a></li></ul>
<div class="tab-content shiny-mode-tabset" data-group="shiny-app-mode">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>app.py</strong></pre>
</div>
<div class="sourceCode" id="cb4" data-filename="app.py" data-code-line-numbers="5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shiny.express <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>, ui</span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> shinyswatch</span>
<span id="cb4-4"></span>
<span id="cb4-5">ui.page_opts(theme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>shinyswatch.theme.darkly)  </span>
<span id="cb4-6"></span>
<span id="cb4-7">ui.input_slider(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"num"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number:"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb4-8">ui.output_text_verbatim(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slider_val"</span>)</span>
<span id="cb4-9"></span>
<span id="cb4-10"></span>
<span id="cb4-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the rest of your app ...</span></span></code></pre></div>
</div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>app.py</strong></pre>
</div>
<div class="sourceCode" id="cb5" data-filename="app.py" data-code-line-numbers="8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shiny <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> App, Inputs, Outputs, Session, render, ui</span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> shinyswatch</span>
<span id="cb5-4"></span>
<span id="cb5-5">app_ui <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ui.page_fluid(</span>
<span id="cb5-6">    ui.input_slider(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"num"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number:"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>),</span>
<span id="cb5-7">    ui.output_text_verbatim(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slider_val"</span>),</span>
<span id="cb5-8">    theme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>shinyswatch.theme.darkly,  </span>
<span id="cb5-9">)</span>
<span id="cb5-10"></span>
<span id="cb5-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># server ...</span></span></code></pre></div>
</div>
</div>
</div>
</div>
<p>Read about the customizable theme features below to learn about the feature that required this change.</p>
</section>
<section id="choosing-an-initial-theme-with-the-theme-picker" class="level3">
<h3 data-anchor-id="choosing-an-initial-theme-with-the-theme-picker">Choosing an initial theme with the theme picker</h3>
<p>In shinyswatch v0.6.0 we added a <code>default</code> argument to <code>shinyswatch.theme_picker_ui()</code> that could be used to choose the initial theme. This short-lived argument is now deprecated.</p>
<p><strong>Instead, in shinyswatch v0.7.0</strong>, the initial app theme must be set separately from the theme picker UI, using the same method described above.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset shiny-mode-tabset" data-group="shiny-app-mode">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-5-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-5-1" aria-controls="tabset-5-1" aria-selected="true">Express</a></li><li class="nav-item"><a class="nav-link" id="tabset-5-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-5-2" aria-controls="tabset-5-2" aria-selected="false">Core</a></li></ul>
<div class="tab-content shiny-mode-tabset" data-group="shiny-app-mode">
<div id="tabset-5-1" class="tab-pane active" aria-labelledby="tabset-5-1-tab">
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-3-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-1" aria-controls="tabset-3-1" aria-selected="true">Before</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-2" aria-controls="tabset-3-2" aria-selected="false">After</a></li></ul>
<div class="tab-content">
<div id="tabset-3-1" class="tab-pane active" aria-labelledby="tabset-3-1-tab">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>app.py</strong></pre>
</div>
<div class="sourceCode" id="cb6" data-filename="app.py" data-code-line-numbers="5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shiny.express <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>, ui</span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> shinyswatch</span>
<span id="cb6-4"></span>
<span id="cb6-5">shinyswatch.theme_picker_ui(default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkly"</span>)  </span>
<span id="cb6-6"></span>
<span id="cb6-7">ui.input_slider(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"num"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number:"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb6-8">ui.output_text_verbatim(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slider_val"</span>)</span>
<span id="cb6-9"></span>
<span id="cb6-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the rest of your app ...</span></span></code></pre></div>
</div>
</div>
<div id="tabset-3-2" class="tab-pane" aria-labelledby="tabset-3-2-tab">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>app.py</strong></pre>
</div>
<div class="sourceCode" id="cb7" data-filename="app.py" data-code-line-numbers="5,6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shiny.express <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>, ui</span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> shinyswatch</span>
<span id="cb7-4"></span>
<span id="cb7-5">shinyswatch.theme_picker_ui()  </span>
<span id="cb7-6">ui.page_opts(theme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>shinyswatch.theme.darkly)  </span>
<span id="cb7-7"></span>
<span id="cb7-8">ui.input_slider(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"num"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number:"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb7-9">ui.output_text_verbatim(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slider_val"</span>)</span>
<span id="cb7-10"></span>
<span id="cb7-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the rest of your app ...</span></span></code></pre></div>
</div>
</div>
</div>
</div>
</div>
<div id="tabset-5-2" class="tab-pane" aria-labelledby="tabset-5-2-tab">
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-4-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-1" aria-controls="tabset-4-1" aria-selected="true">Before</a></li><li class="nav-item"><a class="nav-link" id="tabset-4-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-2" aria-controls="tabset-4-2" aria-selected="false">After</a></li></ul>
<div class="tab-content">
<div id="tabset-4-1" class="tab-pane active" aria-labelledby="tabset-4-1-tab">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>app.py</strong></pre>
</div>
<div class="sourceCode" id="cb8" data-filename="app.py" data-code-line-numbers="6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shiny <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> App, Inputs, Outputs, Session, render, ui</span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> shinyswatch</span>
<span id="cb8-4"></span>
<span id="cb8-5">app_ui <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ui.page_fluid(</span>
<span id="cb8-6">    shinyswatch.theme_picker_ui(default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkly"</span>),  </span>
<span id="cb8-7">    ui.input_slider(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"num"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number:"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>),</span>
<span id="cb8-8">    ui.output_text_verbatim(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slider_val"</span>),</span>
<span id="cb8-9">)</span>
<span id="cb8-10"></span>
<span id="cb8-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># server ...</span></span></code></pre></div>
</div>
</div>
<div id="tabset-4-2" class="tab-pane" aria-labelledby="tabset-4-2-tab">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>app.py</strong></pre>
</div>
<div class="sourceCode" id="cb9" data-filename="app.py" data-code-line-numbers="6,9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shiny <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> App, Inputs, Outputs, Session, render, ui</span>
<span id="cb9-2"></span>
<span id="cb9-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> shinyswatch</span>
<span id="cb9-4"></span>
<span id="cb9-5">app_ui <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ui.page_fluid(</span>
<span id="cb9-6">    shinyswatch.theme_picker_ui(),  </span>
<span id="cb9-7">    ui.input_slider(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"num"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number:"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>),</span>
<span id="cb9-8">    ui.output_text_verbatim(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slider_val"</span>),</span>
<span id="cb9-9">    theme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>shinyswatch.theme.darkly,  </span>
<span id="cb9-10">)</span>
<span id="cb9-11"></span>
<span id="cb9-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># server ...</span></span></code></pre></div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<p>This change accompanies a set of new theme picker features described below.</p>
</section>
</section>
<section id="customizing-theme" class="level2">
<h2 data-anchor-id="customizing-theme">Customizing a shinyswatch theme</h2>
<p>Each <a href="https://posit-dev.github.io/py-shinyswatch/reference/index.html#themes"><code>shinyswatch.theme</code></a> is now a subclass of <code>shiny.ui.Theme</code>, an abstraction around the <a href="https://sass-lang.com">Sass files</a> that compile to a complete Shiny theme.</p>
<p>This means that you can now customize the themes by changing the Sass variables that define the theme’s colors, fonts, and other properties, using the <code>.add_defaults()</code>, <code>.add_mixins()</code> and <code>.add_rules()</code> methods. Each of these chainable methods take Sass variables or Sass rules as strings and insert them into the theme’s Sass file:</p>
<ul>
<li><code>.add_defaults()</code> adds Sass variables to the theme, <em>prior</em> to the theme’s own variables.</li>
<li><code>.add_mixins()</code> adds Sass mixins or rules to the theme, <em>after</em> the theme’s own mixins. (Mixins are <em>after</em> defaults.)</li>
<li><code>.add_rules()</code> adds Sass rules to the theme, <em>after</em> the theme’s own rules.</li>
</ul>
<div class="sourceCode" id="cb10" data-code-line-numbers="" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> shinyswatch</span>
<span id="cb10-2"></span>
<span id="cb10-3">(</span>
<span id="cb10-4">  shinyswatch.theme.zephyr</span>
<span id="cb10-5">  .add_defaults(</span>
<span id="cb10-6">    primary<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#aa00ff"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># purple</span></span>
<span id="cb10-7">    secondary<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#bfff00"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># lime green</span></span>
<span id="cb10-8">  )</span>
<span id="cb10-9">  .add_rules(</span>
<span id="cb10-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb10-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    strong {</span></span>
<span id="cb10-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      color: $primary;</span></span>
<span id="cb10-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    }</span></span>
<span id="cb10-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb10-15">  )</span>
<span id="cb10-16">)</span></code></pre></div>
<p>You can use this approach to tweak an existing shinyswatch theme to better match your organizations branding or your personal preferences. Pass the customized theme object to the <code>theme</code> argument of <code>shiny.express.ui.page_opts()</code> or of any <code>shiny.ui.page_*()</code> function to apply the changes to your app.</p>
</section>
<section id="theme-picker-improvements" class="level2">
<h2 data-anchor-id="theme-picker-improvements">Theme picker improvements</h2>
<p>The theme picker has been updated in two notable ways:</p>
<ol type="1">
<li><p><strong>Additional options.</strong> The theme picker dropdown will now automatically select the app’s initial theme, i.e.&nbsp;the theme passed to the page-level <code>theme</code> argument. This initial theme could be the default Shiny theme, a shinyswatch theme, or a custom theme created with <code>shiny.ui.Theme()</code>. We also include <code>shiny</code> and <code>bootstrap</code> themes in the picker by default, so your users can return to Shiny’s default theme if they want.</p></li>
<li><p><strong>Remembering the user’s choice.</strong> The theme picker will now remember the user’s theme choice across sessions. This means that if a user selects a theme, closes the app, and reopens it later, the app will remember the user’s theme choice. This feature uses the browser’s local storage<sup>1</sup> to remember the user’s choice.</p></li>
</ol>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Local storage is a browser feature that allows web applications to store data locally within the user’s browser. This data persists even after the user closes the browser, but is scoped in two important ways. First, the data is only accessible to Shiny apps on the same domain, i.e.&nbsp;all apps on <code>myusername.shinyapps.io</code> using the theme picker will share the same local storage. Second, the data is only accessible in the browser that stored it, i.e.&nbsp;the user’s theme choice will not be remembered if they open the app in a different browser or on a different device.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <guid>https://shiny.posit.co/blog/posts/shinyswatch-0.7.0/</guid>
  <pubDate>Fri, 19 Jul 2024 04:00:00 GMT</pubDate>
  <media:content url="https://shiny.posit.co/blog/posts/shinyswatch-0.7.0/feature.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Reintroducing the Shiny Extension for VS Code</title>
  <dc:creator>Garrick Aden-Buie</dc:creator>
  <link>https://shiny.posit.co/blog/posts/shiny-vscode-1.0.0/</link>
  <description><![CDATA[ 
<!-- Google Tag Manager (noscript) -->
 <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KHBDBW7" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<style type="text/css">
  #quarto-content>* {
  padding-top: 0px;
  }
</style>


        <div class="column-body-outset blog-image-container pb-5">
      <img src="https://shiny.posit.co/blog/posts/shiny-vscode-1.0.0/feature.png" style="width: 100%; height: auto;">
    </div>
    


<style>
  video {
    max-width: 100%;
    margin-bottom: 1rem;
  }
</style>
<div class="lead">
<p><strong>We’re excited to announce the new <a href="https://marketplace.visualstudio.com/items?itemName=Posit.shiny">Shiny extension</a> for VS Code!</strong> Along with a new name, the Shiny extension now supports running both <a href="../../../getstarted.html">Shiny for R</a> and <a href="https://shiny.posit.co/py">Shiny for Python</a> apps!</p>
</div>
<p>When we introduced the Shiny for Python VS Code extension, its name made a lot of sense: the extension helped Shiny for Python developers run their apps in VS Code. But with the latest v1.0.0 release, we’ve expanded the extension to support running Shiny for R apps – as well as a few new features for moving between local files and ShinyLive links – and we wanted a name that reflected that. In this post, we’ll talk through the new features and show you how to use them.</p>
<section id="installing-the-shiny-extension" class="level2">
<h2 class="anchored" data-anchor-id="installing-the-shiny-extension">Installing the Shiny extension</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shiny.posit.co/blog/posts/shiny-vscode-1.0.0/shiny-marketplace-header.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:100.0%" alt="The shiny extension page on vscode marketplace"></p>
</figure>
</div>
<p><strong>If you’re a new Shiny + VS Code user</strong>, you can install the extension from the <a href="https://marketplace.visualstudio.com/items?itemName=Posit.shiny">VS Code Marketplace</a> or the <a href="https://open-vsx.org/extension/posit/shiny">Open VSX Registry</a>, or by searching for “Shiny” in the Extensions view in VS Code. Be sure to avoid the extension named “Shiny (deprecated)” 😉</p>
<p><strong>If you’re already using the Shiny for Python extension</strong>, you can simply update the old extension to kick off a seamless transition in which the new extension will be automatically installed. Once installed, the new extension will prompt you to uninstall the older version.</p>
</section>
<section id="shiny-for-r-support" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="shiny-for-r-support">Shiny for R Support</h2>
<p>With the Shiny extension installed, whenever you open an <code>app.R</code> file — or another appropriately named Shiny for R app file<sup>1</sup> — the editor’s play button (<i class="bi bi-play" aria-label="play button"></i>) becomes a “Run Shiny App” button. Clicking the <i class="bi bi-play" aria-label="play button"></i> starts your app in a new terminal session and even enables <a href="https://shiny.posit.co/r/reference/shiny/latest/devmode.html">Shiny’s developer mode</a> for a better local development experience, including automatically restarting your app when you update and save the app’s source files<sup>2</sup>.</p>
<div class="column-page">
<video controls="">
  <source src="videos/run-shiny-r-app.webm" type="video/webm">
  <source src="videos/run-shiny-r-app.mp4" type="video/mp4">
</video>
</div>
</section>
<section id="shinylive" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="shinylive">ShinyLive</h2>
<p>ShinyLive is a free service for sharing Shiny apps via static hosting, where Shiny apps run entirely in the browser without the need for a server. Head to <a href="https://shinylive.io/py">shinylive.io/py</a> or <a href="shinylive.io/r">shinylive.io/r</a> to get started with the language of your choice. When your app is ready, share the ShinyLive link with others for instant deployment!</p>
<p>While ShinyLive features an online editor (for <a href="https://shinylive.io/r/editor">R</a> or <a href="https://shinylive.io/py/editor">Python</a>), sometimes you might want to create a ShinyLive link from files you’re editing in your IDE. The Shiny extension now gives you two ways to do this.</p>
<section id="create-a-shinylive-link-from-the-active-file" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="create-a-shinylive-link-from-the-active-file">Create a ShinyLive link from the active file</h3>
<p>For single-file apps, run the <strong>Create ShinyLive Link from Active File</strong> from the command palette with an <code>app.py</code> or <code>app.R</code> open and active in the editor.</p>
<div class="column-page">
<video controls="">
  <source src="videos/create-shiny-r-single.webm" type="video/webm">
  <source src="videos/create-shiny-r-single.mp4" type="video/mp4">
</video>
</div>
</section>
<section id="create-a-shinylive-link-from-multiple-files" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="create-a-shinylive-link-from-multiple-files">Create a ShinyLive link from multiple files</h3>
<p>For multi-file apps, select all of the files or directories you want to include in your ShinyLive app in the Explorer pane. Then right click on the selection and choose <strong>Create ShinyLive Link from Selected Files</strong>.</p>
<div class="column-page">
<video controls="">
  <source src="videos/create-shiny-py-multiple.webm" type="video/webm">
  <source src="videos/create-shiny-py-multiple.mp4" type="video/mp4">
</video>
</div>
<p>After picking your file(s) for the ShinyLive link, the Shiny extension will ask you which app mode you want to use (display the <em>app</em> or show an <em>editor</em> next to the app) and what action to take (to <em>open</em> or <em>copy</em> the link). You can also configure these options in the extension settings.</p>
</section>
<section id="save-the-app-from-a-shinylive-link" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="save-the-app-from-a-shinylive-link">Save the app from a ShinyLive link</h3>
<p>You can also create local files from a ShinyLive link using the <strong>Save App from ShinyLive Link</strong> command in the command palette. You’ll be prompted to paste the ShinyLive link and then to choose where the app will be saved in your workspace.</p>
<div class="column-page">
<video controls="">
  <source src="videos/save-shiny-py.webm" type="video/webm">
  <source src="videos/save-shiny-py.mp4" type="video/mp4">
</video>
</div>
</section>
</section>
<section id="new-snippets-and-settings" class="level2">
<h2 class="anchored" data-anchor-id="new-snippets-and-settings">New snippets and settings</h2>
<p><a href="https://code.visualstudio.com/docs/editor/userdefinedsnippets">Snippets in VS Code</a> are templates of reusable code accessible via the <strong>Insert snippet</strong> command in the Command Palette or as a tab-completion when you type out the snippet trigger text. The Shiny extension includes three text snippets to help you quickly create a Shiny app or Shiny module:</p>
<ul>
<li><p><code>shinyapp</code> creates a new Shiny application template</p></li>
<li><p><code>shinymod</code> creates a new Shiny module template</p></li>
<li><p><code>shinyexpress</code> creates a new Shiny Express app template (in Python)</p></li>
</ul>
<p>We’ve also expanded the settings available to the Shiny extension. Most notably, the added <code>shiny.previewType</code> setting determines whether the app preview is opened inside VS Code (<code>internal</code>), in an <code>external</code> browser, or not at all (<code>none</code>). A number of ShinyLive settings allow you to choose default values to speed up link creation. The full list of extension settings are available in the extension page in VS Code or in <a href="https://github.com/posit-dev/shiny-vscode#extension-settings">the extension repository</a>.</p>
</section>
<section id="thanks" class="level2">
<h2 class="anchored" data-anchor-id="thanks">Thanks!</h2>
<p>Thank you for trying out the Shiny extension for VS Code! If you find it helpful, please rate the extension on <a href="https://marketplace.visualstudio.com/items?itemName=Posit.shiny">the marketplace</a> or <a href="https://open-vsx.org/extension/posit/shiny">the open-vsx registry</a>.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>A valid Shiny for R app is an R file that includes the word “shiny” in its contents and is named <code>app.R</code>, <code>ui.R</code>, <code>server.R</code>, or has a name that starts or ends with <code>app</code>.↩︎</p></li>
<li id="fn2"><p>Developer mode enables a few Shiny options that improve the local development experience and can be turned on at the R console by calling <code>shiny::devmode()</code>. Notable among these options is setting <code>options(shiny.autoreload = TRUE)</code> to automatically reload the app whenever its source files change. An extension setting can be used to disable devmode.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <guid>https://shiny.posit.co/blog/posts/shiny-vscode-1.0.0/</guid>
  <pubDate>Wed, 22 May 2024 04:00:00 GMT</pubDate>
  <media:content url="https://shiny.posit.co/blog/posts/shiny-vscode-1.0.0/feature.png" medium="image" type="image/png" height="76" width="144"/>
</item>
<item>
  <title>Editable data tables in Shiny for Python 0.9.0</title>
  <dc:creator>Shiny Team</dc:creator>
  <link>https://shiny.posit.co/blog/posts/shiny-python-0.9.0/</link>
  <description><![CDATA[ 
<!-- Google Tag Manager (noscript) -->
 <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KHBDBW7" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<style type="text/css">
  #quarto-content>* {
  padding-top: 0px;
  }
</style>


        <div class="column-body-outset blog-image-container pb-5">
      <img src="https://shiny.posit.co/blog/posts/shiny-python-0.9.0/shiny-090.png" alt="Shiny for Python 0.9.0" style="width: 100%; height: auto;">
    </div>
    


<p>Shiny for Python 0.9.0 is out! This version brings some exciting new features and improvements to the Shiny ecosystem. You can read the full <a href="https://github.com/posit-dev/py-shiny/blob/main/CHANGELOG.md#090---2024-04-16">changelog</a> for a complete list of changes.</p>
<section id="editable-data-tables-and-data-grids" class="level2">
<h2 data-anchor-id="editable-data-tables-and-data-grids">Editable Data Tables and Data Grids</h2>
<p><img src="https://shiny.posit.co/blog/posts/shiny-python-0.9.0/edit-your-data.gif" class="img-fluid"></p>
<p>One of the most exciting new features in this release is the ability to make your <a href="https://shiny.posit.co/py/api/core/render.DataTable.html"><code>DataTable</code></a> and <a href="https://shiny.posit.co/py/api/core/render.DataGrid.html"><code>DataGrid</code></a> components editable. By setting <code>editable=True</code> within <code>DataGrid</code> or <code>DataTable</code>, you can allow users to directly edit the cells in your tables. This opens up a whole new range of possibilities for interactive data applications!</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shiny.express <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> render</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@render.data_frame</span></span>
<span id="cb1-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> dt():</span>
<span id="cb1-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> render.DataGrid(my_data, editable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@render.data_frame</span></span>
<span id="cb1-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> edited_dt():</span>
<span id="cb1-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> dt.data_view()</span></code></pre></div>
</section>
<section id="empowered-data-frame-renderer" class="level2">
<h2 data-anchor-id="empowered-data-frame-renderer">Empowered Data Frame Renderer</h2>
<p>You may have noticed in the previous example that we are now calling methods on the <code>dt</code> renderer object itself to access the edited data. This is part of a broader effort to empower the renderers with additional methods that make it easier to work with anything related to the renderer.</p>
<p>Typically, we would retrieve this Output related information via the <code>input</code> object (e.g.&nbsp;<code>input.&lt;ID&gt;_&lt;KEY&gt;</code>). This feels a little magical in that is <em>just appears</em> within the <code>input</code> object. There are no hints other than disconnected documentation on what <code>input</code> values are available or even what their values represent.</p>
<p>Using <code>@render.data_frame</code> decorator, we upgrade your render function into a <code>Renderer</code> class instance that has helper methods specific to the renderer. The Shiny Team is currently exploring what methods we can add to empower the data frame renderer. So far, the data frame renderer has been enhanced with these extra methods for you to reactively access computed values:</p>
<ul>
<li><code>.data()</code> - Reactive value of the original data frame.</li>
<li><code>.data_view(*, selected:bool = False)</code> - Reactive value of the data frame with all applied edits, column filters, and column sorting. If <code>selected=True</code>, only the selected rows/columns are returned. <!-- * `.selection_modes()` - Reactive value of the data frame's possible selection modes. --></li>
<li><code>.input_cell_selection()</code> - Reactive value of the data frame’s selected cells. This returns a dictionary that contains <code>type</code> and possibly <code>rows</code> and <code>columns</code> that contain the selected row and column indices, respectively.</li>
<li><code>.update_cell_selection(selection)</code> - Method to update the selected cells of the data frame. The <code>selection</code> argument should be a dictionary that contains <code>type</code> and possibly <code>rows</code> and <code>columns</code> that contain the selected row and column indices, respectively. <!-- * `.cell_patches()` - Reactive value of the list of all applied edits to the data frame cells made by the user. --></li>
<li><code>.set_patch_fn(fn)</code> - Decorator to set a function that will be called when the user makes an edit to the data frame. The function should accept a single patch dictionary as an argument and return an upgraded value. <!-- * `.set_patches_fn(fn)` - Decorator to set a function that will be called when the user makes edits to the data frame. The function should accept a list of patch dictionaries as an argument and return a (possibly) upgraded list of patch dictionaries. --></li>
</ul>
<p>(<a href="https://shiny.posit.co/py/api/core/render.data_frame.html#methods">Link</a> to data frame renderer helper methods and attributes.)</p>
<p>By adding the helper methods, we gain documentation, typing support, and an explicit way to access the data frame’s accessory information.</p>
<p>We’re excited about this approach and are looking at ways we can bring it to other outputs. Please let us know what you think!</p>
</section>
<section id="changes-to-row-selection-with-data-tables-and-data-grids" class="level2">
<h2 data-anchor-id="changes-to-row-selection-with-data-tables-and-data-grids">Changes to row selection with Data Tables and Data Grids</h2>
<p>In addition to editability, we’ve also made some changes to the way row selection works in these components. The <code>row_selection</code> parameter has been deprecated in favor of the new <code>selection_mode</code> parameter. You can now use <code>selection_mode="row"</code> for single row selection or <code>selection_mode="rows"</code> for multiple row selection.</p>
<p>Also note that the way to access which selected rows has changed. Previously, if your table output was named <code>dt</code>, then you would access the selected rows with <code>input.dt_selected_rows()</code>. As of 0.9.0, you instead should use <code>dt.input_cell_selection()["rows"]</code>.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@render.data_frame</span></span>
<span id="cb2-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> dt():</span>
<span id="cb2-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> DataGrid(my_data)</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@reactive.effect</span></span>
<span id="cb2-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> _():</span>
<span id="cb2-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Old way</span></span>
<span id="cb2-8">  selected_rows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>.dt_selected_rows()</span>
<span id="cb2-9"></span>
<span id="cb2-10">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># New in v0.9.0</span></span>
<span id="cb2-11">  selected_rows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dt.input_cell_selection()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rows"</span>]</span></code></pre></div>
<p>In case you’re wondering, we are planning to add support for other types of selections, like columns and rectangular regions.</p>
<p><strong>Update:</strong> <code>.input_row_selection()</code> and <code>input.&lt;ID&gt;_selected_rows()</code> were prematurely removed in <code>v0.9.0</code> and will be restored (as deprecated) in the next release.</p>
</section>
<section id="error-console" class="level2">
<h2 data-anchor-id="error-console">Error Console</h2>
<p>Shiny for Python 0.9.0 includes an error console that surfaces client-side errors directly in the browser’s UI when running applications locally. The error console also catches common issues, such as duplicated input or output IDs, that can only be caught when the app is running.</p>
<p><img src="https://shiny.posit.co/blog/posts/shiny-python-0.9.0/error-console.png" class="img-fluid"></p>
<p>The error console is enabled by default when you launch your app with <code>shiny run</code> or via the <a href="https://marketplace.visualstudio.com/items?itemName=Posit.shiny-python">Shiny VS Code extension</a>. The error console is automatically disabled when your app is deployed to a server, but can also be manually disabled with <code>shiny run --no-dev-mode</code>.</p>
</section>
<section id="shiny-express-in-quarto-dashboards" class="level2">
<h2 data-anchor-id="shiny-express-in-quarto-dashboards">Shiny Express in Quarto Dashboards</h2>
<p>Shiny Express syntax is now supported within Quarto Dashboards! This makes it even easier to create interactive data dashboards with Shiny and Quarto.</p>
<details>
<summary>
Quarto code
</summary>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb3-2"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">title:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> "Palmer Penguins"</span></span>
<span id="cb3-3"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">format:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> dashboard</span></span>
<span id="cb3-4"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">server:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> shiny</span></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{python}</span></span>
<span id="cb3-8"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| context: setup</span></span>
<span id="cb3-9"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">import seaborn as sns</span></span>
<span id="cb3-10"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">from shiny.express import render, ui, input</span></span>
<span id="cb3-11"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">penguins = sns.load_dataset("penguins")</span></span>
<span id="cb3-12"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb3-13"></span>
<span id="cb3-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"># {.sidebar}</span></span>
<span id="cb3-15"></span>
<span id="cb3-16"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{python}</span></span>
<span id="cb3-17"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">species = list(penguins["species"].value_counts().index)</span></span>
<span id="cb3-18"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">ui.input_checkbox_group(</span></span>
<span id="cb3-19"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    "species", "Species:",</span></span>
<span id="cb3-20"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    species, selected = species</span></span>
<span id="cb3-21"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-22"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb3-23"></span>
<span id="cb3-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"># Plots</span></span>
<span id="cb3-25"></span>
<span id="cb3-26"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{python}</span></span>
<span id="cb3-27"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@render.plot</span></span>
<span id="cb3-28"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">def depth():</span></span>
<span id="cb3-29"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    data = penguins[penguins["species"].isin(input.species())]</span></span>
<span id="cb3-30"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    return sns.displot(</span></span>
<span id="cb3-31"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        data, x = "bill_depth_mm",</span></span>
<span id="cb3-32"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        hue = "species", kind = "kde",</span></span>
<span id="cb3-33"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        fill = True</span></span>
<span id="cb3-34"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    )</span></span>
<span id="cb3-35"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
</details>
<p><img src="https://shiny.posit.co/blog/posts/shiny-python-0.9.0/quarto-and-shiny-express.png" class="img-fluid"></p>
</section>
<section id="other-improvements" class="level2">
<h2 data-anchor-id="other-improvements">Other Improvements</h2>
<p>The <code>shiny create</code> CLI command now includes additional templates and an option to open the new <a href="https://shiny.posit.co/py/templates/">Shiny Templates website</a> where you can find templates to quickly jump start your app. This makes it easier than ever to get started with Shiny for Python! 🏎️💨</p>
<p><img src="https://shiny.posit.co/blog/posts/shiny-python-0.9.0/shiny-template.png" class="img-fluid"></p>
<p>Layout components have received several improvements in this release. The <code>col_widths</code> argument of <code>ui.layout_columns()</code> now sets the <code>sm</code> breakpoint by default, providing better responsiveness on smaller screens. <code>ui.card()</code> and <code>ui.value_box()</code> now have an <code>id</code> argument that allows you to track the full-screen state of these components. You can also now set <code>min_height</code> and <code>max_height</code> on <code>ui.value_box()</code>, <code>ui.layout_columns()</code>, and <code>ui.layout_column_wrap()</code> to ensure that your layouts always stay within a certain size range.</p>
<hr>
<p>We’re thrilled to bring you these new features and improvements in Shiny for Python 0.9.0. As always, if you have any questions or feedback, please <a href="https://discord.gg/yMGCamUMnS">join us on Discord</a> or <a href="https://github.com/posit-dev/py-shiny/issues/new">open an issue on GitHub</a>. Happy Shiny-ing!</p>


</section>

 ]]></description>
  <guid>https://shiny.posit.co/blog/posts/shiny-python-0.9.0/</guid>
  <pubDate>Thu, 09 May 2024 04:00:00 GMT</pubDate>
  <media:content url="https://shiny.posit.co/blog/posts/shiny-python-0.9.0/edit-your-data.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Introducing Shiny for Python Templates</title>
  <dc:creator>Shiny Team</dc:creator>
  <link>https://shiny.posit.co/blog/posts/introducing-shiny-templates/</link>
  <description><![CDATA[ 
<!-- Google Tag Manager (noscript) -->
 <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KHBDBW7" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<style type="text/css">
  #quarto-content>* {
  padding-top: 0px;
  }
</style>


        <div class="column-body-outset blog-image-container pb-5">
      <img src="https://shiny.posit.co/blog/posts/introducing-shiny-templates/templates2.jpg" alt="An illustration of a Shiny Template" style="width: 100%; height: auto;">
    </div>
    


<p>Last month we introduced the Shiny for Python <a href="https://shiny.posit.co/py/components/">Components</a> and <a href="https://shiny.posit.co/py/layouts/">Layouts</a> galleries, which are a simple, visual overview of what Shiny can do mixed with cheatsheet-like information. They are for new and seasoned users alike.</p>
<p>We’re excited to announce a third section which brings those two things together into opinionated boilerplate code: <a href="https://shiny.posit.co/py/templates/">Shiny Templates</a>.</p>
<p>These will allow you to hit the ground running, whether you need a <a href="https://shiny.posit.co/py/templates/basic-app-plot/">quick simple app</a> or a <a href="https://shiny.posit.co/py/templates/stock-app/">quick complicated one</a> 🙂.</p>
<p>When making Shiny apps, we’ve noticed we sometimes don’t know what the app’s UX will eventually become. As an app’s functionality grows and grows, the usability of the app can decrease. Our goal here is to set Shiny developers up for success (in the short AND long term.) We hope you feel the same! (If you have any feedback, never hesitate <a href="https://github.com/posit-dev/py-shiny-templates/issues">to let us know</a>.)</p>
<p>Simply put: Shiny Templates will dramatically improve your start time, and save you from UX headaches down the road. This is just a start… We expect this gallery to grow as time goes on.</p>
<p><a href="https://shiny.posit.co/py/templates/" class="btn btn-primary px-5 my-4">See Shiny Templates</a></p>
<section id="demos" class="level2">
<h2 data-anchor-id="demos">Demos</h2>
<p>We asked Carson Sievert to quickly get an app running locally, and show how he’d begin to make it his own:</p>
<div class="h5 mt-5 mb-4">
Introducing Shiny for Python Templates
</div>
<div class="video-container">
<iframe width="560" height="315" src="https://www.youtube.com/embed/zQJiMRStYE8?si=tRtAngSkZ-ijf1cF" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
</div>
<div class="h5 mt-5 mb-4">
Using your dataset in Shiny Templates
</div>
<div class="video-container">
<iframe width="560" height="315" src="https://www.youtube.com/embed/ou-09NHcH5w?si=kjiNUzv13yBNUBPm" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
</div>


</section>

 ]]></description>
  <guid>https://shiny.posit.co/blog/posts/introducing-shiny-templates/</guid>
  <pubDate>Fri, 05 Apr 2024 04:00:00 GMT</pubDate>
  <media:content url="https://shiny.posit.co/blog/posts/introducing-shiny-templates/templates2.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Shiny for R updates: Extended tasks, JavaScript errors, and many bslib improvements</title>
  <dc:creator>Carson Sievert</dc:creator>
  <link>https://shiny.posit.co/blog/posts/shiny-r-1.8.1/</link>
  <description><![CDATA[ <!-- Google Tag Manager (noscript) --><noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KHBDBW7" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<style type="text/css">
  #quarto-content>* {
  padding-top: 0px;
  }
</style>
<div class="column-body-outset blog-image-container pb-5">
      <img src="https://shiny.posit.co/blog/posts/shiny-r-1.8.1/feature.png" style="width: 100%; height: auto;">
</div>
    


<style>
img { border-radius: 8px; }
</style>
<p>The Shiny team is delighted to announce another round of updates for 9 different R packages. In this post, we’ll introduce three notable things: non-blocking operations, a JavaScript error dialog and many bslib improvements. For a detailed list of changes, be sure to check out the release notes section of this post.</p>
<p>Although 9 packages received updates, the focus of this post is on <a href="https://shiny.posit.co/">shiny</a> and <a href="https://rstudio.github.io/bslib/">bslib</a>, which you can install with the following command:</p>
<div class="cell">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/utils/install.packages.html">install.packages</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shiny"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bslib"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<section id="nonblocking" class="level2"><h2 class="anchored" data-anchor-id="nonblocking">Non-blocking operations</h2>
<p>The biggest new feature in this release is the ability to run <strong>truly non-blocking operations</strong> in Shiny via <code>ExtendedTask</code>.</p>
<section id="the-promise-of-async-programming" class="level3"><h3 class="anchored" data-anchor-id="the-promise-of-async-programming">The promise of async programming</h3>
<p>For years, we’ve promoted asynchronous programming with the <a href="https://rstudio.github.io/promises/">promises</a> package as a way to improve the performance of large Shiny apps. <a href="https://rstudio.github.io/promises/">promises</a> can be used to prevent operations in one user session from blocking operations in another user’s session, helping scale your app to multiple concurrent users supported by a single R process.</p>
<p>However, <a href="https://rstudio.github.io/promises/">promises</a> alone won’t prevent an operation in one session from blocking other operations in that same session.</p>
</section><section id="introducing-extendedtask" class="level3"><h3 class="anchored" data-anchor-id="introducing-extendedtask">Introducing ExtendedTask</h3>
<p>We’re introducing <code>ExtendedTask</code> as a new way to manage long-running operations that won’t block within or across sessions, meaning that a user can launch an <code>ExtendedTask</code> and still interact with the app while it’s running.</p>
<p>Additionally, we’ve found that <code>ExtendedTask</code> provides an elegant way to manage async operations. Within the task, you’ll use <a href="https://rstudio.github.io/promises/">promises</a> to create the async operation, but in the rest of your app you can use <code>ExtendedTask</code> methods to start the task or react to results when they arrive.</p>
<p>As a result, <code>ExtendedTask</code> is now our recommended starting point for non-blocking tasks in Shiny. We’d love to show you a full example right now, but for the sake of space in this blog post we’ll urge you to visit the <a href="https://shiny.posit.co/r/articles/improve/nonblocking">Non-blocking operations article</a>, also on this blog, for a complete introduction.</p>
</section><section id="a-new-task-button" class="level3"><h3 class="anchored" data-anchor-id="a-new-task-button">A new task button</h3>
<p>As a companion to <code>ExtendedTask</code>, we’ve created <code><a href="https://rstudio.github.io/bslib/reference/input_task_button.html">bslib::input_task_button()</a></code>, a special button that displays visual feedback when a task is in progress. As it turns out, <code><a href="https://rstudio.github.io/bslib/reference/input_task_button.html">input_task_button()</a></code> provides a nice experience for any long-running task, not just <code>ExtendedTask</code>. Think of it like an <code><a href="https://rdrr.io/pkg/shiny/man/actionButton.html">actionButton()</a></code> that, when clicked, shows a busy indicator (and prevents further clicks) up until the next time the server is idle. Here’s an example of it in action in a basic Shiny app:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://shiny.posit.co/">shiny</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/">bslib</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/page.html">page_fixed</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/input_task_button.html">input_task_button</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"launch_task"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Launch task"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/textOutput.html">textOutput</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"result"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">server</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">output</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">output</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">result</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/renderPrint.html">renderText</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/req.html">req</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">launch_task</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># require a button press to launch</span></span>
<span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/Sys.sleep.html">Sys.sleep</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>               <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># simulate expensive operation</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/paste.html">paste</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of clicks:"</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">launch_task</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/shinyApp.html">shinyApp</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">server</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure"><p><img src="https://shiny.posit.co/blog/posts/shiny-r-1.8.1/task-button.gif" class="shadow img-fluid figure-img"></p>
<figcaption>The task button showing a busy indication while the result is still processing</figcaption></figure>
</div>
<p><br class="mb-4"></p>
</section></section><section id="js-errors" class="level2"><h2 class="anchored" data-anchor-id="js-errors">JS error dialog</h2>
<p>Another exciting new feature is Shiny’s JavaScript error dialog, which makes critical client-side errors more discoverable. To use the error dialog, turn on Shiny’s developer features by calling <code><a href="https://rdrr.io/pkg/shiny/man/devmode.html">shiny::devmode()</a></code> before running your app locally<sup>1</sup>.</p>
<p>In addition to the dialog, we’ve also started throwing more errors in situations where behavior is undefined, such as when two inputs (or outputs) have the same ID. For example:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://shiny.posit.co/">shiny</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/">bslib</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/page.html">page_fixed</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/textInput.html">textInput</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/textInput.html">textInput</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/shinyApp.html">shinyApp</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span>, \<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">...</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure"><p><img src="https://shiny.posit.co/blog/posts/shiny-r-1.8.1/error-dialog.png" class="img-fluid figure-img"></p>
<figcaption>The error dialog displaying the duplicate IDs error</figcaption></figure>
</div>
<aside id="footnotes" class="footnotes footnotes-end-of-section"><hr>
<ol>
<li id="fn1">
<p>Read more about <a href="https://shiny.posit.co/r/reference/shiny/latest/devmode.html">shiny devmode in our docs</a>. If you’d like to turn on dev mode for all of your local interactive session, you can add the following snippet your <code>.Rprofile</code> either in your home directory or your project directory (use <code><a href="https://usethis.r-lib.org/reference/edit.html">usethis::edit_r_profile()</a></code> to open either):</p>
<pre><code>if (interactive() &amp;&amp; requireNamespace("shiny", quietly = TRUE)) {
  shiny::devmode()
}</code></pre>
↩︎
</li>
</ol></aside></section><section id="bslib" class="level2"><h2 class="anchored" data-anchor-id="bslib">bslib improvements</h2>
<p>In addition to the new <code><a href="https://rstudio.github.io/bslib/reference/input_task_button.html">input_task_button()</a></code>, <code>bslib</code> received many <a href="https://rstudio.github.io/bslib/news/index.html#bslib-070">improvements and fixes in this release</a>. Most of these improvements are focused on <code><a href="https://rstudio.github.io/bslib/reference/sidebar.html">sidebar()</a></code>s, <code>cards()</code>s, <code><a href="https://rstudio.github.io/bslib/reference/layout_columns.html">layout_columns()</a></code>s, and the default <code><a href="https://rstudio.github.io/bslib/reference/bs_theme.html">bs_theme()</a></code>.</p>
<p>To highlight a new feature, <code><a href="https://rstudio.github.io/bslib/reference/card.html">card()</a></code> now reports its <code>full_screen</code> state to the server, which can be useful for various things like providing more context in a full-screen view. Just give the card an <code>id</code> and read <code>input${id}_full_screen</code> in the server, replacing <code>{id}</code> with the actual <code>id</code> value of your card.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure"><p><img src="https://shiny.posit.co/blog/posts/shiny-r-1.8.1/full-screen.gif" class="shadow img-fluid figure-img"></p>
<figcaption>An expandable card that shows some additional text when it goes full screen.</figcaption></figure>
</div>
<div class="cell">
<details class="code-fold"><summary>Code</summary><div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://shiny.posit.co/">shiny</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/">bslib</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://ggplot2.tidyverse.org">ggplot2</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/page.html">page_fixed</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/card.html">card</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    full_screen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span>    id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"my_card"</span>,</span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/card_body.html">card_header</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"My plot"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fill ensures the plot fills when full_screen</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/htmlOutput.html">uiOutput</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"visual"</span>, fill <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">server</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">output</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">session</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">output</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">visual</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/renderUI.html">renderUI</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">plot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/plotOutput.html">plotOutput</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/Logic.html">isTRUE</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">my_card_full_screen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># In full screen mode, show the plot plus some additional text</span></span>
<span>      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/layout_columns.html">layout_columns</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">plot</span>,</span>
<span>        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lorem</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ipsum</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>        col_widths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># otherwise, just show the plot</span></span>
<span>      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">plot</span></span>
<span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">output</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">plot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/renderPlot.html">renderPlot</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">mtcars</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">mpg</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">wt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span>      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span>      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>base_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/shinyApp.html">shinyApp</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">server</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</details>
</div>
</section><section id="release-notes" class="level2"><h2 class="anchored" data-anchor-id="release-notes">Release notes</h2>
<p>This post doesn’t cover all of the changes and updates that happened in the Shiny universe in this release cycle. To learn more about specific changes in each package, dive into the release notes linked below!</p>
<p><strong>Big shout out to everyone involved!</strong> 💙 We’d want to extend a huge thank you to everyone who contributed pull requests, bug reports and feature requests. Your contributions make Shiny brilliant!</p>
<section id="bslib-v0.7.0" class="level4"><h4 class="anchored" data-anchor-id="bslib-v0.7.0">bslib <a href="https://rstudio.github.io/bslib/news/index.html#bslib-070">v0.7.0</a>
</h4>
<p><a href="https://github.com/benubah">@benubah</a>, <a href="https://github.com/CIOData">@CIOData</a>, <a href="https://github.com/clementlefevre">@clementlefevre</a>, <a href="https://github.com/cpsievert">@cpsievert</a>, <a href="https://github.com/Damonsoul">@Damonsoul</a>, <a href="https://github.com/davemcg">@davemcg</a>, <a href="https://github.com/davos-i">@davos-i</a>, <a href="https://github.com/gadenbuie">@gadenbuie</a>, <a href="https://github.com/howardbaek">@howardbaek</a>, <a href="https://github.com/ideusoes">@ideusoes</a>, <a href="https://github.com/jcheng5">@jcheng5</a>, <a href="https://github.com/kalimu">@kalimu</a>, <a href="https://github.com/lukebandy">@lukebandy</a>, <a href="https://github.com/malcolmbarrett">@malcolmbarrett</a>, <a href="https://github.com/Milko-B">@Milko-B</a>, <a href="https://github.com/ocstringham">@ocstringham</a>, <a href="https://github.com/rickhelmus">@rickhelmus</a>, <a href="https://github.com/royfrancis">@royfrancis</a>, <a href="https://github.com/stla">@stla</a>, <a href="https://github.com/tai-mi">@tai-mi</a>, <a href="https://github.com/tanho63">@tanho63</a>, <a href="https://github.com/toxintoxin">@toxintoxin</a>, <a href="https://github.com/TymekDev">@TymekDev</a>, <a href="https://github.com/udurraniAtPresage">@udurraniAtPresage</a>, <a href="https://github.com/WickM">@WickM</a>, <a href="https://github.com/wish1832">@wish1832</a>, and <a href="https://github.com/zross">@zross</a>.</p>
</section><section id="htmltools-v0.5.8" class="level4"><h4 class="anchored" data-anchor-id="htmltools-v0.5.8">htmltools <a href="https://rstudio.github.io/htmltools/news/index.html#htmltools-058">v0.5.8</a>
</h4>
<p><a href="https://github.com/cpsievert">@cpsievert</a>, <a href="https://github.com/Emanuel-1986">@Emanuel-1986</a>, <a href="https://github.com/gadenbuie">@gadenbuie</a>, <a href="https://github.com/olivroy">@olivroy</a>, <a href="https://github.com/romainfrancois">@romainfrancois</a>, and <a href="https://github.com/russHyde">@russHyde</a>.</p>
</section><section id="httpuv-v1.6.12" class="level4"><h4 class="anchored" data-anchor-id="httpuv-v1.6.12">httpuv <a href="https://cran.r-project.org/web/packages/httpuv/news/news.html">v1.6.12</a>
</h4>
<p><a href="https://github.com/cpsievert">@cpsievert</a>, <a href="https://github.com/gadenbuie">@gadenbuie</a>, and <a href="https://github.com/nunotexbsd">@nunotexbsd</a>.</p>
</section><section id="leaflet-v2.2.2" class="level4"><h4 class="anchored" data-anchor-id="leaflet-v2.2.2">leaflet <a href="https://cran.r-project.org/web/packages/leaflet/news/news.html">v2.2.2</a>
</h4>
<p><a href="https://github.com/ainefairbrother">@ainefairbrother</a>, <a href="https://github.com/amegbor">@amegbor</a>, <a href="https://github.com/asitemade4u">@asitemade4u</a>, <a href="https://github.com/bmaitner">@bmaitner</a>, <a href="https://github.com/cderv">@cderv</a>, <a href="https://github.com/cpsievert">@cpsievert</a>, <a href="https://github.com/gadenbuie">@gadenbuie</a>, <a href="https://github.com/jebyrnes">@jebyrnes</a>, <a href="https://github.com/mkoohafkan">@mkoohafkan</a>, <a href="https://github.com/olivroy">@olivroy</a>, <a href="https://github.com/olyerickson">@olyerickson</a>, <a href="https://github.com/SpeckledJim2">@SpeckledJim2</a>, and <a href="https://github.com/yoelii">@yoelii</a>.</p>
</section><section id="plotly-v4.10.4" class="level4"><h4 class="anchored" data-anchor-id="plotly-v4.10.4">plotly <a href="https://cran.r-project.org/web/packages/plotly/news/news.html">v4.10.4</a>
</h4>
<p><a href="https://github.com/AdroMine">@AdroMine</a>, <a href="https://github.com/AlexisDerumigny">@AlexisDerumigny</a>, <a href="https://github.com/aloboa">@aloboa</a>, <a href="https://github.com/aniskara">@aniskara</a>, <a href="https://github.com/Balaika">@Balaika</a>, <a href="https://github.com/baranovskypd">@baranovskypd</a>, <a href="https://github.com/brennanfalcy">@brennanfalcy</a>, <a href="https://github.com/Brishan200">@Brishan200</a>, <a href="https://github.com/byandell">@byandell</a>, <a href="https://github.com/cpsievert">@cpsievert</a>, <a href="https://github.com/dgrignol">@dgrignol</a>, <a href="https://github.com/dvg-p4">@dvg-p4</a>, <a href="https://github.com/FunctionalUrology">@FunctionalUrology</a>, <a href="https://github.com/jeffandcyrus">@jeffandcyrus</a>, <a href="https://github.com/Jensxy">@Jensxy</a>, <a href="https://github.com/JinTonique">@JinTonique</a>, <a href="https://github.com/KarlKaise">@KarlKaise</a>, <a href="https://github.com/KatChampion">@KatChampion</a>, <a href="https://github.com/lukelockley">@lukelockley</a>, <a href="https://github.com/meldarionqeusse">@meldarionqeusse</a>, <a href="https://github.com/morrisseyj">@morrisseyj</a>, <a href="https://github.com/mot12341234">@mot12341234</a>, <a href="https://github.com/msgoussi">@msgoussi</a>, <a href="https://github.com/nlooije">@nlooije</a>, <a href="https://github.com/noamross">@noamross</a>, <a href="https://github.com/olivroy">@olivroy</a>, <a href="https://github.com/OverLordGoldDragon">@OverLordGoldDragon</a>, <a href="https://github.com/peter-atkinson">@peter-atkinson</a>, <a href="https://github.com/salim-b">@salim-b</a>, <a href="https://github.com/syeddans">@syeddans</a>, <a href="https://github.com/TheAnalyticalEdge">@TheAnalyticalEdge</a>, <a href="https://github.com/tomasnobrega">@tomasnobrega</a>, and <a href="https://github.com/TopBottomTau">@TopBottomTau</a>.</p>
</section><section id="plumber-v1.2.2" class="level4"><h4 class="anchored" data-anchor-id="plumber-v1.2.2">plumber <a href="https://www.rplumber.io/news/index.html">v1.2.2</a>
</h4>
<p><a href="https://github.com/alexverse">@alexverse</a>, <a href="https://github.com/apalacio9502">@apalacio9502</a>, <a href="https://github.com/apriandito">@apriandito</a>, <a href="https://github.com/ArcadeAntics">@ArcadeAntics</a>, <a href="https://github.com/aronatkins">@aronatkins</a>, <a href="https://github.com/BioTimHaley">@BioTimHaley</a>, <a href="https://github.com/ColinFay">@ColinFay</a>, <a href="https://github.com/cpsievert">@cpsievert</a>, <a href="https://github.com/edavidaja">@edavidaja</a>, <a href="https://github.com/enriquecaballero">@enriquecaballero</a>, <a href="https://github.com/ex0ticOne">@ex0ticOne</a>, <a href="https://github.com/feodosiikraft">@feodosiikraft</a>, <a href="https://github.com/fmalk">@fmalk</a>, <a href="https://github.com/GraphZal">@GraphZal</a>, <a href="https://github.com/hedsnz">@hedsnz</a>, <a href="https://github.com/howardbaek">@howardbaek</a>, <a href="https://github.com/ihamod">@ihamod</a>, <a href="https://github.com/jangorecki">@jangorecki</a>, <a href="https://github.com/jasonheffner">@jasonheffner</a>, <a href="https://github.com/jonthegeek">@jonthegeek</a>, <a href="https://github.com/jpdugo">@jpdugo</a>, <a href="https://github.com/jwebbsoma">@jwebbsoma</a>, <a href="https://github.com/king-of-poppk">@king-of-poppk</a>, <a href="https://github.com/m-muecke">@m-muecke</a>, <a href="https://github.com/meztez">@meztez</a>, <a href="https://github.com/MJSchut">@MJSchut</a>, <a href="https://github.com/mmuurr">@mmuurr</a>, <a href="https://github.com/pietervosnl">@pietervosnl</a>, <a href="https://github.com/pinduzera">@pinduzera</a>, <a href="https://github.com/r2evans">@r2evans</a>, <a href="https://github.com/schloerke">@schloerke</a>, <a href="https://github.com/sdgd165">@sdgd165</a>, <a href="https://github.com/slodge">@slodge</a>, <a href="https://github.com/slodge-work">@slodge-work</a>, <a href="https://github.com/statasaurus">@statasaurus</a>, <a href="https://github.com/timeddilation">@timeddilation</a>, <a href="https://github.com/tylerlittlefield">@tylerlittlefield</a>, and <a href="https://github.com/wikithink">@wikithink</a>.</p>
</section><section id="sass-v0.4.9" class="level4"><h4 class="anchored" data-anchor-id="sass-v0.4.9">sass <a href="https://rstudio.github.io/sass/news/index.html">v0.4.9</a>
</h4>
<p><a href="https://github.com/cpsievert">@cpsievert</a>, <a href="https://github.com/jeroen">@jeroen</a>, and <a href="https://github.com/yulric">@yulric</a>.</p>
</section><section id="shiny-v1.8.1" class="level4"><h4 class="anchored" data-anchor-id="shiny-v1.8.1">shiny <a href="https://shiny.posit.co/r/reference/shiny/1.8.1/upgrade.html">v1.8.1</a>
</h4>
<p><a href="https://github.com/apalacio9502">@apalacio9502</a>, <a href="https://github.com/Arthfael">@Arthfael</a>, <a href="https://github.com/avoidaway">@avoidaway</a>, <a href="https://github.com/bioinformzhang">@bioinformzhang</a>, <a href="https://github.com/chendaniely">@chendaniely</a>, <a href="https://github.com/cpsievert">@cpsievert</a>, <a href="https://github.com/Daishoulu">@Daishoulu</a>, <a href="https://github.com/davidmacro">@davidmacro</a>, <a href="https://github.com/etbrand">@etbrand</a>, <a href="https://github.com/gadenbuie">@gadenbuie</a>, <a href="https://github.com/gunawebs">@gunawebs</a>, <a href="https://github.com/hadley">@hadley</a>, <a href="https://github.com/HugoGit39">@HugoGit39</a>, <a href="https://github.com/ismirsehregal">@ismirsehregal</a>, <a href="https://github.com/jcheng5">@jcheng5</a>, <a href="https://github.com/JohnCoene">@JohnCoene</a>, <a href="https://github.com/jsendak">@jsendak</a>, <a href="https://github.com/laresbernardo">@laresbernardo</a>, <a href="https://github.com/MartinBaumga">@MartinBaumga</a>, <a href="https://github.com/nstrayer">@nstrayer</a>, <a href="https://github.com/olivroy">@olivroy</a>, <a href="https://github.com/Roleren">@Roleren</a>, <a href="https://github.com/RSchwinn">@RSchwinn</a>, <a href="https://github.com/saleforecast1">@saleforecast1</a>, <a href="https://github.com/sharitian">@sharitian</a>, <a href="https://github.com/skaltman">@skaltman</a>, <a href="https://github.com/stla">@stla</a>, <a href="https://github.com/trafficonese">@trafficonese</a>, <a href="https://github.com/TymekDev">@TymekDev</a>, <a href="https://github.com/ugurdar">@ugurdar</a>, and <a href="https://github.com/wch">@wch</a>.</p>
</section><section id="thematic-v0.1.5" class="level4"><h4 class="anchored" data-anchor-id="thematic-v0.1.5">thematic <a href="https://rstudio.github.io/thematic/news/index.html#thematic-015">v0.1.5</a>
</h4>
<p><a href="https://github.com/cpsievert">@cpsievert</a>, and <a href="https://github.com/teunbrand">@teunbrand</a>.</p>


</section></section> ]]></description>
  <guid>https://shiny.posit.co/blog/posts/shiny-r-1.8.1/</guid>
  <pubDate>Wed, 27 Mar 2024 04:00:00 GMT</pubDate>
  <media:content url="https://shiny.posit.co/blog/posts/shiny-r-1.8.1/feature.png" medium="image" type="image/png" height="80" width="144"/>
</item>
<item>
  <title>Introducing Component and Layout Galleries for Shiny for Python</title>
  <dc:creator>Daniel Chen</dc:creator>
  <dc:creator>Sara Altman</dc:creator>
  <dc:creator>Garrett Grolemund</dc:creator>
  <link>https://shiny.posit.co/blog/posts/introducing-component-layouts/</link>
  <description><![CDATA[ 
<!-- Google Tag Manager (noscript) -->
 <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KHBDBW7" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<style type="text/css">
  #quarto-content>* {
  padding-top: 0px;
  }
</style>


        <div class="column-body-outset blog-image-container pb-5">
      <img src="https://shiny.posit.co/blog/posts/introducing-component-layouts/layouts-thumb.jpg" alt="An illustration of Shiny layouts and components" style="width: 100%; height: auto;">
    </div>
    


<p>Reference documents are great if you know what you’re looking for, but they make it hard to discover new components. For that reason, we’ve created Shiny for Python’s <a href="https://shiny.posit.co/py/components/">components gallery</a> and <a href="https://shiny.posit.co/py/layouts/">layouts gallery</a>.</p>
<p>The goal of these galleries is to provide:</p>
<ol type="1">
<li>An overview of Shiny options for new users, and</li>
<li>A cheatsheet-like reference for current users that will accelerate how you build Shiny apps</li>
</ol>
<div class="column-page pt-5">
<div class="border-bottom blue mt-6 mb-5">

</div>
</div>
<section id="shiny-components" class="level2 mt-2 page-columns page-full">
<h2 class="mt-2" data-anchor-id="shiny-components">Shiny Components</h2>
<p>The <a href="https://shiny.posit.co/py/components/"><span style="border-bottom: 1px solid; padding-bottom:2px;">Shiny Components gallery<span></span></span></a> features a list of 33 Shiny Components ready for your apps. Many of them are live examples (buttons, checkboxes, sliders, etc.) to get the feel for how they work. Once you’ve chosen from this list of inputs, outputs, and display components, you’ll arive at a detailed page with:</p>
<ul>
<li>A Shinylive preview</li>
<li>Copy/Paste-able code</li>
<li>Relevant functions used, their signature, and a link to their reference pages</li>
<li>Details of how to use the component</li>
<li>Live example variations (if applicable)</li>
</ul>
<p>The code highlights reveal the most important lines for creating the component. You can run the example code in <a href="https://shinylive.io/py/">Shinylive</a> and edit it—right in the browser, without the need to create or host your own Shiny app. This makes it easy to experiment and see the results!</p>
<p>Here is an example of the Value Box preview and code. Use the tabs to switch between the new <a href="../../../blog/posts/shiny-express/">Shiny Express syntax</a> and the original Shiny Core syntax.</p>
<div class="column-page py-4">
<iframe style="height:165px;" class="mb-0 w-100" src="https://shinylive.io/py/app/#h=0&amp;code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOQGImAMQbM2ZMqhaIA9Lo4kILDAHM4ZAEbFiZFmTpoMJGAaMtdqDqdPYAtJZQEADWunJePtgA+oEhTAC8UhwYABIAKgCyADIAFHJMBUwA5AA8LABupkwAHjAANsbxMmAaWnq6AO5dGB0AzBiCproATAAM47oVps1M5RxwHQBCxNVNYKNMGwCMAGxMuzOEdVAsLGuWHEwXfhG+AUHBTDP22HVwazQcdXWIhJJ0dEoZAAwsQ6oIANxsODeDSILbjACkEJmUDoHCgfk4ABNsZQ1g5JHAZgw3ms+NMwEwAHwlVBQMhsJjYtYZACsTB2GGGbKgGAA7GyBRztvs-FsMCKmMLhZs5Vt9pLNgAvGASra9AAc4owABYAJw7ERcnYazkYU29OWi-kYQ26pi6yWEC07PbbDC9Ub9Ub6-mKzX6-rDfm9PlCqUbDbczU7Px2tmakS2najYZMFNp61y232pj9NmEeOhh2jHW63Xq71+YYYBG14b64bhpWi6MhrmG4bK5q0zwMtjUmRyOkDpifb5+OiSMnNODlSjEXEzFnNDK5nYOiVskNF2t+-1liP8hUS-mjXV+Lm9dNOrY8tjxtlskSn7PRrYKrma4a6urctktz1HYoG3RVI3lPV+U1RVf16NhuR2XoXQLDULU1TU7WgxUtl1DkJS1YY6mLRsmFrXV+X5FsIOjXVMM3LY2GbSVW2zKCtnjXob3-Ojhh1Xo2S2F0kKFLZQ0VXoJWGHZ-VrUZP0Q21z0PCSMPjX0OTk4ZtW5fkiMlXUrQIvTqPfaVdR2IVJJ2JjTKjOUoJ0zc2WIgVTRrSVRh2YE0M1BV9QwQN8KdDlMOffV9hCjMMC8-VCDLOs8PU0Z+XjRt1L4vVJMQji623UYdOkrlzzZeMKydSSrK8wKtiq79arKsSHOGYZeifblWrK9yYukvl9SFfqzJi-U0ufAUBXfNK03jZzJTCmD7IS5T1P1TDQyFdbJs9QVJR2YYix6p04Jin89Uwm8LUAqBa0-dMbvvbNcp5ALauQp9ekvWs3UvYNNUvEL+qvPVdT4gG2WVDJa0EvYuWkl08NKuS3TI11Uv6UMrSFCttXRrj80S90mAjXo9nuh1ib2EKQcgnlLwtX8UcrHUZPx39NTs61412YmXNdFGxLZR87U1FynxGiU6KoliaJm9KY01A63SktqCICgSRputlbXVqAuWfGC9cTR6PNq1LPTZAKIy2kTPQvVyd3w9ihb9fV-yQtrNY5qMubNtkPsdC0DQDzcIvsjipL+nVAO3VjveBuNdMFp8QOl429SbRq-1Gy8JZsu0uK9hy6J03og1Ve96dykWpbZSzdog3LfUw4YzwvAULzTi86bTQsuYslaua1n3SrrHc0tavlWthknHulT8zbE5CYoNDLbQKjL1TQ+TmLGBsszD6UvLvfV9R7MA+3pRk+ymakijkABKOQ5DQVAomkBIkiwKBzCiGg6mkbEeQICFE-scbAxBJBkCiCQf+MBjBAJASA6QGByhQH-nAGIKwEGIJwc0AA0gABQAJJMDSBwMgbxmh4HyDgxBzQAAkCpFhfDqBwUgTAAAiYJjh0BYFQmhtDCjNAAKqoHzKMRETAABqABlJgBCABKABRKRRCADywi5Fek4SIAAmjI-hwDBGFHYMQDohATjvFuNEWIwRqFGOMUwRkcB4DnFMH4UwjhsTzHIH4Lg3jTDEBuP8VAlD8ACMQffexICokPyftAdAH8xCoByC-N+HAJAsDgHQBcdB4gADlSBwEfhAMAABfAAukAA" title="Shiny Value Box">
</iframe>
<div class="tabset-margin-container"></div><div class="panel-tabset shiny-mode-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Express</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Core</a></li></ul>
<div class="tab-content shiny-mode-tabset">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="sourceCode" id="cb1" data-code-line-numbers="" style="background: #f1f3f5;"><pre class="sourceCode python code-overflow-scroll code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shiny.express <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ui</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> faicons <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> icon_svg</span>
<span id="cb1-3"></span>
<span id="cb1-4">piggy_bank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> icon_svg(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"piggy-bank"</span>)</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ui.layout_columns():</span>
<span id="cb1-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ui.value_box(showcase<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>piggy_bank, theme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bg-gradient-indigo-purple"</span>):</span>
<span id="cb1-8">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"KPI Title"</span></span>
<span id="cb1-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"$1 Billion Dollars"</span></span>
<span id="cb1-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"Up 30% VS PREVIOUS 30 DAYS"</span></span></code></pre></div>
<p class="text-end my-0 p-90 me-2 pt-3">
<a href="https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbDOAD1R04LFkw4xUxOmSYBXDgB0I9RkxpQOJCKPGTpYrQH0WANwDmSpag5mz2QwCMoEANZMAvAdLHzACgVg1rbYALROrgEAlJYQAO4cZGxyHBgANlDYxLJkhiSpsjDavpGISkzlTPGJyRgmUPlwjsR8vuzEsYRQLHDuQXaOzi54TIlw8O4BDmYhZnRQACYclGQhXItmxCGosnSoqXBRpRAVJ0wBANIACgCSTAAqCfsBZaflAQAkAIxMAEIcqakOKQmAARYgAqB0FjPY6vM5gACqqCYAGYAAwAUiYADUAMpMS4AJQAotjrgB5BH49GggCCAE1cQEwABfAC6QA"><i class="bi bi-pencil me-1"></i> Edit in Shinylive</a>
</p>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="sourceCode" id="cb2" data-code-line-numbers="" style="background: #f1f3f5;"><pre class="sourceCode python code-overflow-scroll code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shiny <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> App, ui</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> faicons <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> icon_svg</span>
<span id="cb2-3"></span>
<span id="cb2-4">piggy_bank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> icon_svg(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"piggy-bank"</span>)</span>
<span id="cb2-5"></span>
<span id="cb2-6">app_ui <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ui.page_fluid(</span>
<span id="cb2-7">    ui.layout_columns(</span>
<span id="cb2-8">        ui.value_box(</span>
<span id="cb2-9">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KPI Title"</span>,</span>
<span id="cb2-10">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$1 Billion Dollars"</span>,</span>
<span id="cb2-11">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Up 30% VS PREVIOUS 30 DAYS"</span>,</span>
<span id="cb2-12">            showcase<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>piggy_bank,</span>
<span id="cb2-13">            theme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bg-gradient-indigo-purple"</span>,</span>
<span id="cb2-14">        ),</span>
<span id="cb2-15">    ),</span>
<span id="cb2-16">)</span>
<span id="cb2-17"></span>
<span id="cb2-18">app <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> App(app_ui, server<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span></code></pre></div>
<p class="text-end my-0 p-90 me-2 pt-3">
<a href="https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EeoyY0oHEhBa9+g4atIB9FgDcA5nLmoOx49j0AjKBADWTALy81BkwAoZYC1ewAWnsnXwBKM2h0PWlXKQ4sKGM4PRoAG2kAEx8IJjz4jDSobGJJMj0SDJh1HPy6gsMoDJTbYgAPWvqu3wBpAAUASSYAFQ4yNLhfPDku7rAAEgBGJgAhDjS0jlImABFiDag6FimZ2brfAFVUJgBmAAYAUiYANQBlJj6AJQBRZ4GAeQu73uuxEAE1Xidcmd8uxiAB3QhQFhwFz+ax2ByOabQmFMMhsODwFy+WzGQLGOhQTIcShkQJcGnGYiBVCSOioCZQs5hHF1XlyCIQORoa5uMSoLyimIcCQouiGOB0FwAOVIcDCYAAvgBdIA"><i class="bi bi-pencil me-1"></i> Edit in Shinylive</a>
</p>
</div>
</div>
</div>
</div>
<section id="variations" class="level4 page-columns page-full">
<h4 data-anchor-id="variations">Variations</h4>
<p>Some of the more complex components also have a Variations section. Here you will find code templates for commonly used configurations of the component. Like all of the examples in the gallery, these templates can be edited and run right in the browser, thanks to Shinylive. Here is an example of the Value Box Theme and Layout Variation:</p>
<div class="column-page py-4">
<style>
  .variations-iframe {
    height: 260px;
  }
@media only screen and (max-width:993px) {
  .variations-iframe {
    height: 310px;
  }
}
@media only screen and (max-width:723px) {
  .variations-iframe {
    height: 510px;
  }
}
@media only screen and (max-width:643px) {
  .variations-iframe {
    height: 670px;
  }
}
</style>
<iframe class="mb-0 w-100 variations-iframe" src="https://shinylive.io/py/app/#h=0&amp;code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMASxlWICcyACAMyhpIgGcAdCG0bEYLHgAsaEbCzoNmLAILo8LAK40BAtKgD6GlgF51NLFADmcXWwA2GgCYAKAS1cmMNqNmJqyuknYwELoA7oxozhBu0e4AblB2VgBGxAAekTGZLHxgANIACgCSLAAqNGQ2cDl4LlnROQAkAIwsAEI0NjY0pCwAIsSdUIz8+LV1rjkAqqgsAMwADACkLABqAMos+QBKAKIrhQDykxsLfYoAmmvVY+MSxCGEUDxwhhxcpDwY78E8sebOYFQNHM5mwAFoklAIABrHIAShqUXGrjI4jg8EMOSS5jB5nC9holDIYKkBPMxDBqDUjFQlWqEyRmQRN2iGgw8USuhS6RZWRyBWKZQqVVGjPGjRa7U63Si-UGw2uYrqUxmC2W602u32RxO8zOl0VyNcdweTxeb24n2+ul+-xyQJB4MhMPhiKNLFR6JeOQoqWJeLglHp2SVWRNj2euk83l8mLAZGIM0YwPEZGDvNczNDrjZHLUyTSGSN-KKpXKdNF7olbQ6XR6cs8CsrxbA0zmS1WG22e0Ox3b+quzeR4bNr04lq+3BtfwBDtBEKhsLAWfdnox9uptJFqhD7pHkejPjIcZSZATMHT2ZYK7ccIEd+g6CMSnQjh0+hoqmejFicEYhgAOVIOA4TAABfABdIA" title="Theme and Layout Variations">
</iframe>
<div class="tabset-margin-container"></div><div class="panel-tabset shiny-mode-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">Express</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">Core</a></li></ul>
<div class="tab-content shiny-mode-tabset">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="sourceCode" id="cb3" data-code-line-numbers="7,15,16,24,25" style="background: #f1f3f5;"><pre class="sourceCode python code-overflow-scroll code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> faicons</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shiny.express <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ui</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ui.layout_column_wrap():</span>
<span id="cb3-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ui.value_box(</span>
<span id="cb3-6">        showcase<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>faicons.icon_svg(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"piggy-bank"</span>),</span>
<span id="cb3-7">        theme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bg-gradient-indigo-purple"</span>,  </span>
<span id="cb3-8">    ):</span>
<span id="cb3-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"KPI Title"</span></span>
<span id="cb3-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"$1 Billion Dollars"</span></span>
<span id="cb3-11">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"Up 30% VS PREVIOUS 30 DAYS"</span></span>
<span id="cb3-12"></span>
<span id="cb3-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ui.value_box(</span>
<span id="cb3-14">        showcase<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>faicons.icon_svg(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"piggy-bank"</span>),</span>
<span id="cb3-15">        theme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text-green"</span>,  </span>
<span id="cb3-16">        showcase_layout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top right"</span>,  </span>
<span id="cb3-17">    ):</span>
<span id="cb3-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"KPI Title"</span></span>
<span id="cb3-19">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"$1 Billion Dollars"</span></span>
<span id="cb3-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"Up 30% VS PREVIOUS 30 DAYS"</span></span>
<span id="cb3-21"></span>
<span id="cb3-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ui.value_box(</span>
<span id="cb3-23">        showcase<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>faicons.icon_svg(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"piggy-bank"</span>),</span>
<span id="cb3-24">        theme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"purple"</span>,  </span>
<span id="cb3-25">        showcase_layout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>,  </span>
<span id="cb3-26">    ):</span>
<span id="cb3-27">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"KPI Title"</span></span>
<span id="cb3-28">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"$1 Billion Dollars"</span></span>
<span id="cb3-29">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"Up 30% VS PREVIOUS 30 DAYS"</span></span></code></pre></div>
<p class="text-end my-0 p-90 me-2 pt-3">
<a href="https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMASxlWICcyACAMyhpIgGcAdCG0bEYLHgAsaEbBjgAPVIzg8eLOg2YsArjQECA7jTLjtNDABso2YlrIB9Eua0wId-YzQAKAJSIBLAJZDY1MMADcoJzg7ACNiOU9-QOSJYn1CKB44AF4OLlIeDHzXHjCAc0SwVBoysuwAWhioCABrPjBvPCTkgOM4eGz2mLL6so8AExpKMnqpSbLietQtRlRzOHa8AO6WXx3k9oBpAAUASRYAFSN19v3A9oASAEYWACEac3MaUhYAEWJPlBGPwwHdtmAAKqoFgAZgADABSFgANQAyixjgAlACiyNOAHkIej4X8AIIATVRtwgO2CJh04UiWmicQSYLE4jSGSyuU43EKxTspQq7WqtQaTVa7U67L6A3aFDkMzGcEom22EB6gVS6Uy0Us1lsgzAZGI0MYNXEZHVLB2e01WttYBO5yuZBuoIdWseL3en2+mv+gOB1MdTqhsMRKPRWNxBKJkbJlOptKM9LMESisXiiS9PR13JyeX5RW4QvKlTFdUazTaHS6eeScpyopWaw2+A1YYLersBpsZGNcTIppgNrtfkb92dZ0u1w77J9bw+Xx+QcsIc9YfaEfhSLRGJxeMJxLhSapYDAAF8ALpAA"><i class="bi bi-pencil me-1"></i> Edit in Shinylive</a>
</p>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div class="sourceCode" id="cb4" data-code-line-numbers="11,18,19,26,27" style="background: #f1f3f5;"><pre class="sourceCode python code-overflow-scroll code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> faicons</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shiny <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> App, ui</span>
<span id="cb4-3"></span>
<span id="cb4-4">app_ui <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ui.page_fluid(</span>
<span id="cb4-5">    ui.layout_column_wrap(</span>
<span id="cb4-6">        ui.value_box(</span>
<span id="cb4-7">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KPI Title"</span>,</span>
<span id="cb4-8">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$1 Billion Dollars"</span>,</span>
<span id="cb4-9">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Up 30% VS PREVIOUS 30 DAYS"</span>,</span>
<span id="cb4-10">            showcase<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>faicons.icon_svg(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"piggy-bank"</span>),</span>
<span id="cb4-11">            theme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bg-gradient-indigo-purple"</span>,  </span>
<span id="cb4-12">        ),</span>
<span id="cb4-13">        ui.value_box(</span>
<span id="cb4-14">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KPI Title"</span>,</span>
<span id="cb4-15">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$1 Billion Dollars"</span>,</span>
<span id="cb4-16">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Up 30% VS PREVIOUS 30 DAYS"</span>,</span>
<span id="cb4-17">            showcase<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>faicons.icon_svg(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"piggy-bank"</span>),</span>
<span id="cb4-18">            theme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text-green"</span>,  </span>
<span id="cb4-19">            showcase_layout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top right"</span>,  </span>
<span id="cb4-20">        ),</span>
<span id="cb4-21">        ui.value_box(</span>
<span id="cb4-22">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KPI Title"</span>,</span>
<span id="cb4-23">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$1 Billion Dollars"</span>,</span>
<span id="cb4-24">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Up 30% VS PREVIOUS 30 DAYS"</span>,</span>
<span id="cb4-25">            showcase<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>faicons.icon_svg(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"piggy-bank"</span>),</span>
<span id="cb4-26">            theme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"purple"</span>,  </span>
<span id="cb4-27">            showcase_layout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>,  </span>
<span id="cb4-28">        ),</span>
<span id="cb4-29">    )</span>
<span id="cb4-30">)</span>
<span id="cb4-31">app <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> App(app_ui, server<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span></code></pre></div>
<p class="text-end my-0 p-90 me-2 pt-3">
<a href="https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMASxlWICcyACAMyhpIgGcAdCG0bEYLHgAsaEbCzoNmLAILo8LAK40BAtKgD6GlgF51NLFADmcXWwA2GgCYAKAS1cmMNqNmJqyuknYwELoA7oxozhBu0e4AblB2VgBGxAAekTGZLHxgANIACgCSLAAqNGQ2cDl4LlnROQAkAIwsAEI0NjY0pCwAIsSdUIz8+LV1rjkAqqgsAMwADACkLABqAMos+QBKAKIrhQDykxsLfYoAmmvVY+MSxCGEUDxwhhxcpDwY78E8sebOYFQNHM5mwAFoklAIABrHIAShqUXGrjI4jg8EMOSS5jB5nC9holDIYKkBPMxDBqDUjFQlWqEyRmQRN2iGgw8USuhS6RZWRyBWKZQqVVGjPGjRa7U63Si-UGw2uYrqUxmC2W602u32RxO8zOl0VyNcdweTxeb24n2+ul+-xyQJB4MhMPhiKNLFR6JeOQoqWJeLglHp2SVWRNj2euk83l8mLAZGIM0YwPEZGDvNczNDrjZHLUyTSGSN-KKpXKdNF7olbQ6XR6cs8CsrxbA0zmS1WG22e0Ox3b+quzeR4bNr04lq+3BtfwBDtBEKhsLAWfdnox9uptJFqhD7pHkejPjIcZSZATMHT2ZYK7ccIEd+g6CMSnQjh0+hoqmejFicEYhgAOVIOA4TAABfABdIA"><i class="bi bi-pencil me-1"></i> Edit in Shinylive</a>
</p>
</div>
</div>
</div>
</div>
<div class="column-page pt-5">
<div class="border-bottom blue mt-6 mb-5">

</div>
</div>
</section>
</section>
<section id="shiny-layouts" class="level2 page-columns page-full">
<h2 data-anchor-id="shiny-layouts">Shiny Layouts</h2>
<p>The <a href="https://shiny.posit.co/py/components/"><span style="border-bottom: 1px solid; padding-bottom:2px;">Shiny Layouts gallery<span></span></span></a> follows the same display pattern as the components gallery to showcase the different ways you can approach your app’s user interface (UI) layout. The main page lists out a variety of layouts (navbars, sidebars, tabs, etc.) to give you a quick overview of different ways to arrange your app. We hope it sparks some inspiration to create a very intuitive experience for your users.</p>
<div class="pt-4 pb-3 page-columns page-full">
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p class="page-columns page-full"><img src="https://shiny.posit.co/blog/posts/introducing-component-layouts/sidebar-layouts.jpg" class="img-fluid quarto-figure quarto-figure-center figure-img column-page" alt="screenshot of the sidebar section on the main layout page"></p>
</figure>
</div>
</div>
<p>Once you know the overall type of style you like, you get the same set of relevant functions, in-browser preview, example code, and detailed instructions, just like the components gallery.</p>
<div class="column-page py-5">
<style>
  .navbar-iframe {
    height: 150px;
  }
@media only screen and (max-width:956px) {
  .navbar-iframe {
    height: 230px;
  }
}
</style>
<iframe class="mb-0 w-100 iframe-border navbar-iframe" src="https://shinylive.io/py/app/#h=0&amp;code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEugA3AEZQ6ACiZymNzRiNLUUCHAA25mWBGeJngAq6cKJMJOSUZJ4AlL4QtnYOTi7ungBCPlZgAXpMKSGkFORRMXHS9lCGjs5uHmAAwun+gUy1eWGFYNFWsbZkHGSucGqeYqhMAO59bExGpnQN3TYcACZDkOWznl2RXXJLcDSscHSGR+ZcqJJkEsSXF1eHLCwcpJGI1rZOj3IK6Oqi6OZFCoOBIWEcTnRImAAL4AXSAA" title="Navbar at top">
</iframe>
<div class="tabset-margin-container"></div><div class="panel-tabset shiny-mode-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-3-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-1" aria-controls="tabset-3-1" aria-selected="true">Express</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-2" aria-controls="tabset-3-2" aria-selected="false">Core</a></li></ul>
<div class="tab-content shiny-mode-tabset">
<div id="tabset-3-1" class="tab-pane active" aria-labelledby="tabset-3-1-tab">
<div class="sourceCode" id="cb5" data-code-line-numbers="4,7,10,13" style="background: #f1f3f5;"><pre class="sourceCode python code-overflow-scroll code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shiny.express <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ui</span>
<span id="cb5-2"></span>
<span id="cb5-3">ui.page_opts(</span>
<span id="cb5-4">    title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"App with navbar"</span>,  </span>
<span id="cb5-5">)</span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ui.nav_panel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>):  </span>
<span id="cb5-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"Page A content"</span></span>
<span id="cb5-9"></span>
<span id="cb5-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ui.nav_panel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>):  </span>
<span id="cb5-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"Page B content"</span></span>
<span id="cb5-12"></span>
<span id="cb5-13"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ui.nav_panel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>):  </span>
<span id="cb5-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"Page C content"</span></span></code></pre></div>
<p class="text-end my-0 p-90 me-2 pt-3">
<a href="https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbDOAD1R04LFkw4xUxOmSYBXDgB0I9Rq07cM8sRKkzUUAOZwA+tABuAIyh0lS+VkMniqMiwAUSpl6ZkOZADZwALwKYACC6EwA7n5sTOZWNvheAMRMADzpSgCUthAxZHH25sb6EHD+HuGh2YipGVkQ3kyhAAqOTGFMJOSUZKF5BUUcGCVlFVUAQjV1TGmZnt5tHZPdpBTkAxBKQ3IjY1DllaEAwjP1C01LYO1GTCdrvZtgYAC+ALpAA"><i class="bi bi-pencil me-1"></i> Edit in Shinylive</a>
</p>
</div>
<div id="tabset-3-2" class="tab-pane" aria-labelledby="tabset-3-2-tab">
<div class="sourceCode" id="cb6" data-code-line-numbers="3,4,5,6,7,8,9" style="background: #f1f3f5;"><pre class="sourceCode python code-overflow-scroll code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shiny <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> App, ui</span>
<span id="cb6-2"></span>
<span id="cb6-3">app_ui <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ui.page_navbar(  </span>
<span id="cb6-4">    ui.nav_panel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Page A content"</span>),  </span>
<span id="cb6-5">    ui.nav_panel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Page B content"</span>),  </span>
<span id="cb6-6">    ui.nav_panel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Page C content"</span>),  </span>
<span id="cb6-7">    title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"App with navbar"</span>,  </span>
<span id="cb6-8">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"page"</span>,  </span>
<span id="cb6-9">)  </span>
<span id="cb6-10"></span>
<span id="cb6-11"></span>
<span id="cb6-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> server(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>, output, session):</span>
<span id="cb6-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb6-14"></span>
<span id="cb6-15"></span>
<span id="cb6-16">app <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> App(app_ui, server)</span></code></pre></div>
<p class="text-end my-0 p-90 me-2 pt-3">
<a href="https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEugA3AEZQ6ACiZMAxEwA8duVavSMRpaigQ4AG3MywEQCJAIAFXThRJhJySjIAgEoJG3tHCGdNNyhDDy9ffzAAIWCmMIimQujSCnJE5NsHJ2dXd09vPwCAYRKyvSZOqtjasCSrBrSMsg4yHzg1ALFUJgB3abYmI1M6EpTG9OcOABN5sE89HfG5BLHUuTuIQ7gaVjg6Q1fzLlRJMgliH++vxeLBYHFICUQTSsnhB9wU6HUonQ5kUKg4EhYr3edASYAAvgBdIA"><i class="bi bi-pencil me-1"></i> Edit in Shinylive</a>
</p>
</div>
</div>
</div>
</div>
<p>You can see the layout in action directly on the page, or jump into <a href="https://shinylive.io/py">Shinylive</a> to modify the code as needed and see the results without leaving your browser.</p>
</section>
<section id="check-it-out" class="level2">
<h2 data-anchor-id="check-it-out">Check It Out!</h2>
<p>We’ve made these pages for both brand new users and long-time app builders. We hope they are helpful for everyone!</p>
<p><a href="https://shiny.posit.co/py/components/" class="btn btn-primary me-4 my-4">Shiny Components</a> <a href="https://shiny.posit.co/py/layouts/" class="btn btn-primary me-4">Shiny Layouts</a></p>


</section>

 ]]></description>
  <guid>https://shiny.posit.co/blog/posts/introducing-component-layouts/</guid>
  <pubDate>Mon, 26 Feb 2024 05:00:00 GMT</pubDate>
  <media:content url="https://shiny.posit.co/blog/posts/introducing-component-layouts/layouts-thumb.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Introducing: Shiny Express</title>
  <dc:creator>Shiny Team</dc:creator>
  <link>https://shiny.posit.co/blog/posts/shiny-express/</link>
  <description><![CDATA[ 
<!-- Google Tag Manager (noscript) -->
 <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KHBDBW7" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<style type="text/css">
  #quarto-content>* {
  padding-top: 0px;
  }
</style>


        <div class="column-body-outset blog-image-container pb-5">
      <img src="https://shiny.posit.co/blog/posts/shiny-express/shiny-express-v2.jpg" alt="Shiny Express logo" style="width: 100%; height: auto;">
    </div>
    


<style>
figcaption {
  text-align: right;
  margin-top: 0;
}
</style>
<p>Today we’re officially announcing the most important addition to Shiny for Python since its inception: <strong>Shiny Express</strong>, a new way to write Shiny apps in Python!</p>
<p>Shiny Express is designed to make it significantly easier to get started with Shiny, and to write simple apps with a minimum of boilerplate.</p>
<p>Here’s what a simple “Hello, World” app looks like in Shiny Express:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shiny.express <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>, render, ui</span>
<span id="cb1-2"></span>
<span id="cb1-3">ui.input_text(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"What's your name?"</span>, value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"World"</span>)</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@render.text</span></span>
<span id="cb1-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> greeting():</span>
<span id="cb1-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Hello, </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>name()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">!"</span></span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shiny.posit.co/blog/posts/shiny-express/hello-world.png" class="border img-fluid figure-img" alt="A screenshot of a simple app that prompts for the user's name, and displays a greeting"></p>
<figcaption><a href="https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbDOAD1R04LFkw4xUxOmTERUAVzJ4mQiABM4dZfI4AdCPp0YuCsgH0KfMgApdkWHDvK7AdTZQyAclHZi8ukzQ8AD8TkwAblAANvJwALyuUlFqdgCU+voAAqoadBiWZPoaNEwA5kJwZFyl1qmI+kyNKpX+EEw0dgAScFFRxMogJooYQXC1AL4AhHb6YOMAukA"><i class="bi bi-caret-right-square-fill"></i> View app on shinylive.io.</a></figcaption>
</figure>
</div>
<p>The <code>ui.input_text()</code> function creates a text input, and the <code>@render.text</code> decorator makes the output of the <code>greeting()</code> function appear on the page.</p>
<p>After installing Shiny with <code>pip install shiny</code>, you can save this code as <code>app.py</code> and start the app with <code>shiny run app.py</code>. Or, skip the install and <a href="https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbDOAD1R04LFkw4xUxOmTERUAVzJ4mQiABM4dZfI4AdCPp0YuCsgH0KfMgApdkWHDvK7AdTZQyAclHZi8ukzQ8AD8TkwAblAANvJwALyuUlFqdgCU+voAAqoadBiWZPoaNEwA5kJwZFyl1qmI+kyNKpX+EEw0dgAScFFRxMogJooYQXC1AL4AhHb6YOMAukA">try the app in our online editor</a>.</p>
<p>Here’s another example with more features of Shiny Express, including UI container components (sidebar and card) and a plot:</p>
<div class="pt-3 page-columns page-full">
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p class="page-columns page-full"><img src="https://shiny.posit.co/blog/posts/shiny-express/plot.png" class="border img-fluid figure-img column-page" alt="A screenshot of an app with a sidebar and a plot"></p>
<figcaption><a href="https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJM6cKITIcAbnAA6Eeo1aduGOAA9Uoli179BwrqgCuZPCMoATOHXPGO8xc3ZdsAdw6WA5nDK6+AkIWENZ0APqoADbEZJHY8vL2WFA+YcSofgAUkrFwALyyYAAKlF72ELqWUOwARsRQdJaF5jQckZFQNZH5ACp0xnAAlAkQHmRsTEksnnA1DZmDiPJMK5McGEamYSxw3RIcAF5wmcurZ4VSDc1MhQDKu3ASTJd0HJ3dzadnK8CFNW2RMLdCBecZhGAwa5-AFhawZNjgyH4G60SIcdA2IGlMEQqFgOqWbDg6osMJePHYMR0QoAXS+TGGEDOSU2ZDCEGM8FehBO+K4LDxADlOTUbExiDQmP8KtcAMwABkZ8gAAqJxJIZBhCFBIoR5NZJZYaAslkzVk4mKgdVzUKVyv59EFolBLBE7fz6aIyMY6Ezna7bSD7QtgKyMC8FnSIPIxhMktrGpkaMZ2ttCKJKHk+gNFvTVVZMVEYnF6QamJwWGQTfSzgEDJborFsGpNNpdNVLeoa6tUEw8p2MBWyMQvHRYJkjQtzBBpSw8mHZwtGd8exgOthiKYMMZUFUKJl2MQ3N0fCE8gAxHU7Zcrize32WsAAXxpQA"><i class="bi bi-caret-right-square-fill"></i> View app on shinylive.io.</a></figcaption>
</figure>
</div>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shiny <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> reactive</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shiny.express <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>, render, ui</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shinywidgets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> render_plotly</span>
<span id="cb2-4"></span>
<span id="cb2-5">ui.page_opts(title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Penguins dashboard"</span>, fillable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ui.sidebar():</span>
<span id="cb2-8">    ui.input_selectize(</span>
<span id="cb2-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"var"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Select variable"</span>,</span>
<span id="cb2-10">        [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_depth_mm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"flipper_length_mm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"body_mass_g"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>]</span>
<span id="cb2-11">    )</span>
<span id="cb2-12">    ui.input_numeric(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bins"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of bins"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb2-13"></span>
<span id="cb2-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@reactive.calc</span></span>
<span id="cb2-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> df():</span>
<span id="cb2-16">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> palmerpenguins <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_penguins</span>
<span id="cb2-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> load_penguins()[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>.var()]</span>
<span id="cb2-18"></span>
<span id="cb2-19"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ui.card(full_screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>):</span>
<span id="cb2-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@render_plotly</span></span>
<span id="cb2-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> hist():</span>
<span id="cb2-22">        <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> plotly.express <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> px</span>
<span id="cb2-23">        p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> px.histogram(df(), nbins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>.bins())</span>
<span id="cb2-24">        p.layout.update(showlegend<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb2-25">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> p</span></code></pre></div>
</div>
<section id="simple-yet-powerful" class="level2 page-columns page-full">
<h2 data-anchor-id="simple-yet-powerful">Simple, yet powerful</h2>
<p>While Shiny Express is easy to pick up, it’s powered by Shiny’s proven <a href="https://shiny.posit.co/py/docs/overview.html#reactivity">reactive programming framework</a>, extensive (and growing) suite of <a href="https://shiny.posit.co/py/components/">components</a>, and deeply customizable <a href="https://shiny.posit.co/py/docs/ui-html.html">approach to UI</a>—just in a more approachable syntax that minimizes the fuss. It’s suitable for writing everything from throwaway prototypes, to realtime dashboards, to cutting edge model demos, to production-quality business workflow apps.</p>
<!--
It can be deployed in the same ways as before: [cloud hosted](https://shiny.posit.co/py/docs/deploy-cloud.html), [self hosted](https://shiny.posit.co/py/docs/deploy-on-prem.html), [WASM](https://shiny.posit.co/py/docs/shinylive.html).
-->
<div class="py-3 page-columns page-full">
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p class="page-columns page-full"><img src="https://shiny.posit.co/blog/posts/shiny-express/tipping-dashboard.png" class="border img-fluid figure-img column-page" alt="A screenshot of a full-featured dashboard"></p>
<figcaption><a href="https://shiny.posit.co/py/docs/user-interfaces.html"><i class="bi bi-file-earmark-code-fill"></i> Build this app in our <em>User Interfaces</em> tutorial.</a><br><a href="https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMASxlWICcyACAMyhpIgGcWo+HADoQ6DZi1QAbYmSnYMcAB6pGcHnwGSlIto2IwWPABY0I2AO40AJgHM4ZPmKas1Ea3EYB9abPkjdfUMTM2wWZwk1KEIyGgA3ODwWNw9GJLUAR0CDI1NzRRU1DXD6F3CIVABXMiTKmgCIAGIWABliKGsWaygyKH53FhJ6argjXtjCFjioKUr1EVjUPgBebQxu3oxFngAKAEoRACMaKSkvRghbFlWdmDMd7a3ZGa9j072kmCglB5olp96ZzeUj2BwgImaAEFrJ1UFB7CxYnJRlABjwbHBDlBGCI6lh4XAvMRUI5fsjlkIwAAldS9SqMVGsRaoMy2SlJNgnKRQQ5SODLAAqjDmYKsZGMLDx6I8WMYO2JlApYA8PAA1mRiZS9ogRCw9ZKaBgzFUyF4eFIMXLKRrAa8ueyWJSAEJc-gwYiVcgOu4QZbA86XYAABgAup9vn6uQHbMAAIxhqYzOaR07RpKqfmUgAkWt1+rxxuqXkIxjghFVh2ISi8tn0lVQO2tdDgDspADFiMROjxPHEuC38CxgJSWp6S62wAARMwQTyUhM9vkxODWZbDsCjiDjweU6cQWc4sAJswW2eC4VwMH6g1GipF6KxUivaoaiCNsBFBwTmk91icqQUIeYIQiw0KdF8ZiDKQFBehAACSADCADyAByADK1wsCAeZ6pSlQ9oeiDsFARrcGacS2O++FzjuH5wLYlTckBeA4Y6YAWDMfJkJSREcKRT48BR74cacX5gB8rGUoQ9JuIQ2AALTWMQpzYjxxH8RA5GUZSSkqYw8norY4LiSxEDXpS9iqUg6lcAJQkWXAVlggAvg0YoSni3LYB6pokLMMC8Ds-5SMsbYzD22oNNe7k3tMsyEpWPwmMQFiEAI-KIahaHrtRh4hpFZnXvqlICs8UiIn8qCeDwlKsdeAACKSeAUGYaHV+oeGwiJlV4zLVfsOqFUVRXbF4GxQPsGAmGgcDBiGUX6jFeJxXMrxVjsyWpelyyZeh64iVx84FcNuFgJCCQMgiiy1UNRWNZQqQtUUNW3denX8BdBK9X8A3tcNnSrKN437H9RU0F11hTcYM1zSwAB8LBBoNJ0o5IniTKskOLCwAD0XQAi8wKgyjbCUiAVWMIQGDwKiA0YLGACkrlgAtepLYaK0Jetm1pT2O3IXtUkyZQcmKcpTFHcjJ2UudngEiwRMs69+r3e4zXKK1L0o+9UCffYdqnL9yv-ZhQM9BNV6o3q4P49NVWwwjSPEydwKYVjPXAtTjlvpbVvXqTYBZiAwKIBgABMbDMw0IjsxgXk+cWymVAFux+V4VjWOKPBrgAbEkecsLGYf5YNrGx2ljDWEFjFnDwhBqIqQoilLw14hX1heKWHSeO+Ap-Hw425sbLCq4941eHosAtsP729LycBG37yQOPSZlNYwGCTubADijA2L8Sxjeb+zAbd5fYlXbA12a9dwI3F7HSd5+V53jmpDshDchoXhKtY8lsHyJQLAABW+FYhsAUtwGCZB5KHAcBYO+ZkZg0CMvJGgFAYA8HkoQSggEtQt1RiVMqCtXRxD4NdJWS9Y4MAYBdMkfIlRgX4FBGQjBEx7x5HyB00hohwHgOQJUGpUD4OdsNXa2UHJWXmsPFGBY7ymgZNYGgxBnxkFfLsURhCwB1x6IBROrCHQoVIIkTRKN1wQGMROHsOhaI8HdKqGiSQdJQGwBOWI8B5ymSXijE8Zh+RN2nt4-Up8Uaj08D4GQchXEzzgF1HRajPC+DIIvP2fkmCYULGQKaaUEneDSXKX2qM1BkFXmseJgFGwyJOmbXo+wvFBJYEoQRHt7T4FMfqbAgi-jsnaXqfJywjGznCF1fJ1xViUgsbOSkLA4BSB7Cwpg9SglkBSKeTMYAZAILapQv2ITFroI8oadu1dUx1wbr6AJj9hrPw7l3d+n8BA8B-jpf+gCQFgPBpA6CuDYHwMQfwC0qD0F8KwTg8gNErlaL7qgNGlNcEEhqjsq21DiTEDoUiBhMsYTMNGdMDh88RFVLEQLCRYBLJ5V6TeTJ5wOjKNUeoypDSipNlQD4dGXhXG0TQtIdBCtsA6jaUS1G65rFWPsY4ti3ROVOLAO4gcYZKXXkXGWCgq5nHSsVfqXxZ4AmUr2cNMJ3gkn+BiV1RYbLKYpKtnoHIe87BwCSSUcQrgbD2CSZojYpt+5H1qYU7WPR1wUzBdxI8bsehbD+LjLo4abSE3tEK7AeKMnyIjayoNHKQZCsqHFFY0ayDAETdiEMGBPQ0AyHMTNmieCwGkOoTCw4hXXmAHmrA6NcHAA2AWvFIYxmJikD26RTK2DpLiuUSUObNHSM0dIVgqw7VusiYyhp1b6B8mziu2tPAkjcjgXM5Y2bwpJCxO4DO4plhBgwEGWMSzvH5J0ZisAfY7U0ERUkfJ7oPBKn0BYNBasbGaP1ajGdJbUAbEJPHaoS6gl8nsO4ZYSiYjyj3vCx8vpKTGAdNgVEJYmBKkrGogwmHlixkvWHJIShsPGFw1JXBEqmkXoAKx+pOoBlGxTSkzujk0Fg8leN8f4wJwTQnhMidE-JECNIHzxFGGlKQ0luSoc0AMWJbAVUvWaGJzTWntOCYaPdKTCQMCycICIWe3rgaQtdqsTJBMgRckzdeGwShYxev+LGuzpwMBwLIAgygOxgRzSPVyOM+VWJObDq5ngEb4BGnRG+GzcqT6sXYxcCqSxgBOZcwAMnCNYJQxc9NRBiNJxQbBVMxBEPp4rhm4AJHIDsGzn4yBgnel4K1N56xgbNBad+1oWmnAdJzFMZwLi2EKXiTrPRCQljLBWKsNY6wNibB4wcyrlyrnXJubcMq9wHiOiIMAzk8DgGgPAagmQ6hqH4Y4LYSgyD4CIN8qgyB50OsiYdkMQA"><i class="bi bi-caret-right-square-fill"></i> View app on shinylive.io.</a></figcaption>
</figure>
</div>
</div>
</section>
<section id="one-framework-two-ways-to-author" class="level2">
<h2 data-anchor-id="one-framework-two-ways-to-author">One framework, two ways to author</h2>
<p>Our traditional syntax for writing Shiny apps is now called Shiny Core. <strong>If you’re already happily using Shiny, no need to change what you’re doing!</strong> We think of Shiny Express and Shiny Core as complementary, and intend to support both syntaxes indefinitely.</p>
<p>Shiny Core is a more structured approach to writing Shiny apps, and we think it’s still the best choice for larger, more complex apps. Here’s what that same “Hello, World” app looks like in Shiny Core:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shiny <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> App, ui, render</span>
<span id="cb3-2"></span>
<span id="cb3-3">app_ui <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ui.page_fluid(</span>
<span id="cb3-4">    ui.input_text(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"What's your name?"</span>, value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"World"</span>),</span>
<span id="cb3-5">    ui.output_text(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"greeting"</span>),</span>
<span id="cb3-6">)</span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> server(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>, output, session):</span>
<span id="cb3-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@render.text</span></span>
<span id="cb3-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> greeting():</span>
<span id="cb3-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Hello, </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>name()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">!"</span></span>
<span id="cb3-12"></span>
<span id="cb3-13">app <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> App(app_ui, server)</span></code></pre></div>
<p>Although there’s more to learn and more to type, the enforced discipline of separating UI and server logic can be a benefit for larger apps.</p>
<p>That being said, we think most new Shiny users will be more successful starting their learning journey with Shiny Express, so we’ve overhauled our <a href="https://shiny.posit.co/py/docs/overview.html">main tutorial</a> to encourage people to start there. The more advanced topics are written for both Express and Core, as are our <a href="https://shiny.posit.co/py/components/">Component</a> and <a href="https://shiny.posit.co/py/layouts/">Layout</a> galleries.</p>
</section>
<section id="learn-more" class="level2">
<h2 data-anchor-id="learn-more">Learn more</h2>
<p>You can get started with Shiny today by jumping into the <a href="https://shiny.posit.co/py/docs/overview.html">tutorial</a>. Thanks to Shiny Express, it’s never been easier!</p>
<p>Or if you’re already experienced with Shiny, you find out more about the <a href="https://shiny.posit.co/py/docs/express-vs-core.html">differences between Express and Core</a>.</p>
<p>Questions? Comments? We’d love to hear from you! Please <a href="https://discord.gg/yMGCamUMnS">join us on Discord</a>.</p>
</section>
<section id="questions" class="level2">
<h2 data-anchor-id="questions">Questions</h2>
<p><strong>How do I install Shiny Express? Is it an add-on package?</strong><br>
Shiny Express is built into <a href="https://pypi.org/project/shiny/">shiny</a> 0.7.0. You can install it with <code>pip install shiny</code> (or upgrade with <code>pip install -U shiny</code>).</p>
<p><strong>Is Shiny Core syntax really going to stay around in the future?</strong><br>
Shiny Express is not intended to replace Shiny Core. In fact, Shiny Express could not exist without Shiny Core, because it is implemented using Shiny Core! As we were building Shiny Express, we were very pleased to find that Shiny Core provides a solid foundation on which to build this new set of abstractions.</p>
<p><strong>Is Shiny Express available for R?</strong><br>
We don’t have immediate plans to bring Shiny Express to R. Given the size and maturity of the Shiny for R ecosystem, it would be a much larger undertaking to introduce a new syntax.</p>
<p>That being said, we’re excited to see how the Python community responds to Shiny Express, and we’ll be watching closely to see if there’s interest in a similar syntax for R.</p>
<p>In the meantime, if you’re a Shiny for R user and the syntax changes in Shiny Express resonate with you, the <a href="https://bookdown.org/yihui/rmarkdown/shiny-documents.html">Shiny Document</a> syntax is actually extremely similar to Shiny Express.</p>


</section>

 ]]></description>
  <guid>https://shiny.posit.co/blog/posts/shiny-express/</guid>
  <pubDate>Mon, 29 Jan 2024 05:00:00 GMT</pubDate>
  <media:content url="https://shiny.posit.co/blog/posts/shiny-express/shiny-express-v2.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Shiny for Python 0.6.1</title>
  <dc:creator>Shiny Team</dc:creator>
  <link>https://shiny.posit.co/blog/posts/shiny-python-0.6.1/</link>
  <description><![CDATA[ 
<!-- Google Tag Manager (noscript) -->
 <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KHBDBW7" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<style type="text/css">
  #quarto-content>* {
  padding-top: 0px;
  }
</style>


        <div class="column-body-outset blog-image-container pb-5">
      <img src="https://shiny.posit.co/blog/posts/shiny-python-0.6.1/shiny-061.png" alt="Shiny for Python 0.6.1" style="width: 100%; height: auto;">
    </div>
    


<p>Shiny for Python 0.6.1 is out! You can read the full <a href="https://github.com/posit-dev/py-shiny/blob/main/CHANGELOG.md">changelog</a> for a complete list of new features.</p>
<section id="component-gallery" class="level2">
<h2 data-anchor-id="component-gallery">Component gallery</h2>
<p>As the number of Shiny components grows, it becomes harder to find the component you want. We’ve created a <a href="https://shiny.posit.co/py/components/">Shiny Component gallery</a> which gives you an interactive example of each component, as well as additional documentation about when and how to use it.</p>
<p><img src="https://shiny.posit.co/blog/posts/shiny-python-0.6.1/component-gallery.gif" class="img-fluid"></p>
<p>Currently, this gallery contains mostly inputs and outputs. In the near future, we’ll add layouts, navigation, and other types of visual components.</p>
</section>
<section id="templates" class="level2">
<h2 data-anchor-id="templates">Templates</h2>
<p>Previously, when you called <code>shiny create</code>, you would get a basic app without much functionality. This is helpful for hello-world examples, but doesn’t provide much guidance on how to build a more complicated Shiny application. We’re now including app templates which you can access through the new <code>shiny create</code> command line interface. This interface will ask you which template you want to build, and allow you to specify its location.</p>
<p>We are going to release many more of these, but for the time being, we have covered three of our most common use cases. You can access them through the CLI menu, or by passing their name to the <code>--template</code> flag. We’ve included our current zero-dependency basic app, but have added a Dashboard and Multi-page template.</p>
<p>The Dashboard template shows you how to build a nice-looking single-page dashboard. It includes some <a href="https://shiny.posit.co/py/api/ExCard.html#see-also">cards</a> and <a href="https://shiny.posit.co/py/api/ui.value_box.html#see-also">value boxes</a> which are populated using a <a href="https://shiny.posit.co/py/docs/reactive-calculations.html">reactive calculation</a>. This is a good template to start with if you want to make use of some of the new components which were released in Shiny 0.6.0.</p>
<p>The multi-page app gives you a starting point for a large, production application. This app uses <code>page_navbar</code> to display several tabs, but the content of those tabs is stored in individual modules. <a href="https://shiny.posit.co/py/docs/workflow-modules.html">Shiny modules</a> are a great way to organize large applications because they allow you to break your application apart into simple building blocks which are easier to maintain. The application also uses <a href="https://blog.logrocket.com/understanding-type-annotation-python/">type annotations</a> which improve the development experience, and includes an external CSS file to customize the look and feel of the app.</p>
</section>
<section id="debugging-shiny-apps" class="level2">
<h2 data-anchor-id="debugging-shiny-apps">Debugging Shiny Apps</h2>
<p>The <a href="https://marketplace.visualstudio.com/items?itemName=Posit.shiny-python">Shiny extension for VS Code</a> now lets you run your Shiny apps using the VS Code debugger. This lets you set breakpoints, debug on error, and step through your application code using VS code. To activate it, click the dropdown menu next to the Play button and select “Debug Shiny App”. To learn more about how to use the VS Code debugger, check out the VS Code <a href="https://code.visualstudio.com/docs/editor/debugging">documentation</a>.</p>
<p><img src="https://shiny.posit.co/blog/posts/shiny-python-0.6.1/debugger.png" class="img-fluid"></p>
</section>
<section id="shiny-express-sneak-peek" class="level2">
<h2 data-anchor-id="shiny-express-sneak-peek">Shiny Express sneak peek</h2>
<p>We’ve been working hard on Shiny Express, which is a new way to write Shiny apps without explicitly defining a UI object. The basic Shiny Express functionality is included in 0.6.1, but you should treat it as experimental for the time being and pin your Shiny version if you use Express. We’ll be releasing additional functionality in our next release, and will have much more to say about it at that point. If you’re interested in trying it out and giving us feedback, please read <a href="https://wch.github.io/shiny_express_doc/">this post</a> describing the project.</p>
<hr>
<p>That’s it for today! As always, if you have any questions or feedback, please <a href="https://discord.gg/yMGCamUMnS">join us on Discord</a> or <a href="https://github.com/posit-dev/py-shiny/issues/new">open an issue on GitHub</a>. And if you’re enjoying Shiny for Python, please consider <a href="https://github.com/posit-dev/py-shiny">starring us on GitHub</a> to show your support!</p>


</section>

 ]]></description>
  <guid>https://shiny.posit.co/blog/posts/shiny-python-0.6.1/</guid>
  <pubDate>Fri, 22 Dec 2023 05:00:00 GMT</pubDate>
  <media:content url="https://shiny.posit.co/blog/posts/shiny-python-0.6.1/shiny-061.png" medium="image" type="image/png" height="76" width="144"/>
</item>
<item>
  <title>Shiny for R updates: new default look, dark mode, shinylive updates, and more</title>
  <dc:creator>Carson Sievert</dc:creator>
  <dc:creator>Garrick Aden-Buie</dc:creator>
  <link>https://shiny.posit.co/blog/posts/shiny-r-1.8.0/</link>
  <description><![CDATA[ <!-- Google Tag Manager (noscript) --><noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KHBDBW7" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<style type="text/css">
  #quarto-content>* {
  padding-top: 0px;
  }
</style>
<div class="column-body-outset blog-image-container pb-5">
      <img src="https://shiny.posit.co/blog/posts/shiny-r-1.8.0/feature.jpg" style="width: 100%; height: auto;">
</div>
    


<style>
img { border-radius: 8px; }
.nav-centered > .nav {
  justify-content: center;
  border: none;
}
.nav-centered > .tab-content {
  border: none;
}
.link-shinylive {
  position: absolute;
  bottom: 0;
  right: 0.5em;
  background-color: unset;
  font-family: var(--bs-font-sans-serif);
}
</style>
<script>
document.addEventListener("DOMContentLoaded", function() {
  // Add shinylive links to code blocks
  document.querySelectorAll("[data-shinylive]").forEach(function(el) {
    const pre = el.querySelector("pre");
    const link = document.createElement("a");
    link.classList.add("link-shinylive");
    link.target = "_blank";
    link.rel = "noopener noreferrer";
    link.href = el.dataset.shinylive;
    link.innerHTML = `<i class="bi bi-lightning-fill"></i> Run on shinylive`;
    pre.appendChild(link);
  });
});
</script><p>The Shiny team is pleased to announce another round of updates for 13 different R packages, including <a href="https://shiny.rstudio.com/">shiny</a> and <a href="https://rstudio.github.io/bslib/">bslib</a>. There are too many improvements to cover in a single post, but we’d like to highlight some of the more notable additions. For a detailed list of changes, be sure to check out the release notes section of this post.</p>
<p><a href="https://rstudio.github.io/bslib/">bslib</a> brings modern Bootstrap versions and new user layouts and inputs to <a href="https://shiny.rstudio.com/">Shiny</a>, the web framework for data scientists. Install the latest versions of shiny and bslib from CRAN with:</p>
<div class="cell">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/utils/install.packages.html">install.packages</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shiny"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bslib"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>In this post, we’ll cover three main topics: the new shiny look, what’s new in shinylive and a long-awaited update to selectize.js in shiny.</p>
<section id="new-shiny-look" class="level2 page-columns page-full"><h2 class="anchored" data-anchor-id="new-shiny-look">A shiny new look</h2>
<p>In our <a href="../../../blog/posts/bslib-tooltips/#towards-a-new-shiny-theme">last post</a>, we previewed a new look for <code>bslib</code>-powered UIs, which is designed with dashboards in mind. This release of <code>bslib</code> adds more polish to this new “preset” theme and makes it the default for <code>bslib</code> powered UIs.</p>
<p>To use the new layouts, simply create an app using any <code>page_*()</code> function in bslib for the UI. Here’s a very simple template you can use to get started. Notice that we’ve used <a href="https://posit-dev.github.io/r-shinylive/">shinylive</a> to make this example interactive – the entire app is running in your browser, no server required! You can even edit the app right here in this post and see the changes live when you press the <i class="bi bi-play-fill"></i> play button. We’ll talk more about shinylive later in this post.</p>
<div class="column-page mb-3">
<pre class="shinylive-r" data-engine="r"><code><a href="https://shiny.posit.co/">#| standalone: true
#| components: [editor, viewer]
#| viewerHeight: 400
#| layout: vertical
library(shiny)
library(bslib)

ui &lt;- page_sidebar(
  title = "My dashboard",
  sidebar = sidebar(
    title = "Settings",
    sliderInput("n", "Observations", 1, 100, 50, ticks = FALSE),
    sliderInput("bins", "Bins", 1, 10, 5, step = 1, ticks = FALSE),
  ),
  plotOutput("plot")
)

server &lt;- function(input, output, session) {
  output$plot &lt;- renderPlot({
    hist(rnorm(input$n), breaks = input$bins, col = "#007bc2")
  })
}

shinyApp(ui, server)</a></code></pre>
</div>
<p>We’re calling this new look the shiny “preset” theme, because it’s a great place to start building your own theme. Remember, you can always customize the preset by passing additional arguments to <code><a href="https://rstudio.github.io/bslib/reference/bs_theme.html">bs_theme()</a></code>. You can even switch back to the default <code>preset = "bootstrap"</code> look by using the following <code>theme</code> value in your <code>page_*()</code> function<sup>1</sup>:</p>
<div class="cell">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use default Bootstrap styles</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">theme</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_theme</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>preset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bootstrap"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>The new shiny preset is designed with dashboards in mind. Here’s a more complete example using a full dashboard app (<a href="https://github.com/rstudio/bslib/tree/main/inst/examples/flights">source</a>, <a href="https://bslib.shinyapps.io/flights">demo</a>) for exploring <a href="https://github.com/cpsievert/chiflights22">flight data from Chicago</a>. Toggle between the new and old look to see what’s changed with this release.</p>
<div class="column-screen py-3 my-3 page-columns page-full">
  <div class="column-page">
  <ul class="nav nav-pills justify-content-center">
<li class="nav-item">
      <button class="nav-link" data-bs-toggle="tab" data-bs-target="#flights-old" type="button" aria-controls="flights-old" aria-selected="false">Old</button>
    </li>
    <li class="nav-item">
      <button class="nav-link active" data-bs-toggle="tab" data-bs-target="#flights-new" type="button" aria-controls="flights-new" aria-selected="true">New</button>
    </li>
  </ul>
<div class="tab-content p-3 border-0">
    <div class="tab-pane fade show active" id="flights-new">
      <img src="https://shiny.posit.co/blog/posts/shiny-r-1.8.0/flights-new.png" class="img-fluid shadow" alt="Flights dashboard with the new styles, featuring a white navbar and white sidebar framing the dashboard area. Cards are also entirely white on a light gray background, with subtle depth created by drop shadows under the cards. Blue accents are found throughout the dashboard in plots and icons.">
</div>
    <div class="tab-pane" id="flights-old">
      <img src="https://shiny.posit.co/blog/posts/shiny-r-1.8.0/flights-old.png" class="img-fluid shadow" alt="Flights dashboard with the old styles, features solid blue navbar and solid blue value boxes. The sidebar and card headers and footers all have a light gray background.">
</div>
  </div>
  </div>
</div>
<p>The rest of this section will explore a few highlights of the new default look, including:</p>
<ul>
<li>New page-level styling
</li>
<li>Dark mode support</li>
<li>Improved <code>value_box()</code> styling
</li>
<li>
Refreshed Shiny UI (inputs, modals, notifications, and more)</li>
</ul>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Quarto and PyShiny dashboards
</div>
</div>
<div class="callout-body-container callout-body">
<p>Dashboards are coming to Quarto!</p>
<p>The new <a href="https://quarto.org/docs/dashboards/">Quarto dashboard</a> format, as well as newer <a href="https://shiny.posit.co/py/">PyShiny</a> components, are built on the same foundation as <code>bslib</code>. Thus, the concepts you’ll learn while building dashboards with <code>bslib</code> should also largely apply there as well.</p>
</div>
</div>
<section id="page-styling" class="level3 page-columns page-full"><h3 class="anchored" data-anchor-id="page-styling">Page-level styling</h3>
<p>As we noted above, the new shiny preset is design with dashboards in mind, but it will make any shiny app look great. The new default look is designed to be light and minimal, with a white navbar and white sidebar framing the dashboard area. Cards are also entirely white, with subtle depth created by drop shadows under the cards. Value boxes provide colorful accents, as will the plots you add to showcase your data.</p>
<p>Here’s an example taken straight from the <a href="https://rstudio.github.io/bslib/articles/dashboards/index.html">getting started guide</a> for <a href="https://rstudio.github.io/bslib/">bslib</a> dashboards.</p>
<div class="column-screen py-3 my-3 page-columns page-full">
  <div class="column-page">
  <ul class="nav nav-pills justify-content-center">
<li class="nav-item">
      <button class="nav-link" data-bs-toggle="tab" data-bs-target="#simple-old" type="button" aria-controls="simple-old" aria-selected="false">Old</button>
    </li>
    <li class="nav-item">
      <button class="nav-link active" data-bs-toggle="tab" data-bs-target="#simple-new" type="button" aria-controls="simple-new" aria-selected="true">New</button>
    </li>
  </ul>
<div class="tab-content p-3 border-0">
    <div class="tab-pane fade show active" id="simple-new">
      <img src="https://shiny.posit.co/blog/posts/shiny-r-1.8.0/simple-new.png" class="img-fluid shadow" alt="New page_sidebar() styling featuring a light, minimal look with a white title bar, white sidebar and white cards and value boxes. The cards and value boxes have subtle shadows on a light gray background. Value boxes icons are blue with a subtle gradient">
</div>
    <div class="tab-pane" id="simple-old">
      <img src="https://shiny.posit.co/blog/posts/shiny-r-1.8.0/simple-old.png" class="img-fluid shadow" alt="Old page_sidebar() styling with a dark title bar. Sidebars and card headers and footers have a light gray background. Cards and value boxes do not have shadows and value box icons are solid dark gray.">
</div>
  </div>
  </div>
</div>
<p>To achieve the full dashboard effect, though, you have opt into the light gray background by adding <code>class = "bslib-page-dashboard"</code> to your <code><a href="https://rstudio.github.io/bslib/reference/page_sidebar.html">page_sidebar()</a></code> or the <code><a href="https://rstudio.github.io/bslib/reference/nav-items.html">nav_panel()</a></code> items in your <code><a href="https://rstudio.github.io/bslib/reference/page_navbar.html">page_navbar()</a></code>. This class enables a few additional features, namely adding a soft gray background to the main content area under cards and value boxes that help them stand out. You can also add the <code>class</code> directly to <code><a href="https://rstudio.github.io/bslib/reference/page_fillable.html">page_fillable()</a></code> or <code><a href="https://rstudio.github.io/bslib/reference/page.html">page()</a></code> to get the same effect in apps with custom layouts.</p>
<div class="column-page py-3 my-3 grid align-items-start">
  <ul class="g-col-md-3 g-col-12 nav nav-pills flex-md-column justify-content-center">
<li class="nav-item">
      <button class="nav-link active font-monospace" data-bs-toggle="tab" data-bs-target="#class-sidebar" type="button" aria-controls="class-sidebar" aria-selected="true">page_sidebar()</button>
    </li>
    <li class="nav-item">
      <button class="nav-link font-monospace" data-bs-toggle="tab" data-bs-target="#class-navbar" type="button" aria-controls="class-navbar" aria-selected="false">page_navbar()</button>
    </li>
    <li class="nav-item">
      <button class="nav-link font-monospace" data-bs-toggle="tab" data-bs-target="#class-fillable" type="button" aria-controls="class-fillable" aria-selected="false">page_fillable()</button>
    </li>
  </ul>
<div class="g-col-md-9 g-col-12 tab-content p-3 border-0">
    <div class="tab-pane fade show active" id="class-sidebar">
      <div class="sourceCode R" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://shiny.posit.co/">shiny</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/">bslib</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/page_sidebar.html">page_sidebar</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>  title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"My Dashboard"</span>,</span>
<span>  class <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bslib-page-dashboard"</span>,</span>
<span>  sidebar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/sidebar.html">sidebar</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Settings"</span>,</span>
<span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ... sidebar inputs ...</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ... dashboard content ...</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
    </div>
    <div class="tab-pane" id="class-navbar">
      <div class="sourceCode R" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://shiny.posit.co/">shiny</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/">bslib</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/page_navbar.html">page_navbar</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>  title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"My Dashboard"</span>,</span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/nav-items.html">nav_panel</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Page 1"</span>,</span>
<span>    class <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bslib-page-dashboard"</span>,</span>
<span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ... dashboard content ...</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/nav-items.html">nav_panel</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"About"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Regular content"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
    </div>
    <div class="tab-pane" id="class-fillable">
      <div class="sourceCode R" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://shiny.posit.co/">shiny</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/">bslib</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/page_fillable.html">page_fillable</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>  title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"My Dashboard"</span>,</span>
<span>  class <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bslib-page-dashboard"</span>,</span>
<span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ... custom layout and dashboard content ...</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
    </div>
  </div>
</div>
<aside id="footnotes" class="footnotes footnotes-end-of-section"><hr>
<ol>
<li id="fn1"><p><code><a href="https://rstudio.github.io/bslib/reference/bs_theme.html">bs_theme()</a></code> still supports <a href="https://bootswatch.com/">Bootswatch</a> presets too, like <code>preset = "flatly"</code>.↩︎</p></li>
</ol></aside></section><section id="dark-mode" class="level3 page-columns page-full"><h3 class="anchored" data-anchor-id="dark-mode">Built-in dark mode support ☀️ 🌙</h3>
<p>This release of bslib brings built-in dark mode support to any Shiny app that uses <code><a href="https://rstudio.github.io/bslib/reference/bs_theme.html">bs_theme()</a></code>, thanks to Bootstrap 5.3’s new <a href="https://getbootstrap.com/docs/5.3/customize/color-modes/">client-side color mode feature</a>! To enable dark mode in your app, add <code><a href="https://rstudio.github.io/bslib/reference/input_dark_mode.html">input_dark_mode()</a></code> somewhere in your UI. In the example below, we’ve <a href="https://github.com/rstudio/bslib/blob/f574b9f0/inst/examples/flights/app.R#L231-L233">put in the navbar</a>.</p>
<div class="column-screen py-3 my-3 page-columns page-full">
  <div class="column-page">
  <ul class="nav nav-pills justify-content-center">
<li class="nav-item">
      <button class="nav-link" data-bs-toggle="tab" data-bs-target="#flights-light" type="button" aria-controls="flights-light" aria-selected="false">Light</button>
    </li>
    <li class="nav-item">
      <button class="nav-link active" data-bs-toggle="tab" data-bs-target="#flights-dark" type="button" aria-controls="flights-dark" aria-selected="true">Dark</button>
    </li>
  </ul>
<div class="tab-content p-3 border-0">
    <div class="tab-pane fade show active" id="flights-dark">
      <img src="https://shiny.posit.co/blog/posts/shiny-r-1.8.0/flights-dark.png" class="img-fluid shadow" alt="Flights dashboard in dark mode. All white areas are now a deep dark gray. The blue accents remain.">
</div>
    <div class="tab-pane" id="flights-light">
      <img src="https://shiny.posit.co/blog/posts/shiny-r-1.8.0/flights-light.png" class="img-fluid shadow" alt="Flights dashboard in light mode as previously described.">
</div>
  </div>
  </div>
</div>
<p>For the best results, make sure you have the latest version of <a href="https://shiny.rstudio.com/">shiny</a>. Dark mode works with nearly any Bootstrap theme created with <code><a href="https://rstudio.github.io/bslib/reference/bs_theme.html">bs_theme()</a></code>, including the new shiny preset, but it tends to work best when the theme is designed around light mode first. For matching plots and widgets to the current color mode, you can use <a href="https://rstudio.github.io/thematic/">thematic</a> to automatically style plots or <code><a href="https://rdrr.io/pkg/shiny/man/getCurrentOutputInfo.html">shiny::getCurrentOutputInfo()</a></code> to manually set the colors of your R outputs.</p>
<p>By default, the color mode is picked from the user’s system settings – i.e.&nbsp;choosing dark mode if their system is also in dark mode – but you can choose the initial color mode via the <code>mode</code> argument. If you give <code><a href="https://rstudio.github.io/bslib/reference/input_dark_mode.html">input_dark_mode()</a></code> an <code>id</code>, it reports the current color mode as either <code>"light"</code> or <code>"dark"</code>.</p>
<div class="cell">
<div class="sourceCode" id="cb4" data-shinylive="https://shinylive.io/r/editor/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKAZwAtaJWAlAB0IdJiw71OY4RBEBXWgAIAPAFolqKAHM4AfWgA3ei3YilFpaVqlqcJQF4lQsABEoPekRYATF7nNLIz1OLQI4RnYBXCUAYk15HiUjJRs4GE4rIitue0ZabW5SQItgrQg4ajMwAAUdewBGf2c3D24vXyViMgpisGiS5KhDPTSYMwhLKdSIVHlSPR8WAGs9GCIfOHZaH0cWpcZV9c3m4-snFzpCvtkp2VkRTgjDCNUNADN5CAJrEm3Z+YxIjzOakGJPRgvRgCJQgQZEKTPOAAUReZH+oIAJAcjhs4DE4ZNphZaO8lBj5tiVms8Y4LmAcS4YYTicSeEQAO4AOSI1netAIUF+EGqAHVKsR4FkcvYcUpODs4ABCJmDKYAX0G6tkmrkECkem01ARUGoelIuXgUUevH4AEF0OxFOCkdCwOqALpAA" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://shiny.posit.co/">shiny</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/">bslib</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/page_navbar.html">page_navbar</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>  title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dashboard"</span>,</span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/nav-items.html">nav_spacer</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># push nav items to the right</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/nav-items.html">nav_panel</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Page 1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dashboard content"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/nav-items.html">nav_item</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/input_dark_mode.html">input_dark_mode</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dark_mode"</span>, mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"light"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">server</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">output</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">server</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/observeEvent.html">observeEvent</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dark_mode</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dark_mode</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dark"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/showNotification.html">showNotification</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Welcome to the dark side!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/shinyApp.html">shinyApp</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">server</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
</section><section id="value-box-styling" class="level3 page-columns page-full"><h3 class="anchored" data-anchor-id="value-box-styling">Value box styling</h3>
<p>The new default look includes improved styling for <code><a href="https://rstudio.github.io/bslib/reference/value_box.html">value_box()</a></code> outputs, which are commonly used in dashboards. We’re also excited to announce a new <a href="https://bslib.shinyapps.io/build-a-box">Build-a-Box app</a> to help build and explore value boxes themes and options in a live Shiny app.</p>
<p>Use the tabs below to learn more about several new features and themes supported by <code><a href="https://rstudio.github.io/bslib/reference/value_box.html">value_box()</a></code>.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset nav-pills nav-centered page-columns page-full">
<ul class="nav nav-tabs">
<li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Text</a></li>
<li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Icons</a></li>
<li class="nav-item"><a class="nav-link" id="tabset-1-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-3" aria-controls="tabset-1-3" aria-selected="false">Gradient</a></li>
</ul>
<div class="tab-content nav-pills nav-centered page-columns page-full">
<div id="tabset-1-1" class="tab-pane active page-columns page-full" aria-labelledby="tabset-1-1-tab">
<div class="column-page-inset overflow-auto mb-3">
  <div class="d-flex align-items-center" style="height: 200px; min-width: 800px">
    <img src="https://shiny.posit.co/blog/posts/shiny-r-1.8.0/value-box-text.png" alt="Three value boxes, with made up statistics in purple, green and blue text. The value boxes feature unadorned plots that fill the bottom half of the box, each a sparkline in the same color as the card." class="img-fluid">
</div>
</div>
<section id="showcase-bottom-with-text-color-theme" class="level5"><h5 class="anchored" data-anchor-id="showcase-bottom-with-text-color-theme">Showcase Bottom with Text-Color Theme</h5>
<p>The new <code>showcase_layout = "bottom"</code> option is perfect for sparkline-style plots that fill the value box width and expand into full screen plots when the user clicks the <em>expand</em> button (enabled by <code>full_screen = TRUE</code>). See the <a href="https://rstudio.github.io/bslib/articles/value-boxes/index.html#expandable-sparklines">Expandable sparklines</a> section of the <a href="https://rstudio.github.io/bslib/articles/value-boxes/index.html">value box article</a> for an example of how to create these plots with <a href="https://plotly.com/r/">plotly</a> and bslib.</p>
<p>This example also highlights the <code>text-{color}</code> value box themes that set the color of the text to a <a href="https://getbootstrap.com/docs/5.3/customize/color/#all-colors">Bootstrap color</a>.</p>
<div class="cell">
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/layout_columns.html">layout_columns</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/value_box.html">value_box</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Engagement rate"</span>,</span>
<span>    value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3.8%"</span>,</span>
<span>    theme <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text-indigo"</span>,</span>
<span>    showcase <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/plotOutput.html">plotOutput</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot_engagement"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>    showcase_layout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>,</span>
<span>    full_screen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/value_box.html">value_box</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Project Funding"</span>,</span>
<span>    value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"$2,805"</span>,</span>
<span>    theme <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text-success"</span>,</span>
<span>    showcase <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/plotOutput.html">plotOutput</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot_funding"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>    showcase_layout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>,</span>
<span>    full_screen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/value_box.html">value_box</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Employee satisfaction"</span>,</span>
<span>    value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"92.3%"</span>,</span>
<span>    theme <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text-blue"</span>,</span>
<span>    showcase <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/plotOutput.html">plotOutput</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot_satisfaction"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>    showcase_layout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>,</span>
<span>    full_screen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
</section>
</div>
<div id="tabset-1-2" class="tab-pane page-columns page-full" aria-labelledby="tabset-1-2-tab">
<div class="column-page-inset overflow-auto mb-3">
  <div class="d-flex align-items-center" style="height: 200px; min-width: 800px">
    <img src="https://shiny.posit.co/blog/posts/shiny-r-1.8.0/value-box-icons.png" alt="Three value boxes with made up statistics, each with an icon to the left of the box. The cards are not tall and fit neatly into small row. The icons are blue with a subtle gradient toward the bottom right corner, blending from blue into purple." class="img-fluid">
</div>
</div>
<section id="showcase-left-center-with-gradient-icons" class="level5"><h5 class="anchored" data-anchor-id="showcase-left-center-with-gradient-icons">Showcase Left Center with Gradient Icons</h5>
<p>This example uses the default value box styles in the new shiny preset. Icons receive a subtle gradient and are placed to the left of the value box content thanks to the default <code>showcase_layout = "left center"</code>.</p>
<div class="cell">
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/layout_columns.html">layout_columns</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/value_box.html">value_box</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"API Response Time"</span>,</span>
<span>    value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"150ms"</span>,</span>
<span>    showcase <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bsicons</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_icon</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"arrow-left-square-fill"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/value_box.html">value_box</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Revenue growth"</span>,</span>
<span>    value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"+15.2%"</span>,</span>
<span>    showcase <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bsicons</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_icon</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"arrow-up-circle-fill"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/value_box.html">value_box</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Market share"</span>,</span>
<span>    value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"42%"</span>,</span>
<span>    showcase <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fontawesome</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/fontawesome/reference/fa_i.html">fa_i</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"magnifying-glass-dollar"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
</section>
</div>
<div id="tabset-1-3" class="tab-pane page-columns page-full" aria-labelledby="tabset-1-3-tab">
<div class="column-page-inset overflow-auto mb-3">
  <div class="d-flex align-items-center" style="height: 200px; min-width: 800px">
    <img src="https://shiny.posit.co/blog/posts/shiny-r-1.8.0/value-box-gradient.png" alt="Three value boxes of made up statistics, with vibrant gradient backgrounds: purple-cyan, orange-indigo, and teal-purple. Each card has an icon in the upper right corner and the title and value in the lower left corner." class="img-fluid">
</div>
</div>
<section id="showcase-top-right-with-gradient-backgrounds" class="level5"><h5 class="anchored" data-anchor-id="showcase-top-right-with-gradient-backgrounds">Showcase Top Right with Gradient Backgrounds</h5>
<p>This example uses <code>theme = "bg-gradient-{from}-{to}"</code> for value boxes with vibrant gradient backgrounds. You can use any of the <a href="https://getbootstrap.com/docs/5.3/customize/color/#all-colors">Bootstrap color names</a> for the <code>from</code> or <code>to</code> colors. <code>showcase_layout = "top right"</code> places the icon in the top right corner of the value box.</p>
<div class="cell">
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/layout_columns.html">layout_columns</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/value_box.html">value_box</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Average wait"</span>,</span>
<span>    value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4 minutes"</span>,</span>
<span>    theme <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bg-gradient-purple-cyan"</span>,</span>
<span>    showcase <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bsicons</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_icon</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stopwatch"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>    showcase_layout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top right"</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/value_box.html">value_box</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Customer churn"</span>,</span>
<span>    value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5%"</span>,</span>
<span>    theme <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bg-gradient-orange-indigo"</span>,</span>
<span>    showcase <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fontawesome</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/fontawesome/reference/fa_i.html">fa_i</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tent-arrow-turn-left"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>    showcase_layout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top right"</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/value_box.html">value_box</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Daily Active Users"</span>,</span>
<span>    value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8,507"</span>,</span>
<span>    theme <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bg-gradient-teal-purple"</span>,</span>
<span>    showcase <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fontawesome</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/fontawesome/reference/fa_i.html">fa_i</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"arrow-up-right-dots"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>    showcase_layout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top right"</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
</section>
</div>
</div>
</div>
<script>
document.addEventListener("DOMContentLoaded", function() {
  // Make nav-pills work in Quarto without directly writing the markup
  document.querySelectorAll(".nav-centered.nav-pills").forEach(function(el) {
    el.classList.remove('nav-pills');
    el.firstElementChild.classList.add('nav-pills');
    el.firstElementChild.classList.remove('nav-tabs');
  })
})
</script></section><section id="refreshed-shiny-ui" class="level3 page-columns page-full"><h3 class="anchored" data-anchor-id="refreshed-shiny-ui">Refreshed Shiny UI</h3>
<p>The new default look includes a refreshed Shiny UI, which includes new styling for inputs, modals, notifications, and more.</p>
<div class="column-page py-3 my-3 grid">
  <ul class="g-col-md-3 g-col-12 nav nav-pills flex-md-column justify-content-center">
<li class="nav-item">
      <button class="nav-link active" data-bs-toggle="tab" data-bs-target="#preset-inputs" type="button" aria-controls="preset-inputs" aria-selected="true">Inputs</button>
    </li>
    <li class="nav-item">
      <button class="nav-link" data-bs-toggle="tab" data-bs-target="#preset-notifications" type="button" aria-controls="preset-notifications" aria-selected="false">Notifications</button>
    </li>
    <li class="nav-item">
      <button class="nav-link" data-bs-toggle="tab" data-bs-target="#preset-progress-bar" type="button" aria-controls="preset-progress-bar" aria-selected="false">Progress Bars</button>
    </li>
    <li class="nav-item">
      <button class="nav-link" data-bs-toggle="tab" data-bs-target="#preset-modals" type="button" aria-controls="preset-modals" aria-selected="false">Modals</button>
    </li>
  </ul>
<div class="g-col-md-9 g-col-12 tab-content p-3 border-0">
    <div class="tab-pane fade show active" id="preset-inputs">
      <img src="https://shiny.posit.co/blog/posts/shiny-r-1.8.0/shiny-preset-inputs.gif" class="img-fluid" alt="New inputs styles, in particular a minimal slider input.">
</div>
    <div class="tab-pane fade" id="preset-notifications">
      <img src="https://shiny.posit.co/blog/posts/shiny-r-1.8.0/shiny-preset-notifications.gif" class="img-fluid" alt="New notification styles for default, message, warning and error notifications. Notifications have shadows and have a large amount of padding around the edges compared with Shiny's default design.">
</div>
    <div class="tab-pane fade" id="preset-progress-bar">
      <img src="https://shiny.posit.co/blog/posts/shiny-r-1.8.0/shiny-preset-progress-bar.gif" class="img-fluid" alt="New progress bar notification styles, which are similar to notifications.">
</div>
    <div class="tab-pane fade" id="preset-modals">
      <img src="https://shiny.posit.co/blog/posts/shiny-r-1.8.0/shiny-preset-modal.png" class="img-fluid" alt="An example modal with the new shiny preset style. The modal is minimal with additional padding and the backdrop has a soft blur effect.">
</div>
  </div>
</div>
</section></section><section id="shinylive-updates" class="level2"><h2 class="anchored" data-anchor-id="shinylive-updates">Shinylive updates</h2>
<p>Thanks to the exceptional work by George Stagg on <a href="https://docs.r-wasm.org/webr/latest/">webR</a> in collaboration with the Shiny team, <a href="https://posit-dev.github.io/r-shinylive/">shinylive</a> can now run Shiny applications entirely in a web browser, without the need for a separate server running R!</p>
<p>While sharing a traditional Shiny app requires you to deploy the app to a server, such as <a href="https://shinyapps.io">shinyapps.io</a>, shinylive allows you to share your app by simply sharing a URL or by embedding the shinylive app in a Quarto webpage. The app runs entirely in the browser, directly on the user’s device.</p>
<p>We’re please to announce several venues for writing and sharing Shiny apps via shinylive:</p>
<ol type="1">
<li><p><strong><a href="https://shinylive.io/r">shinylive.io/r</a> contains a gallery of example Shiny apps</strong> that you can run in your browser. You can also use <a href="https://shinylive.io/r/editor">shinylive.io/r/editor</a> as an online playground to write and share your own apps.</p></li>
<li><p><strong>The <a href="https://posit-dev.github.io/r-shinylive">shinylive R package</a> is now on CRAN!</strong> This package helps you turn an existing Shiny app into a ready-to-share shinylive app.</p></li>
<li><p><strong>The <a href="https://quarto-ext.github.io/shinylive/">shinylive Quarto extension</a> now supports both R and Python Shiny apps</strong> – even on the same page! With the <code>shinylive-r</code> and <code>shinylive-python</code> code cells, you can embed Shiny apps directly in Quarto web documents. This is perfect for blog posts, like this one! See the example near the start of this post.</p></li>
</ol>
<p><a href="https://docs.r-wasm.org/webr/latest/">webR</a> and <a href="https://posit-dev.github.io/r-shinylive/">shinylive</a> are under active development, so expect ongoing updates and improvements. Currently, shinylive apps download packages from webR’s CRAN-like repository at run time, which adds a delay to the initial startup time. In the future, we hope to make this faster and to allow package installation from more sources. We’re also really excited that <a href="https://ropensci.org/blog/2023/11/17/runiverse-wasm/">R-universe now builds WASM binaries</a> for R packages!</p>
</section><section id="selectize-js" class="level2"><h2 class="anchored" data-anchor-id="selectize-js">Selectize.js update</h2>
<p>Shiny’s <code><a href="https://rdrr.io/pkg/shiny/man/selectInput.html">selectInput()</a></code> and <code><a href="https://rdrr.io/pkg/shiny/man/selectInput.html">selectizeInput()</a></code> functions create dropdown menus that allow users to select one or more items from a list. These inputs are powered by the <a href="https://selectize.github.io/selectize.js/">selectize.js</a> library, and shiny 1.8.0 upgrades selectize.js from version 0.12.4 to 0.15.2.</p>
<p>This upgrade resolved <a href="https://github.com/rstudio/shiny/issues?q=is:issue+is:closed+selectize+sort:updated-desc+">a number of outstanding bugs and issues</a> with <code><a href="https://rdrr.io/pkg/shiny/man/selectInput.html">selectizeInput()</a></code> (as well as introducing some new ones that we had to squash before release). Most users won’t notice a difference in the select inputs – now they’ll just work <em>better</em> – but if you do notice a change in behavior, please let use know by <a href="https://github.com/rstudio/shiny/issues">filing an issue</a>.</p>
<p>Power users will find even more selectize.js <a href="https://selectize.dev/docs/usage">options</a> now available, including more <a href="https://selectize.dev/docs/demos/plugins">plugins</a>. We highly recommend trying both the <a href="https://selectize.dev/docs/plugins/clear-button"><code>clear_button</code></a> and <a href="https://selectize.dev/docs/plugins/remove-button"><code>remove_button</code></a> plugins to give users a clear visual cue for removing options:</p>
<div class="text-center">
<p><img src="https://shiny.posit.co/blog/posts/shiny-r-1.8.0/selectize.gif" class="img-fluid" alt="A demo with two select inputs. The first allows a single value and uses the clear_button plugin. An X on the select input allows the user to clear the selection. The second input allows multiple values and uses the remove_button plugin. Each selected value has an X that allows the user to remove the value."></p>
</div>
<div class="cell">
<div class="sourceCode" id="cb8" data-shinylive="https://shinylive.io/r/editor/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKAZwAtaJWAlAB0IdJiw71OY4RBEBXWgAIAPAFolqKAHM4AfQBmtAB5wAJuxFLrSznGpwCpWgC84ASQip5pSxBsBSkJgnHzaDsG4QWAAymEOtvaOpJG2pFDkGNDwuFaB1kSoziScSgC8SnScvqjU8tp8pRXBBA4sevQ+pCTBsgECuf42dg5Orh5ePn751sEw8tTOtXCpwQCyC0sJI8mp1RlwWbBwgzNK84u0y+VKACpYAKoAoqczhcUQTZW01ey19Y0bsFGHAYEQAG76TqkbpyMB9GyyWQiOyMSGMVQaAzyCBjEjsPjeUhRIg+IlROycUIkARKEB5WYQAC+IhRvH4AEF0OxFBS4Gj+QIwEyALpAA" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://shiny.posit.co/">shiny</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/">bslib</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/page.html">page_fixed</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/selectInput.html">selectizeInput</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"single"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Single select"</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">state.name</span>,</span>
<span>        options <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/list.html">list</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>plugins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"clear_button"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/selectInput.html">selectizeInput</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"multiple"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Multiple select"</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">state.name</span>,</span>
<span>        multiple <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span>        options <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/list.html">list</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>plugins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"remove_button"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">server</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">output</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">session</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/shinyApp.html">shinyApp</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">server</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
</section><div class="column-screen bg-light mt-4 page-columns page-full">
<section id="release-notes" class="level2 column-body"><h2 class="anchored" data-anchor-id="release-notes">Release notes</h2>
<p>This post doesn’t cover all of the changes and updates that happened in the Shiny universe in this release cycle. To learn more about specific changes in each package, dive into the release notes linked below!</p>
<p><strong>Big shout out to everyone involved!</strong> 💙 We’d want to extend a huge thank you to everyone who contributed pull requests, bug reports and feature requests. Your contributions make Shiny brilliant!</p>
<section id="bslib-v0.6.0" class="level4"><h4 class="anchored" data-anchor-id="bslib-v0.6.0">bslib <a href="https://rstudio.github.io/bslib/news/index.html#bslib-060">v0.6.0</a>
</h4>
<p><a href="https://github.com/antoine4ucsd">@antoine4ucsd</a>, <a href="https://github.com/awcm0n">@awcm0n</a>, <a href="https://github.com/barnesparker">@barnesparker</a>, <a href="https://github.com/cpsievert">@cpsievert</a>, <a href="https://github.com/ctrlxctrlc">@ctrlxctrlc</a>, <a href="https://github.com/daattali">@daattali</a>, <a href="https://github.com/DavZim">@DavZim</a>, <a href="https://github.com/durraniu">@durraniu</a>, <a href="https://github.com/gadenbuie">@gadenbuie</a>, <a href="https://github.com/gsmolinski">@gsmolinski</a>, <a href="https://github.com/jcheng5">@jcheng5</a>, <a href="https://github.com/jmbarbone">@jmbarbone</a>, <a href="https://github.com/JohnCoene">@JohnCoene</a>, <a href="https://github.com/kelly-sovacool">@kelly-sovacool</a>, <a href="https://github.com/lmullany">@lmullany</a>, <a href="https://github.com/m-austen">@m-austen</a>, <a href="https://github.com/MayaGans">@MayaGans</a>, <a href="https://github.com/mhanf">@mhanf</a>, <a href="https://github.com/ncullen93">@ncullen93</a>, <a href="https://github.com/ngoodkindGSI">@ngoodkindGSI</a>, <a href="https://github.com/oude-gao">@oude-gao</a>, <a href="https://github.com/schloerke">@schloerke</a>, <a href="https://github.com/scrapeable">@scrapeable</a>, <a href="https://github.com/tuge98">@tuge98</a>, and <a href="https://github.com/wch">@wch</a>.</p>
</section><section id="bsicons-v0.1.2" class="level4"><h4 class="anchored" data-anchor-id="bsicons-v0.1.2">bsicons <a href="https://rstudio.github.io/bsicons/news/index.html#bsicons-012">v0.1.2</a>
</h4>
<p><a href="https://github.com/cpsievert">@cpsievert</a>.</p>
</section><section id="crosstalk-v1.2.1" class="level4"><h4 class="anchored" data-anchor-id="crosstalk-v1.2.1">crosstalk <a href="https://cran.r-project.org/web/packages/crosstalk/news/news.html">v1.2.1</a>
</h4>
<p><a href="https://github.com/cpsievert">@cpsievert</a>, <a href="https://github.com/ctedja">@ctedja</a>, <a href="https://github.com/daattali">@daattali</a>, <a href="https://github.com/danielludolf">@danielludolf</a>, <a href="https://github.com/DataStrategist">@DataStrategist</a>, <a href="https://github.com/dmresearch15">@dmresearch15</a>, <a href="https://github.com/gadenbuie">@gadenbuie</a>, <a href="https://github.com/helgasoft">@helgasoft</a>, <a href="https://github.com/hlydecker">@hlydecker</a>, <a href="https://github.com/JacobBraslaw22">@JacobBraslaw22</a>, <a href="https://github.com/jcheng5">@jcheng5</a>, <a href="https://github.com/jonathanmburns">@jonathanmburns</a>, <a href="https://github.com/jonspring">@jonspring</a>, <a href="https://github.com/LDSamson">@LDSamson</a>, <a href="https://github.com/MichaelChirico">@MichaelChirico</a>, <a href="https://github.com/mmfc">@mmfc</a>, <a href="https://github.com/novotny1akub">@novotny1akub</a>, <a href="https://github.com/oobd">@oobd</a>, <a href="https://github.com/pfh">@pfh</a>, <a href="https://github.com/schloerke">@schloerke</a>, <a href="https://github.com/tbrittoborges">@tbrittoborges</a>, <a href="https://github.com/ThierryO">@ThierryO</a>, <a href="https://github.com/tomsing1">@tomsing1</a>, <a href="https://github.com/ulyngs">@ulyngs</a>, <a href="https://github.com/warnes">@warnes</a>, <a href="https://github.com/yb2125">@yb2125</a>, and <a href="https://github.com/yogat3ch">@yogat3ch</a>.</p>
</section><section id="histoslider-v0.1.1" class="level4"><h4 class="anchored" data-anchor-id="histoslider-v0.1.1">histoslider <a href="https://cran.r-project.org/web/packages/histoslider/news/news.html">v0.1.1</a>
</h4>
<p><a href="https://github.com/cpsievert">@cpsievert</a>.</p>
</section><section id="htmltools-v0.5.7" class="level4"><h4 class="anchored" data-anchor-id="htmltools-v0.5.7">htmltools <a href="https://rstudio.github.io/htmltools/news/index.html#htmltools-057">v0.5.7</a>
</h4>
<p><a href="https://github.com/bjcarothers">@bjcarothers</a>, <a href="https://github.com/cpsievert">@cpsievert</a>, <a href="https://github.com/gadenbuie">@gadenbuie</a>, <a href="https://github.com/HenningLorenzen-ext-bayer">@HenningLorenzen-ext-bayer</a>, <a href="https://github.com/mgirlich">@mgirlich</a>, and <a href="https://github.com/stla">@stla</a>.</p>
</section><section id="htmlwidgets-v1.6.3" class="level4"><h4 class="anchored" data-anchor-id="htmlwidgets-v1.6.3">htmlwidgets <a href="https://cran.r-project.org/web/packages/htmlwidgets/news/news.html">v1.6.3</a>
</h4>
<p><a href="https://github.com/barracuda156">@barracuda156</a>, <a href="https://github.com/cpsievert">@cpsievert</a>, <a href="https://github.com/DavisVaughan">@DavisVaughan</a>, <a href="https://github.com/dmurdoch">@dmurdoch</a>, <a href="https://github.com/gadenbuie">@gadenbuie</a>, <a href="https://github.com/pietrodito">@pietrodito</a>, and <a href="https://github.com/yihui">@yihui</a>.</p>
</section><section id="httpuv-v1.6.12" class="level4"><h4 class="anchored" data-anchor-id="httpuv-v1.6.12">httpuv <a href="https://cran.r-project.org/web/packages/httpuv/news/news.html">v1.6.12</a>
</h4>
<p><a href="https://github.com/Camilo-Mora">@Camilo-Mora</a>, <a href="https://github.com/gadenbuie">@gadenbuie</a>, <a href="https://github.com/jcheng5">@jcheng5</a>, <a href="https://github.com/jeroen">@jeroen</a>, <a href="https://github.com/nealrichardson">@nealrichardson</a>, and <a href="https://github.com/wfulp">@wfulp</a>.</p>
</section><section id="leaflet.providers-v2.0.0" class="level4"><h4 class="anchored" data-anchor-id="leaflet.providers-v2.0.0">leaflet.providers <a href="https://cran.r-project.org/web/packages/leaflet.providers/news/news.html">v2.0.0</a>
</h4>
<p><a href="https://github.com/gadenbuie">@gadenbuie</a>, <a href="https://github.com/schloerke">@schloerke</a>, and <a href="https://github.com/SimonGoring">@SimonGoring</a>.</p>
</section><section id="leaflet-v2.2.1" class="level4"><h4 class="anchored" data-anchor-id="leaflet-v2.2.1">leaflet <a href="https://cran.r-project.org/web/packages/leaflet/news/news.html">v2.2.1</a>
</h4>
<p><a href="https://github.com/barracuda156">@barracuda156</a>, <a href="https://github.com/Bryan1qr">@Bryan1qr</a>, <a href="https://github.com/gadenbuie">@gadenbuie</a>, <a href="https://github.com/gtalavera">@gtalavera</a>, <a href="https://github.com/jmelichar">@jmelichar</a>, <a href="https://github.com/mjdzr">@mjdzr</a>, and <a href="https://github.com/PietrH">@PietrH</a>.</p>
</section><section id="learnr-v0.11.4" class="level4"><h4 class="anchored" data-anchor-id="learnr-v0.11.4">learnr <a href="https://rstudio.github.io/learnr/news/index.html#learnr-0115">v0.11.4</a>
</h4>
<p><a href="https://github.com/davidkane9">@davidkane9</a>, <a href="https://github.com/gadenbuie">@gadenbuie</a>, <a href="https://github.com/jimjam-slam">@jimjam-slam</a>, <a href="https://github.com/katieravenwood">@katieravenwood</a>, and <a href="https://github.com/NaturallyAsh">@NaturallyAsh</a>.</p>
</section><section id="plotly-v4.10.3" class="level4"><h4 class="anchored" data-anchor-id="plotly-v4.10.3">plotly <a href="https://cran.r-project.org/web/packages/plotly/news/news.html">v4.10.3</a>
</h4>
<p><a href="https://github.com/AdroMine">@AdroMine</a>, <a href="https://github.com/AlexisDerumigny">@AlexisDerumigny</a>, <a href="https://github.com/Apompetti-Cori">@Apompetti-Cori</a>, <a href="https://github.com/cashfields">@cashfields</a>, <a href="https://github.com/cpsievert">@cpsievert</a>, <a href="https://github.com/CristianRiccio">@CristianRiccio</a>, <a href="https://github.com/davidhodge931">@davidhodge931</a>, <a href="https://github.com/DrMattG">@DrMattG</a>, <a href="https://github.com/geejaytee">@geejaytee</a>, <a href="https://github.com/jacole3">@jacole3</a>, <a href="https://github.com/jrbarber37">@jrbarber37</a>, <a href="https://github.com/lennartraman">@lennartraman</a>, <a href="https://github.com/LouisLeNezet">@LouisLeNezet</a>, <a href="https://github.com/MichalLauer">@MichalLauer</a>, <a href="https://github.com/mjdzr">@mjdzr</a>, <a href="https://github.com/mumbarkar">@mumbarkar</a>, <a href="https://github.com/Obsidian-user">@Obsidian-user</a>, <a href="https://github.com/olivroy">@olivroy</a>, <a href="https://github.com/OverLordGoldDragon">@OverLordGoldDragon</a>, <a href="https://github.com/rsbivand">@rsbivand</a>, <a href="https://github.com/stephanmg">@stephanmg</a>, <a href="https://github.com/stla">@stla</a>, <a href="https://github.com/TheAnalyticalEdge">@TheAnalyticalEdge</a>, <a href="https://github.com/ThierryO">@ThierryO</a>, <a href="https://github.com/tomasnobrega">@tomasnobrega</a>, <a href="https://github.com/tvedebrink">@tvedebrink</a>, <a href="https://github.com/uriahf">@uriahf</a>, <a href="https://github.com/whitejf">@whitejf</a>, <a href="https://github.com/wholmes105">@wholmes105</a>, <a href="https://github.com/wmay">@wmay</a>, <a href="https://github.com/yogat3ch">@yogat3ch</a>, and <a href="https://github.com/zeehio">@zeehio</a>.</p>
</section><section id="shiny-v1.8.0" class="level4"><h4 class="anchored" data-anchor-id="shiny-v1.8.0">shiny <a href="https://shiny.posit.co/r/reference/shiny/1.8.0/upgrade.html">v1.8.0</a>
</h4>
<p><a href="https://github.com/avsdev-cw">@avsdev-cw</a>, <a href="https://github.com/bathyscapher">@bathyscapher</a>, <a href="https://github.com/chlebowa">@chlebowa</a>, <a href="https://github.com/cpsievert">@cpsievert</a>, <a href="https://github.com/deining">@deining</a>, <a href="https://github.com/flachboard">@flachboard</a>, <a href="https://github.com/gadenbuie">@gadenbuie</a>, <a href="https://github.com/jcheng5">@jcheng5</a>, <a href="https://github.com/karangattu">@karangattu</a>, <a href="https://github.com/nstrayer">@nstrayer</a>, <a href="https://github.com/wbakerrobinson">@wbakerrobinson</a>, and <a href="https://github.com/wch">@wch</a>.</p>
</section><section id="shinyvalidate-v0.1.3" class="level4"><h4 class="anchored" data-anchor-id="shinyvalidate-v0.1.3">shinyvalidate <a href="https://rstudio.github.io/shinyvalidate/news/index.html#shinyvalidate-013">v0.1.3</a>
</h4>
<p><a href="https://github.com/BajczA475">@BajczA475</a>, <a href="https://github.com/bhogan-mitre">@bhogan-mitre</a>, <a href="https://github.com/chlebowa">@chlebowa</a>, <a href="https://github.com/cleber-n-borges">@cleber-n-borges</a>, <a href="https://github.com/cpsievert">@cpsievert</a>, <a href="https://github.com/dependabot%5Bbot%5D">@dependabot[bot]</a>, <a href="https://github.com/DivadNojnarg">@DivadNojnarg</a>, <a href="https://github.com/doncqueurs">@doncqueurs</a>, <a href="https://github.com/Sebastian-T-T">@Sebastian-T-T</a>, <a href="https://github.com/stefanoborini">@stefanoborini</a>, <a href="https://github.com/stephenwilliams22">@stephenwilliams22</a>, <a href="https://github.com/Teebusch">@Teebusch</a>, and <a href="https://github.com/Wezz0234">@Wezz0234</a>.</p>
</section><section id="thematic-0.1.4" class="level4"><h4 class="anchored" data-anchor-id="thematic-0.1.4">thematic <a href="https://rstudio.github.io/thematic/news/index.html#thematic-014">0.1.4</a>
</h4>
<p><a href="https://github.com/AlbertRapp">@AlbertRapp</a>, <a href="https://github.com/cpsievert">@cpsievert</a>, and <a href="https://github.com/jfulponi">@jfulponi</a>.</p>
</section></section>
</div>



 ]]></description>
  <guid>https://shiny.posit.co/blog/posts/shiny-r-1.8.0/</guid>
  <pubDate>Thu, 30 Nov 2023 05:00:00 GMT</pubDate>
  <media:content url="https://shiny.posit.co/blog/posts/shiny-r-1.8.0/feature.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Shiny for Python 0.6.0</title>
  <dc:creator>Shiny Team</dc:creator>
  <link>https://shiny.posit.co/blog/posts/shiny-python-0.6.0/</link>
  <description><![CDATA[ 
<!-- Google Tag Manager (noscript) -->
 <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KHBDBW7" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<style type="text/css">
  #quarto-content>* {
  padding-top: 0px;
  }
</style>


        <div class="column-body-outset blog-image-container pb-5">
      <img src="https://shiny.posit.co/blog/posts/shiny-python-0.6.0/shiny-060.png" alt="Shiny for Python 0.6.0" style="width: 100%; height: auto;">
    </div>
    


<p>We recently released Shiny for Python 0.6.0, this is a big release so it’s a good idea to check out the <a href="https://github.com/posit-dev/py-shiny/blob/main/CHANGELOG.md">changelog</a> for a full set of new features. This post is going to focus on the four most important changes in 0.6.0.</p>
<section id="optional-output" class="level2">
<h2 data-anchor-id="optional-output">Optional <code>@output</code></h2>
<p>Up until now every Shiny output needed two decorators, an <code>@output</code> decorator and some kind of <code>@render</code> decorator. The reason for this is that you can pass arguments like <code>id</code> to <code>@output</code> and so having a separate decorator made sense. Requiring both decorators for every output, however, was a common source of bugs for new users. For example if you neglected to include the output decorator, or used the decorators in the wrong order, you would get a silent failure. As a result we’ve made the <code>@output</code> decorator optional, and recommend that you only use it if you need to access one of its arguments.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> server(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>, output, session):</span>
<span id="cb1-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @output # &lt;- No longer necessary!</span></span>
<span id="cb1-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@render.text</span></span>
<span id="cb1-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> txt():</span>
<span id="cb1-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"n*2 is </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>n() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span></code></pre></div>
</section>
<section id="new-page-layouts" class="level2 page-columns page-full">
<h2 data-anchor-id="new-page-layouts">New page layouts</h2>
<p>A large majority of shiny apps use either a sidebar layout or a navbar layout, and up until this point you’ve needed to combine a <code>page_*</code> and <code>layout_*</code> or <code>navset_*</code> call to generate that kind of app. We’ve added two new functions <code>ui.page_sidebar</code> and <code>ui.page_navbar</code> to better accomodate these cases, and we’ve also improved the look and feel of the default applications. Both <code>ui.page_navbar</code> and <code>ui.page_sidebar</code> added a <code>sidebar=</code> argument which includes a responsive, collapsable sidebar (<code>ui.sidebar</code>) on your application across every tab.</p>
<p>The updated layout sidebar (<code>ui.layout_sidebar()</code>) no longer needs to include a call to <code>ui.panel_main()</code>. It is recommended to put content inside <code>ui.card()</code> within the main content of <code>ui.page_sidebar()</code>. Please update your calls of <code>ui.panel_sidebar()</code> to <code>ui.sidebar()</code>.</p>
<section id="sidebars" class="level3 page-columns page-full">
<h3 data-anchor-id="sidebars">Sidebars</h3>
<div class="columns column-page-inset">
<div class="column" style="width:45%;">
<section id="old-api" class="level4">
<h4 data-anchor-id="old-api">Old API</h4>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">ui.page_fluid(</span>
<span id="cb2-2">    ui.layout_sidebar(</span>
<span id="cb2-3">        ui.panel_sidebar(</span>
<span id="cb2-4">            ui.input_numeric(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>),</span>
<span id="cb2-5">        ),</span>
<span id="cb2-6">        ui.panel_main(</span>
<span id="cb2-7">            ui.plot_output(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot"</span>),</span>
<span id="cb2-8">        ),</span>
<span id="cb2-9">    )</span>
<span id="cb2-10">)</span></code></pre></div>
</section>
</div><div class="column" style="width:10%;">

</div><div class="column" style="width:45%;">
<section id="new-api" class="level4">
<h4 data-anchor-id="new-api">New API</h4>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">ui.page_sidebar(</span>
<span id="cb3-2">    ui.sidebar(</span>
<span id="cb3-3">        ui.input_numeric(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>),</span>
<span id="cb3-4">    ),</span>
<span id="cb3-5">    ui.card(</span>
<span id="cb3-6">        ui.plot_output(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot"</span>),</span>
<span id="cb3-7">    ),</span>
<span id="cb3-8">)</span></code></pre></div>
</section>
</div>
</div>
<p>In addition to <code>sidebar</code>, we have added <code>ui.page_fillable()</code> to help users create applications that fill the available space in the window. This is great for applications where the plot should fill the entire contents fo the window. <code>ui.page_sidebar()</code> is a wrapper around <code>ui.page_fillable()</code>. In addition to the filling layout method, many UI output methods have added <code>fill=</code> or <code>fillable=</code> parameters to allow for the component to fill the available area (<code>fill=True</code>) or to allow for contained components to fill the available content area (<code>fillable=</code>). The handshake of <code>fill=True</code> and <code>fillable=True</code> must occur to achieve a filling layout. Let’s take a look at the new layout in action:</p>
<div class="quarto-video"><video id="video_shortcode_videojs_video1" class="video-js vjs-default-skin vjs-fluid" controls="" preload="auto" data-setup="{}" title="Resize ui.page_sidebar()"><source src="page_sidebar_resize.mp4"></video></div>
</section>
</section>
<section id="new-components" class="level2 page-columns page-full">
<h2 data-anchor-id="new-components">New components</h2>
<p>There are a lot of new components in this release, but the two most important ones are <code>ui.card()</code> and <code>ui.value_box()</code>. Cards allow you to visually dilineate parts of your application, and group inputs and outputs together. For example, you might have a card which included a plot and some inputs which filter the data for that particular plot. Cards also provide sensible spacing which makes your app look less cluttered and easier to read.</p>
<p>Value boxes are for highlighting single numbers or pieces of text. They are useful for calling out important numbers or pieces of text, and can include showcase icons. To top it off, value boxes are enhanced with advanced Bootstrap theming capabilities, allowing you to change the color of the box, the icon, and the text.</p>
<div class="column-page-inset">
<p><img src="https://shiny.posit.co/blog/posts/shiny-python-0.6.0/model_monitoring.png" class="border shadow-lg mb-3 img-fluid" alt="Page sidebar with a card and value boxes"></p>
</div>
<p>Both value boxes and cards can be positioned using <code>ui.layout_column_wrap</code>. This function provides a convenient way to display elements in equally spaced columns. The values boxes in the above example are presented using <code>ui.layout_column_wrap</code>.</p>
<p>While you can arrange content with <code>ui.row()</code> and <code>ui.column()</code>, <code>ui.layout_column_wrap()</code> removes a lot of additional boilerplate. For example if you had three cards which you wanted to lay out on a row, you would do it like this:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">ui.layout_column_wrap(</span>
<span id="cb4-2">    ui.card(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Card 1 content"</span>),</span>
<span id="cb4-3">    ui.card(ui.plot_output(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot2"</span>)),</span>
<span id="cb4-4">    ui.card(ui.plot_output(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot3"</span>)),</span>
<span id="cb4-5">    width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb4-6">)</span></code></pre></div>
</section>
<section id="many-other-components" class="level2">
<h2 data-anchor-id="many-other-components">Many other components</h2>
<p>There are too many new components in <a href="https://github.com/posit-dev/py-shiny/blob/v0.6.0/CHANGELOG.md#060---2023-08-08">this release</a> to blog about, so please check out <a href="https://shiny.posit.co/py/api/">the documentation</a> to see how they work together.</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
… psst!
</div>
</div>
<div class="callout-body-container callout-body">
<p>If you’re using <code>shiny.experiemental.ui</code>, you can now use <code>shiny.ui</code> instead. We’ve moved virtually all of the experimental components into the main <code>shiny.ui</code> namespace. 🎉</p>
</div>
</div>
<hr>
<p>That’s it for today! As always, if you have any questions or feedback, please <a href="https://discord.gg/yMGCamUMnS">join us on Discord</a> or <a href="https://github.com/posit-dev/py-shiny/issues/new">open an issue on GitHub</a>. And if you’re enjoying Shiny for Python, please consider <a href="https://github.com/posit-dev/py-shiny">starring us on GitHub</a> to show your support!</p>


</section>

 ]]></description>
  <guid>https://shiny.posit.co/blog/posts/shiny-python-0.6.0/</guid>
  <pubDate>Wed, 15 Nov 2023 05:00:00 GMT</pubDate>
  <media:content url="https://shiny.posit.co/blog/posts/shiny-python-0.6.0/shiny-060.png" medium="image" type="image/png" height="76" width="144"/>
</item>
<item>
  <title>ShinyUiEditor: Out of Alpha</title>
  <dc:creator>Nick Strayer</dc:creator>
  <link>https://shiny.posit.co/blog/posts/shinyuieditor-out-of-alpha/</link>
  <description><![CDATA[ 
<!-- Google Tag Manager (noscript) -->
 <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KHBDBW7" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<style type="text/css">
  #quarto-content>* {
  padding-top: 0px;
  }
</style>


        <div class="column-body-outset blog-image-container pb-5">
      <img src="https://shiny.posit.co/blog/posts/shinyuieditor-out-of-alpha/out-of-alpha-main.jpeg" style="width: 100%; height: auto;">
    </div>
    


<style>

.blog-image-container > img {
  /* from openprops */
  --shadow-color: 220 3% 15%;
  --shadow-strength: 1%;
  --inner-shadow-highlight: inset 0 -.5px 0 0 #fff, inset 0 .5px 0 0 #0001;
  
  /* Give the headline image a bit of a shadow to make its boundaries 
     clear from the background which has the same color
  */
  box-shadow: 0 -1px 3px 0 hsl(var(--shadow-color) / calc(var(--shadow-strength) + 2%)),
    0 1px 2px -5px hsl(var(--shadow-color) / calc(var(--shadow-strength) + 2%)),
    0 2px 5px -5px hsl(var(--shadow-color) / calc(var(--shadow-strength) + 4%)),
    0 4px 12px -5px hsl(var(--shadow-color) / calc(var(--shadow-strength) + 5%)),
    0 12px 15px -5px hsl(var(--shadow-color) / calc(var(--shadow-strength) + 7%));
}

.demo-video {
    --video-width: 80%;
    width: var(--video-width);
    margin-block: 2rem;
    margin-inline: calc((100% - var(--video-width))/2);
}

.demo-video > video {
  width: 100%;
}

</style>
<section id="whats-new" class="level2">
<h2 data-anchor-id="whats-new">What’s New?</h2>
<p>We’re excited to announce that <a href="https://rstudio.github.io/shinyuieditor/">ShinyUiEditor,</a> a drag-and-drop interface for building Shiny apps, is officially out of its “alpha” stage. With a year of rigorous development and community feedback behind us, the editor is more robust, feature-rich, and ready for you to try it out!</p>
</section>
<section id="the-journey-so-far" class="level2">
<h2 data-anchor-id="the-journey-so-far">The Journey So Far</h2>
<p>ShinyUiEditor <a href="https://www.youtube.com/watch?v=UIaigpCAIqE">debuted at RStudioConf::2022,</a> offering an initial glimpse and hands-on experience for adventurous users. Since then, we have made significant advancements, including the addition of server awareness functionality, and reducing friction for users when adding and updating input and outputs in their apps.</p>
<div class="demo-video">
<video autoplay="" loop="" muted="" playsinline="">
<source src="synced-ids-small.mp4" type="video/mp4">
Inputs and outputs are synced between the UI and Server code. </video>
</div>
<section id="new-ways-of-running" class="level3">
<h3 data-anchor-id="new-ways-of-running">New ways of running</h3>
<p>We have also introduced two new ways of running the UI editor.</p>
<p>The first is a “static” mode that runs <a href="https://rstudio.github.io/shinyuieditor/live-demo/">directly on the editor’s website</a> with no need to install anything. This eliminates the need for installation and provides copy-and-pastable code for your app once you’re done.</p>
<p>The second is a <a href="https://marketplace.visualstudio.com/items?itemName=Posit.shinyuieditor">VSCode extension,</a> allowing you to open the editor right next to your app’s script to instantly see updates.</p>
</section>
<section id="better-looking-apps" class="level3">
<h3>Better looking apps</h3>
<p>To ensure apps created with the UI editor look great, we have added new bslib components like <a href="https://rstudio.github.io/bslib/articles/value-boxes/index.html">value boxes</a> and <a href="https://rstudio.github.io/bslib/articles/cards/index.html">cards.</a></p>
<p>On the less exciting – but very important – front, we have also focused on <a href="https://rstudio.github.io/shinyuieditor/change-log/">bug fixes, stability improvements, and overall performance enhancements.</a></p>
<div class="demo-video">
<video autoplay="" loop="" muted="" playsinline="">
<source src="render-function-cleanup-small.mp4" type="video/mp4">
Now if you delete an element with server bindings, the editor will ask if you want to delete the bindings as well. This results in cleaner app code, especially when starting from a template. </video>
</div>
<section id="the-road-ahead" class="level2">
<h2 data-anchor-id="the-road-ahead">The Road Ahead</h2>
<p>Just because we’re out of alpha doesn’t mean we’re done adding features and generally improving the editor. Some upcoming features include exciting components like <code>bslib::sidebar_layout()</code> and <code>bslib::accordian()</code>, and a greater variety of templates to start from. Keep an eye on the <a href="https://github.com/rstudio/shinyuieditor">GitHub repository</a> and <a href="https://rstudio.github.io/shinyuieditor/">editor website</a> to stay up-to-date with the latest.</p>
</section>
<section id="were-listening" class="level2">
<h2 data-anchor-id="were-listening">We’re Listening</h2>
<p>Feedback isn’t just appreciated—it’s crucial. Your insights and suggestions will greatly influence ShinyUiEditor’s continued development. Join the conversation through <a href="https://discord.gg/FNMwts4DsF">our Discord channel</a> or raise an issue on <a href="https://github.com/rstudio/shinyuieditor/issues">our GitHub page</a>.</p>
<p>We can’t wait to see what you build!</p>


</section>
</section></section> ]]></description>
  <guid>https://shiny.posit.co/blog/posts/shinyuieditor-out-of-alpha/</guid>
  <pubDate>Mon, 30 Oct 2023 04:00:00 GMT</pubDate>
  <media:content url="https://shiny.posit.co/blog/posts/shinyuieditor-out-of-alpha/out-of-alpha-main.jpeg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Shiny for R updates: tooltips, popovers, a new theme, and more</title>
  <dc:creator>Carson Sievert</dc:creator>
  <dc:creator>Garrick Aden-Buie</dc:creator>
  <link>https://shiny.posit.co/blog/posts/bslib-tooltips/</link>
  <description><![CDATA[ <!-- Google Tag Manager (noscript) --><noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KHBDBW7" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<style type="text/css">
  #quarto-content>* {
  padding-top: 0px;
  }
</style>
<div class="column-body-outset blog-image-container pb-5">
      <img src="https://shiny.posit.co/blog/posts/bslib-tooltips/feature.png" style="width: 100%; height: auto;">
</div>
    


<style>
.quarto-video > div {
  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
}
.cell-output-display {
  padding-left: 1rem;
}
</style>
<p>The Shiny team is delighted to share that we’ve just released updates for 12 different R packages that contribute to the Shiny experience. These updates include many improvements and bug fixes that aren’t explicitly covered here, but the release notes section of this post provides links to the full list of changes for each package. That said, there are a few new features in <code>bslib</code> that we’re particularly excited to highlight for you!</p>
<section id="bslib" class="level2 page-columns page-full"><h2 class="anchored" data-anchor-id="bslib">bslib</h2>
<p>In <a href="https://shiny.posit.co/blog/posts/bslib-dashboards/">the last release of <code>bslib</code> (0.5.0)</a>, we made significant strides towards <code>bslib</code> being our recommended way to <a href="https://rstudio.github.io/bslib/articles/dashboards/index.html">build modern Shiny dashboards</a>. In this release, we’ve added more features to help you make even better dashboards.</p>
<section id="tooltips-and-popovers" class="level3 page-columns page-full"><h3 class="anchored" data-anchor-id="tooltips-and-popovers">Tooltips and popovers</h3>
<p>One essential quality of any great website is that it provides the user with the right amount of information at the right time. In technically-oriented apps, you might want to provide a definition for a term, a description of a model parameter, or an input that updates a specific plot, but you don’t want these details to overwhelm the user when they’re not needed.</p>
<p>In this release, we’ve added <code><a href="https://rstudio.github.io/bslib/reference/tooltip.html">bslib::tooltip()</a></code> and <code><a href="https://rstudio.github.io/bslib/reference/popover.html">bslib::popover()</a></code> to help you do just that. By putting this additional information in a tooltip or these additional controls in a popover, you can provide the detail your users need on demand, right where they need it.</p>
<p>Here’s a quick demo. In this example, we have a <a href="https://rstudio.github.io/bslib/articles/cards/index.html">card</a> containing a plot that compares the body mass of our favorite <a href="https://allisonhorst.github.io/palmerpenguins/">penguins</a> across species. We’ve leveraged <code>bslib</code>’s new tooltip and popover features in a few ways:</p>
<ol type="1">
<li><p>An info icon next to the card title includes a <a href="https://rstudio.github.io/bslib/reference/tooltip.html">tooltip</a> that describes how the penguin body mass is measured.</p></li>
<li><p>A gear icon in the upper left corner of the card includes a <a href="https://rstudio.github.io/bslib/reference/popover.html">popover</a> with a few controls for customizing the plot.</p></li>
<li><p>In the footer, a “Learn more” link opens a <a href="https://rstudio.github.io/bslib/reference/popover.html">popover</a> with the full citation for the data used in the plot.</p></li>
</ol>
<div class="column-screen bg-blue py-5 mt-4 mb-5 page-columns page-full">
<div class="column-body-outset">
<div class="quarto-video"><video id="video_shortcode_videojs_video1" class="video-js vjs-default-skin vjs-fluid" controls="" preload="auto" data-setup="{}" title="Using bslib's tooltip and popover functionality to provide more detail on demand"><source src="tooltips-popovers.mp4"></video></div>
</div>
<div class="text-center">
<p>
<a class="btn btn-outline-primary" href="https://posit.cloud/content/6298796" target="_blank" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="01-tooltips-popovers.R">  Try on Posit Cloud </a> <a class="btn btn-outline-secondary ms-1 px-3" href="https://gist.github.com/cpsievert/7a93ff167aebf474873493d566ab9e07#file-01-tooltips-popovers-r" target="_blank" data-bs-toggle="tooltip" data-bs-placement="bottom" title="View Source Code">  <span class="visually-hidden">Source</span></a>
</p>

<p class="mb-0">
<i class="bi bi-book-fill"></i>
Learn more in the new
<a href="https://rstudio.github.io/bslib/articles/tooltips-popovers/index.html">Tooltips &amp; Popovers article</a>.
</p>
</div>
</div>
</section><section id="towards-a-new-shiny-theme" class="level3 page-columns page-full"><h3 class="anchored" data-anchor-id="towards-a-new-shiny-theme">Towards a new Shiny theme</h3>
<p>This release of <code>bslib</code> introduces a new theme that we intend on making the default experience for <code>bslib</code>-powered apps. Since this theme is still a work-in-progress, you must currently must be opt-in to use it by providing <code>bs_theme(preset = "shiny")</code> to the <code>theme</code> argument of the relevant page function, for example:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://shiny.posit.co/">shiny</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/">bslib</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/page_sidebar.html">page_sidebar</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>  theme <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/bs_theme.html">bs_theme</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>preset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shiny"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ...</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<p>The screen recording below gives you a preview of the new Shiny preset theme. One exciting difference between the Shiny preset and other <a href="https://bootswatch.com/">Bootswatch themes</a>, is that we’ve taken this opportunity to re-think the appearance of Shiny-specific widgets, like <code><a href="https://rdrr.io/pkg/shiny/man/sliderInput.html">sliderInput()</a></code> and <code><a href="https://rdrr.io/pkg/shiny/man/selectInput.html">selectInput()</a></code>.</p>
<p>Want to see this theme in action? Just install the updated <code>bslib</code> package and run <code><a href="https://rstudio.github.io/bslib/reference/bs_theme_preview.html">bslib::bs_theme_preview()</a></code> in your R console!</p>
<div class="column-screen bg-blue py-5 mt-4 mb-5 page-columns page-full">
<div class="column-body-outset">
<div class="quarto-video"><video id="video_shortcode_videojs_video2" class="video-js vjs-default-skin vjs-fluid" controls="" preload="auto" data-setup="{}" title="Changing from the current default theme to the new theme"><source src="shiny-theme.mp4"></video></div>
</div>
<div class="text-center">
<p>
<a class="btn btn-outline-primary" href="https://posit.cloud/content/6298796" target="_blank" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="02-new-theme.R">   Try on Posit Cloud </a> <a class="btn btn-outline-secondary ms-1 px-3" href="https://gist.github.com/cpsievert/7a93ff167aebf474873493d566ab9e07#file-02-new-theme-r" target="_blank" data-bs-toggle="tooltip" data-bs-placement="bottom" title="View Source Code">  <span class="visually-hidden">Source</span></a>
</p>

<p class="mb-0">
<i class="bi bi-book-fill"></i>
Learn more about
<a href="https://rstudio.github.io/bslib/articles/theming/index.html">real-time theming with bslib</a>.
</p>
</div>
</div>
</section><section id="improved-quarto-integration" class="level3 page-columns page-full"><h3 class="anchored" data-anchor-id="improved-quarto-integration">Improved Quarto integration</h3>
<p>Since <code>bslib</code> components are designed to both work with Shiny and to render statically they can be added to <a href="https://rstudio.github.io/bslib/articles/any-project/index.html">any Bootstrap-compatible page</a>.</p>
<p>In practice, however, due to nuances in how Quarto provides Boostrap, some <code>bslib</code> components weren’t quite working as expected in Quarto documents. But this release fixes that issue!</p>
<p>To demonstrate, here’s an example of a fullscreen-capable <a href="https://rstudio.github.io/bslib/articles/cards/index.html"><code>bslib::card()</code></a> in a Quarto document.</p>
<div class="column-screen bg-blue py-5 mt-4 mb-5 page-columns page-full">
<div class="column-body-outset">
<div class="quarto-video"><video id="video_shortcode_videojs_video3" class="video-js vjs-default-skin vjs-fluid" controls="" preload="auto" data-setup="{}" title="Putting a fullscreen-capable bslib card in a Quarto document"><source src="quarto-bslib.mp4"></video></div>
</div>
<div class="text-center">
<p>
<a class="btn btn-outline-primary" href="https://posit.cloud/content/6298796" target="_blank" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="03-quarto-bslib.qmd">  Try on Posit Cloud </a> <a class="btn btn-outline-secondary ms-1 px-3" href="https://gist.github.com/cpsievert/7a93ff167aebf474873493d566ab9e07#file-03-quarto-bslib-qmd" target="_blank" data-bs-toggle="tooltip" data-bs-placement="bottom" title="View Source Code">  <span class="visually-hidden">Source</span></a>
</p>

<p class="mb-0">
<i class="bi bi-lightbulb-fill"></i>
You can also
<a href="https://rstudio.github.io/bslib/articles/any-project/index.html#r-markdown">use bslib components in R Markdown</a>.
</p>
</div>
</div>
</section><section id="new-input_switch" class="level3"><h3 class="anchored" data-anchor-id="new-input_switch">New <code>input_switch()</code>
</h3>
<p>Turning a feature on or off is a common action in many Shiny apps. With Shiny’s default UI, this is typically done with a <a href="https://shiny.rstudio.com/reference/shiny/latest/checkboxInput.html"><code>checkboxInput()</code></a>. But checkboxes don’t always give an obvious visual cue of turning an option on or off.</p>
<p>In this release, we’ve added a new <code><a href="https://rstudio.github.io/bslib/reference/input_switch.html">input_switch()</a></code> with a modern appearance. Here’s a quick live preview of how it looks and feels:</p>
<div class="cell">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bslib</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/bslib/reference/input_switch.html">input_switch</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"switch"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Turn Up Awesomeness"</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output-display">
<div class="form-group shiny-input-container" data-require-bs-version="5" data-require-bs-caller="input_switch()">
<div class="form-check form-switch">
<input id="switch" class="form-check-input" type="checkbox"><label class="form-check-label" for="switch">
<span>Turn Up Awesomeness</span>
</label>
</div>
</div>
</div>
</div>
<div class="callout callout-style-simple callout-none no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<p>The new <code>bslib</code> is <span id="extra" class="d-none"><strong>extra, extra</strong></span> awesome!</p>
</div>
</div>
</div>
<script>
document.getElementById("switch").addEventListener("click", (ev) => {
  const extra = document.getElementById("extra");
  extra.classList.toggle("d-none", !ev.target.checked);
});
</script></section></section><section id="looking-forward" class="level2"><h2 class="anchored" data-anchor-id="looking-forward">Looking forward</h2>
<p>We’re excited to continue improving Shiny for R, and in the near-term we plan to focus on making <code>bslib</code> a more complete UI framework with great looking defaults. Here are a few things currently towards the top of our roadmap:</p>
<ul>
<li>Make the new Shiny preset theme the default for <code>bslib</code>-powered apps.
<ul>
<li>We have refreshed style updates in the works for <code><a href="https://rstudio.github.io/bslib/reference/card.html">card()</a></code>s, <code><a href="https://rstudio.github.io/bslib/reference/sidebar.html">sidebar()</a></code>, and much more.</li>
<li>And we’d love to get your feedback on the new theme!</li>
</ul>
</li>
<li>More UI components, such as <a href="https://getbootstrap.com/docs/5.3/components/offcanvas/">offcanvas</a>, <a href="https://getbootstrap.com/docs/5.3/components/button-group/">button groups</a>, etc.</li>
<li>More incorporation of <code>bslib</code> as part of the <a href="https://shiny.posit.co/r/getstarted/shiny-basics/lesson1/index.html">Getting Started experience</a> on <a href="https://shiny.posit.co/">shiny.posit.co</a>.</li>
<li>More <code>bslib</code>-focused example galleries, starter templates, and articles.</li>
</ul>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Join us at posit::conf(2023)!
</div>
</div>
<div class="callout-body-container callout-body">
<p>We’re also excited to see you at <a href="https://posit.co/conference/">posit::conf(2023)</a> this September! Currently, there are <a href="https://reg.conf.posit.co/flow/posit/positconf23/attendee-portal/page/sessioncatalog?mkt_tok=NzA5LU5YTi03MDYAAAGMOwicGCTQ0Fdw5xeRt2ICgRdWcmS5wjLMqYn9lIzlZxV_RurIIbKDnx8O9POcnDuz7Fu5IGLG_FegVO8iDE08HrjnqmwQs5JKRs9qk2sS7Ac&amp;search=shiny">35 sessions</a> on the schedule that mention Shiny, including a handful of UI-focused <a href="https://reg.conf.posit.co/flow/posit/positconf23/attendee-portal/page/sessioncatalog?mkt_tok=NzA5LU5YTi03MDYAAAGMOwicGCTQ0Fdw5xeRt2ICgRdWcmS5wjLMqYn9lIzlZxV_RurIIbKDnx8O9POcnDuz7Fu5IGLG_FegVO8iDE08HrjnqmwQs5JKRs9qk2sS7Ac&amp;search=shiny&amp;search.sessiontype=1675316728702001wr6r">workshops</a> and <a href="https://reg.conf.posit.co/flow/posit/positconf23/attendee-portal/page/sessioncatalog?mkt_tok=NzA5LU5YTi03MDYAAAGMOwicGCTQ0Fdw5xeRt2ICgRdWcmS5wjLMqYn9lIzlZxV_RurIIbKDnx8O9POcnDuz7Fu5IGLG_FegVO8iDE08HrjnqmwQs5JKRs9qk2sS7Ac&amp;search=bslib&amp;search.sessiontype=1684338401751002OADN&amp;search.sessiontopics=1684779688709001hs5K">talks</a>.</p>
</div>
</div>
</section><section id="release-notes" class="level2"><h2 class="anchored" data-anchor-id="release-notes">Release notes</h2>
<p>There are a lot of changes and updates in the Shiny universe that we haven’t covered in this post. Dive into the release notes linked below to learn more about changes in each package.</p>
<p><strong>Thank you, everyone!</strong> 💙 We’d like to thank everyone who contributed to all of the packages released in this cycle. Your contributions are what make Shiny great!</p>
<section id="bslib-v0.5.1" class="level3"><h3 class="anchored" data-anchor-id="bslib-v0.5.1">bslib <a href="https://rstudio.github.io/bslib/news/index.html#bslib-051">v0.5.1</a>
</h3>
<p><a href="https://github.com/ariebh">@ariebh</a>, <a href="https://github.com/asadow">@asadow</a>, <a href="https://github.com/chrisbrownlie">@chrisbrownlie</a>, <a href="https://github.com/cpsievert">@cpsievert</a>, <a href="https://github.com/ctrlxctrlc">@ctrlxctrlc</a>, <a href="https://github.com/daattali">@daattali</a>, <a href="https://github.com/gadenbuie">@gadenbuie</a>, <a href="https://github.com/ideusoes">@ideusoes</a>, <a href="https://github.com/Liripo">@Liripo</a>, <a href="https://github.com/michael-dewar">@michael-dewar</a>, <a href="https://github.com/nteetor">@nteetor</a>, <a href="https://github.com/PaulC91">@PaulC91</a>, <a href="https://github.com/philiph99">@philiph99</a>, <a href="https://github.com/riskcede">@riskcede</a>, <a href="https://github.com/schloerke">@schloerke</a>, <a href="https://github.com/Teebusch">@Teebusch</a>, <a href="https://github.com/tillea">@tillea</a>, and <a href="https://github.com/wch">@wch</a>.</p>
</section><section id="shiny-v1.7.5" class="level3"><h3 class="anchored" data-anchor-id="shiny-v1.7.5">shiny <a href="https://shiny.posit.co/r/reference/shiny/1.7.5/upgrade.html">v1.7.5</a>
</h3>
<p><a href="https://github.com/AlexWaterboyBezzina">@AlexWaterboyBezzina</a>, <a href="https://github.com/apalacio9502">@apalacio9502</a>, <a href="https://github.com/aronatkins">@aronatkins</a>, <a href="https://github.com/asadow">@asadow</a>, <a href="https://github.com/BajczA475">@BajczA475</a>, <a href="https://github.com/barracuda156">@barracuda156</a>, <a href="https://github.com/brooksambrose">@brooksambrose</a>, <a href="https://github.com/cpsievert">@cpsievert</a>, <a href="https://github.com/daattali">@daattali</a>, <a href="https://github.com/dipterix">@dipterix</a>, <a href="https://github.com/dkori">@dkori</a>, <a href="https://github.com/drag05">@drag05</a>, <a href="https://github.com/dvg-p4">@dvg-p4</a>, <a href="https://github.com/emillykkejensen">@emillykkejensen</a>, <a href="https://github.com/EricKrantz">@EricKrantz</a>, <a href="https://github.com/gadenbuie">@gadenbuie</a>, <a href="https://github.com/galachad">@galachad</a>, <a href="https://github.com/Gathuh">@Gathuh</a>, <a href="https://github.com/GShotwell">@GShotwell</a>, <a href="https://github.com/hadley">@hadley</a>, <a href="https://github.com/hcsun1">@hcsun1</a>, <a href="https://github.com/ifoxfoot">@ifoxfoot</a>, <a href="https://github.com/ismirsehregal">@ismirsehregal</a>, <a href="https://github.com/jcheng5">@jcheng5</a>, <a href="https://github.com/jessekps">@jessekps</a>, <a href="https://github.com/johnkarlen">@johnkarlen</a>, <a href="https://github.com/juwitt">@juwitt</a>, <a href="https://github.com/kathi-resan">@kathi-resan</a>, <a href="https://github.com/kennedymwavu">@kennedymwavu</a>, <a href="https://github.com/kevinushey">@kevinushey</a>, <a href="https://github.com/king-of-poppk">@king-of-poppk</a>, <a href="https://github.com/KRRLP-PL">@KRRLP-PL</a>, <a href="https://github.com/Liripo">@Liripo</a>, <a href="https://github.com/magarick">@magarick</a>, <a href="https://github.com/MalteSteinCytel">@MalteSteinCytel</a>, <a href="https://github.com/matt4815162342">@matt4815162342</a>, <a href="https://github.com/maxheld83">@maxheld83</a>, <a href="https://github.com/Mkranj">@Mkranj</a>, <a href="https://github.com/nolanjj">@nolanjj</a>, <a href="https://github.com/norahAlbarrak">@norahAlbarrak</a>, <a href="https://github.com/pawelru">@pawelru</a>, <a href="https://github.com/pbosetti">@pbosetti</a>, <a href="https://github.com/RaviSekha">@RaviSekha</a>, <a href="https://github.com/RosalynLP">@RosalynLP</a>, <a href="https://github.com/sanjmeh">@sanjmeh</a>, <a href="https://github.com/SarenT">@SarenT</a>, <a href="https://github.com/schloerke">@schloerke</a>, <a href="https://github.com/shahronak47">@shahronak47</a>, <a href="https://github.com/stefanedwards">@stefanedwards</a>, <a href="https://github.com/stla">@stla</a>, <a href="https://github.com/stuvet">@stuvet</a>, <a href="https://github.com/timbrock">@timbrock</a>, <a href="https://github.com/tomjemmett">@tomjemmett</a>, <a href="https://github.com/vivigirardin">@vivigirardin</a>, <a href="https://github.com/vnijs">@vnijs</a>, <a href="https://github.com/wch">@wch</a>, and <a href="https://github.com/Zhenglei-BCS">@Zhenglei-BCS</a>.</p>
</section><section id="htmltools-v0.5.6" class="level3"><h3 class="anchored" data-anchor-id="htmltools-v0.5.6">htmltools <a href="https://rstudio.github.io/htmltools/news/index.html#htmltools-056">v0.5.6</a>
</h3>
<p><a href="https://github.com/ccamara">@ccamara</a>, <a href="https://github.com/cpsievert">@cpsievert</a>, <a href="https://github.com/daattali">@daattali</a>, <a href="https://github.com/gadenbuie">@gadenbuie</a>, <a href="https://github.com/PaulC91">@PaulC91</a>, <a href="https://github.com/schloerke">@schloerke</a>, <a href="https://github.com/ShixiangWang">@ShixiangWang</a>, and <a href="https://github.com/warnes">@warnes</a>.</p>
</section><section id="flexdashboard-v0.6.2" class="level3"><h3 class="anchored" data-anchor-id="flexdashboard-v0.6.2">flexdashboard <a href="https://rstudio.github.io/flexdashboard/news/index.html#flexdashboard-062">v0.6.2</a>
</h3>
<p><a href="https://github.com/actuarial-lonewolf">@actuarial-lonewolf</a>, <a href="https://github.com/cpsievert">@cpsievert</a>, <a href="https://github.com/danielludolf">@danielludolf</a>, <a href="https://github.com/DataStrategist">@DataStrategist</a>, <a href="https://github.com/erm-eanway">@erm-eanway</a>, <a href="https://github.com/gadenbuie">@gadenbuie</a>, and <a href="https://github.com/nplatonov">@nplatonov</a>.</p>
</section><section id="leaflet-v2.1.3" class="level3"><h3 class="anchored" data-anchor-id="leaflet-v2.1.3">leaflet <a href="https://github.com/rstudio/leaflet/blob/main/NEWS#leaflet-213">v2.1.3</a>
</h3>
<p><a href="https://github.com/antoine4ucsd">@antoine4ucsd</a>, <a href="https://github.com/daattali">@daattali</a>, <a href="https://github.com/gadenbuie">@gadenbuie</a>, <a href="https://github.com/Jakka">@Jakka</a>, <a href="https://github.com/jaseeverett">@jaseeverett</a>, <a href="https://github.com/johnbaums">@johnbaums</a>, <a href="https://github.com/JosephStewart">@JosephStewart</a>, <a href="https://github.com/Landon-Getting">@Landon-Getting</a>, <a href="https://github.com/lime-n">@lime-n</a>, <a href="https://github.com/Rafnuss">@Rafnuss</a>, <a href="https://github.com/ramyareddy161">@ramyareddy161</a>, <a href="https://github.com/rhijmans">@rhijmans</a>, <a href="https://github.com/rl-utility-man">@rl-utility-man</a>, and <a href="https://github.com/warnes">@warnes</a>.</p>
</section><section id="leaflet.providers-v1.13.0" class="level3"><h3 class="anchored" data-anchor-id="leaflet.providers-v1.13.0">leaflet.providers <a href="https://rstudio.github.io/leaflet.providers/news/index.html#leafletproviders-1130">v1.13.0</a>
</h3>
<p><a href="https://github.com/gadenbuie">@gadenbuie</a>, <a href="https://github.com/jennybc">@jennybc</a>, <a href="https://github.com/joker234">@joker234</a>, <a href="https://github.com/kent37">@kent37</a>, <a href="https://github.com/mgzjys">@mgzjys</a>, and <a href="https://github.com/schloerke">@schloerke</a>.</p>
</section><section id="shinytest2-v0.3.0" class="level3"><h3 class="anchored" data-anchor-id="shinytest2-v0.3.0">shinytest2 <a href="https://rstudio.github.io/shinytest2/news/index.html#shinytest2-030">v0.3.0</a>
</h3>
<p><a href="https://github.com/andrewbaxter439">@andrewbaxter439</a>, <a href="https://github.com/arepsz">@arepsz</a>, <a href="https://github.com/AskPascal">@AskPascal</a>, <a href="https://github.com/cpsievert">@cpsievert</a>, <a href="https://github.com/epruesse">@epruesse</a>, <a href="https://github.com/gadenbuie">@gadenbuie</a>, <a href="https://github.com/gladkia">@gladkia</a>, <a href="https://github.com/hugo-pH">@hugo-pH</a>, <a href="https://github.com/matt-sd-watson">@matt-sd-watson</a>, <a href="https://github.com/maxheld83">@maxheld83</a>, <a href="https://github.com/parmsam-pfizer">@parmsam-pfizer</a>, <a href="https://github.com/PaulinCharliquart">@PaulinCharliquart</a>, <a href="https://github.com/schloerke">@schloerke</a>, <a href="https://github.com/stla">@stla</a>, and <a href="https://github.com/sybrohee">@sybrohee</a>.</p>
</section><section id="chromote-v0.1.2" class="level3"><h3 class="anchored" data-anchor-id="chromote-v0.1.2">chromote <a href="https://rstudio.github.io/chromote/news/index.html#chromote-012">v0.1.2</a>
</h3>
<p><a href="https://github.com/ashbythorpe">@ashbythorpe</a>, <a href="https://github.com/gadenbuie">@gadenbuie</a>, <a href="https://github.com/hadley">@hadley</a>, <a href="https://github.com/Ljupch0">@Ljupch0</a>, <a href="https://github.com/moladokun">@moladokun</a>, <a href="https://github.com/mrcaseb">@mrcaseb</a>, <a href="https://github.com/nick-youngblut">@nick-youngblut</a>, <a href="https://github.com/stla">@stla</a>, <a href="https://github.com/Waschoi">@Waschoi</a>, <a href="https://github.com/wch">@wch</a>, and <a href="https://github.com/yogat3ch">@yogat3ch</a>.</p>
</section><section id="webshot2-v0.1.1" class="level3"><h3 class="anchored" data-anchor-id="webshot2-v0.1.1">webshot2 <a href="https://rstudio.github.io/webshot2/news/index.html#webshot2-011">v0.1.1</a>
</h3>
<p><a href="https://github.com/aengels-git">@aengels-git</a>, <a href="https://github.com/brunomioto">@brunomioto</a>, <a href="https://github.com/cderv">@cderv</a>, <a href="https://github.com/charleswidnall">@charleswidnall</a>, <a href="https://github.com/egehankinik">@egehankinik</a>, <a href="https://github.com/gadenbuie">@gadenbuie</a>, <a href="https://github.com/iMissile">@iMissile</a>, <a href="https://github.com/kangjf1943">@kangjf1943</a>, <a href="https://github.com/lijinbio">@lijinbio</a>, <a href="https://github.com/Liripo">@Liripo</a>, <a href="https://github.com/Minh-AnhHuynh">@Minh-AnhHuynh</a>, <a href="https://github.com/PatrickRWright">@PatrickRWright</a>, <a href="https://github.com/RKonstantinR">@RKonstantinR</a>, <a href="https://github.com/schloerke">@schloerke</a>, <a href="https://github.com/trafficonese">@trafficonese</a>, and <a href="https://github.com/tvqt">@tvqt</a>.</p>
</section><section id="promises-v1.2.1" class="level3"><h3 class="anchored" data-anchor-id="promises-v1.2.1">promises <a href="https://rstudio.github.io/promises/news/index.html#promises-121">v1.2.1</a>
</h3>
<p><a href="https://github.com/bakaburg1">@bakaburg1</a>, <a href="https://github.com/bguillod">@bguillod</a>, <a href="https://github.com/can-taslicukur">@can-taslicukur</a>, <a href="https://github.com/CarlijnB">@CarlijnB</a>, <a href="https://github.com/chris31415926535">@chris31415926535</a>, <a href="https://github.com/cpsievert">@cpsievert</a>, <a href="https://github.com/CrossD">@CrossD</a>, <a href="https://github.com/gadenbuie">@gadenbuie</a>, <a href="https://github.com/gdeoli">@gdeoli</a>, <a href="https://github.com/HenrikBengtsson">@HenrikBengtsson</a>, <a href="https://github.com/hf778">@hf778</a>, <a href="https://github.com/jcheng5">@jcheng5</a>, <a href="https://github.com/jennybc">@jennybc</a>, <a href="https://github.com/king-of-poppk">@king-of-poppk</a>, <a href="https://github.com/lz100">@lz100</a>, <a href="https://github.com/maxheld83">@maxheld83</a>, <a href="https://github.com/mrkaye97">@mrkaye97</a>, <a href="https://github.com/pawelru">@pawelru</a>, <a href="https://github.com/schloerke">@schloerke</a>, <a href="https://github.com/tzakharko">@tzakharko</a>, and <a href="https://github.com/vspinu">@vspinu</a>.</p>
</section><section id="thematic-v0.1.3" class="level3"><h3 class="anchored" data-anchor-id="thematic-v0.1.3">thematic <a href="https://rstudio.github.io/thematic/news/index.html#thematic-013">v0.1.3</a>
</h3>
<p><a href="https://github.com/biomystery">@biomystery</a>, <a href="https://github.com/boram1024">@boram1024</a>, <a href="https://github.com/cboettig">@cboettig</a>, <a href="https://github.com/cbrnr">@cbrnr</a>, <a href="https://github.com/cpsievert">@cpsievert</a>, <a href="https://github.com/dmenne">@dmenne</a>, <a href="https://github.com/Fluke95">@Fluke95</a>, <a href="https://github.com/gadenbuie">@gadenbuie</a>, <a href="https://github.com/gtritchie">@gtritchie</a>, <a href="https://github.com/jennybc">@jennybc</a>, <a href="https://github.com/kbzsl">@kbzsl</a>, <a href="https://github.com/mvwestendorp">@mvwestendorp</a>, <a href="https://github.com/PaulC91">@PaulC91</a>, <a href="https://github.com/r2evans">@r2evans</a>, <a href="https://github.com/rishabhshah-92">@rishabhshah-92</a>, <a href="https://github.com/schloerke">@schloerke</a>, <a href="https://github.com/stephan-koenig">@stephan-koenig</a>, <a href="https://github.com/uhkeller">@uhkeller</a>, and <a href="https://github.com/yixuan">@yixuan</a>.</p>
</section><section id="bsicons-v0.1.1" class="level3"><h3 class="anchored" data-anchor-id="bsicons-v0.1.1">bsicons <a href="https://rstudio.github.io/bsicons/news/index.html#bsicons-011">v0.1.1</a>
</h3>
<p><a href="https://github.com/cpsievert">@cpsievert</a>, and <a href="https://github.com/sanjmeh">@sanjmeh</a>.</p>
<script>
const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
</script>

</section></section> ]]></description>
  <guid>https://shiny.posit.co/blog/posts/bslib-tooltips/</guid>
  <pubDate>Wed, 16 Aug 2023 04:00:00 GMT</pubDate>
  <media:content url="https://shiny.posit.co/blog/posts/bslib-tooltips/feature.png" medium="image" type="image/png" height="81" width="144"/>
</item>
<item>
  <title>Shiny for Python 0.5.0</title>
  <dc:creator>Joe Cheng</dc:creator>
  <link>https://shiny.posit.co/blog/posts/shiny-python-0.5.0/</link>
  <description><![CDATA[ 
<!-- Google Tag Manager (noscript) -->
 <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KHBDBW7" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<style type="text/css">
  #quarto-content>* {
  padding-top: 0px;
  }
</style>


        <div class="column-body-outset blog-image-container pb-5">
      <img src="https://shiny.posit.co/blog/posts/shiny-python-0.5.0/shiny-050.png" alt="Shiny for Python 0.5.0" style="width: 100%; height: auto;">
    </div>
    


<p>Another Shiny for Python release has arrived! In fact, we released 0.5.0 and then quickly followed it with 0.5.1, which fixes <a href="https://github.com/posit-dev/py-shiny/issues/666">a sidebar bug</a> we introduced in 0.5.0. Sorry about that!</p>
<p>You can upgrade to Shiny for Python 0.5.1 by running <code>pip install -U shiny</code> or <code>conda install -c conda-forge shiny</code>.</p>
<section id="style-tweaks" class="level2 page-columns page-full">
<h2 data-anchor-id="style-tweaks">Style tweaks</h2>
<p>We’ve tweaked the default Shiny CSS theme to make your apps look cleaner and more modern. In the screenshots below, you’ll notice differences in the slider and button, as well as shifts in the default typeface, font weights, and colors.</p>
<p>(The old theme is on the left, and the new theme is on the right.)</p>
<style>
.sshot-caption {
  display: none;
  margin: 1em 0;
  font-size: 1.2em;
}
#after-caption {
  text-align: right;
}
#theme-comparison {
  position: relative;
  padding-bottom: 70%;
  margin-bottom: 3em;
}
#theme-before {
  position: absolute;
  top: 0;
  left: 0;
  width: 80%;
  height: auto;
}
#theme-after {
  position: absolute;
  bottom: 0;
  right: 0;
  width: 80%;
  height: auto;
}
</style>
<div id="before-caption" class="sshot-caption">
(old theme)
</div>
<div id="theme-comparison" class="column-page">
<p><img src="https://shiny.posit.co/blog/posts/shiny-python-0.5.0/theme-before.png" id="theme-before" class="border shadow-lg img-fluid" alt="App with old sidebar"> <img src="https://shiny.posit.co/blog/posts/shiny-python-0.5.0/theme-after.png" id="theme-after" class="border shadow-lg img-fluid" alt="App with old sidebar"></p>
</div>
<div id="after-caption" class="sshot-caption">
(new theme)
</div>
<p>We’ve found that tick marks are usually not that helpful on slider inputs, since you get instant feedback above the handle as you drag. If you want them back, you can pass <code>ticks=True</code> to <a href="https://shiny.posit.co/py/api/ui.input_slider.html"><code>input_slider()</code></a>.</p>
<p>These theme changes will be available to Shiny for R as well, via a new <a href="https://rstudio.github.io/bslib/">bslib</a> CRAN release that should drop this week.</p>
</section>
<section id="data-table-filtering" class="level2">
<h2 data-anchor-id="data-table-filtering">Data table filtering</h2>
<p>In case you missed it, <a href="../shiny-python-0.4.0/">last month we introduced</a> an interactive data table output that’s designed to easily scale to tens of thousands of rows. This month, we’ve added the ability to let viewers filter the data table by column.</p>
<div class="quarto-video"><video id="video_shortcode_videojs_video1" class="video-js vjs-default-skin vjs-fluid" controls="" preload="auto" data-setup="{}" title="Filtering a data table"><source src="data-grid-filter.mp4"></video></div>
<p>Currently, the filter feature must be enabled by passing <code>filters=True</code> when creating your <code>render.DataGrid</code> or <code>render.DataTable</code> object:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@output</span></span>
<span id="cb1-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@render.data_frame</span></span>
<span id="cb1-3">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> mygrid():</span>
<span id="cb1-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> render.DataGrid(my_df, filters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
<ul>
<li><a href="https://shinylive.io/py/examples/#data-frame-grid">Try it out with Shinylive</a></li>
<li><a href="https://shiny.posit.co/py/api/render.DataGrid.html">API documentation</a></li>
</ul>
</section>
<section id="tooltips" class="level2">
<h2 data-anchor-id="tooltips">Tooltips</h2>
<p>We’ve added a new tooltip feature, available in <code>shiny.experimental</code> namespace. They’re useful for providing additional information about an input or output, without taking up any extra space in your app.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shiny <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ui</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> shiny.experimental <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> x</span>
<span id="cb2-3"></span>
<span id="cb2-4">x.ui.tooltip(</span>
<span id="cb2-5">    ui.input_slider(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>),</span>
<span id="cb2-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A value to be doubled"</span></span>
<span id="cb2-7">)</span></code></pre></div>
<p><img src="https://shiny.posit.co/blog/posts/shiny-python-0.5.0/tooltip.png" class="img-fluid" alt="A mouse moving over a slider input, causing a tooltip to appear" width="540"></p>
<ul>
<li><a href="https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxM6lACZw6EgK4cAOhD4ChrTtwxwAHqjl9KZKABsmUFkz2rVaVAH0lTALxMlWKAHM4jmmZK0gAUqkzhNhieZMTEZmQcqKEQEakeHBhcqApkjixmHLJ0oZDK+ExlAHJlEgAMEgCMtfVMAEy1AJR4YWnhZSJMAG7mCnBMMUwARmPSxAqTZnDSNT3hXavpGHNk2bkUermDcpNQCTAlZAdl6xAddhCqsjSsckfFWTkS27sSLHAsLA4pA6iA2AAFvjlwVIIEUMPsyBsnuMDsEQRtUlIyAo6CkaGUIAAqVq8awgD5kDAQNFMQltAC+ZXu9nQblE6GCDmcHF+rzkdwgYHpAF0gA">Try it out with Shinylive</a></li>
<li><a href="https://shiny.posit.co/py/api/ExTooltip.html">API documentation</a></li>
</ul>
<p>Tooltips can be combined with help icons, which are available in the <a href="https://pypi.org/project/faicons/"><code>faicons</code></a> package. You can add tooltip help icons in input labels by passing a list to the <code>label</code> argument of <code>input_*()</code> functions:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> shiny.experimental <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> x</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> faicons <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> icon_svg</span>
<span id="cb3-3"></span>
<span id="cb3-4">ui.input_text(</span>
<span id="cb3-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>,</span>
<span id="cb3-6">    label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb3-7">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Name "</span>,</span>
<span id="cb3-8">        x.ui.tooltip(</span>
<span id="cb3-9">            icon_svg(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"circle-info"</span>, fill_opacity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>),</span>
<span id="cb3-10">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Your full name"</span></span>
<span id="cb3-11">        )</span>
<span id="cb3-12">    ],</span>
<span id="cb3-13">)</span></code></pre></div>
<p><img src="https://shiny.posit.co/blog/posts/shiny-python-0.5.0/tooltip-help.png" class="img-fluid" alt="A mouse moving over a help icon in an input label, causing a tooltip to appear" width="306">]</p>
<ul>
<li><a href="https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EPgKGtO3DHAAeqOHT6UyUADZMoLJurn1GTGlA4kIphYOF3SAfRYA3AOZy5aVDdpJgBeKQ4sKG84NxoDaQATAAo5JjTwjC5USTI3CnUyFIh0kqYZSFg4crxU0rSDKAAjOAMQ4Fq6kvKAOUqy-A7OtPUMaQwyYmIDMg5UJNcIDx8Uog46QgM4AFouGmJq6w4DAzdiVChCDjJsEIAGDABWAEoJcoBNYkk6a0ljpmh4OUXoMSgBdGrFdJPOTQiD+dChUToJIBIIcCTdUhwJ5gAC+oKAA">Try it out with Shinylive</a></li>
</ul>
</section>
<section id="talk-python-podcast" class="level2">
<h2 data-anchor-id="talk-python-podcast">Talk Python podcast</h2>
<p>I had a great time talking with <a href="https://mkennedy.codes/">Michael Kennedy</a> on the <a href="https://talkpython.fm/episodes/show/424/shiny-for-python">Talk Python to Me podcast</a> about Shiny for Python. We covered a lot of ground, including who Shiny is designed for, how Shiny differs from Jupyter notebooks, and how it compares to other Python web frameworks. <a href="https://talkpython.fm/episodes/show/424/shiny-for-python">Check it out!</a></p>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/YN0hnAmid7A" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<hr>
<p>That’s it for today! As always, if you have any questions or feedback, please <a href="https://discord.gg/yMGCamUMnS">join us on Discord</a> or <a href="https://github.com/posit-dev/py-shiny/issues/new">open an issue on GitHub</a>. And if you’re enjoying Shiny for Python, please consider <a href="https://github.com/posit-dev/py-shiny">starring us on GitHub</a> to show your support!</p>


</section>

 ]]></description>
  <guid>https://shiny.posit.co/blog/posts/shiny-python-0.5.0/</guid>
  <pubDate>Wed, 09 Aug 2023 04:00:00 GMT</pubDate>
  <media:content url="https://shiny.posit.co/blog/posts/shiny-python-0.5.0/shiny-050.png" medium="image" type="image/png" height="76" width="144"/>
</item>
<item>
  <title>Shiny for Python 0.4.0</title>
  <dc:creator>Winston Chang</dc:creator>
  <link>https://shiny.posit.co/blog/posts/shiny-python-0.4.0/</link>
  <description><![CDATA[ 
<!-- Google Tag Manager (noscript) -->
 <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KHBDBW7" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<style type="text/css">
  #quarto-content>* {
  padding-top: 0px;
  }
</style>


        <div class="column-body-outset blog-image-container pb-5">
      <img src="https://shiny.posit.co/blog/posts/shiny-python-0.4.0/shiny-040.png" alt="Shiny for Python 0.4.0" style="width: 100%; height: auto;">
    </div>
    


<p>Hello, Shiny for Python users. We have some great new features for you in the latest release!</p>
<section id="introducing-data-grid-data-table" class="level2">
<h2 data-anchor-id="introducing-data-grid-data-table">Introducing data grid / data table</h2>
<p>We’ve added a new, fast-scrolling data table output.</p>
<div class="quarto-video"><video id="video_shortcode_videojs_video1" class="video-js vjs-default-skin vjs-fluid" controls="" preload="auto" data-setup="{}" title="Data table"><source src="data-grid.mp4"></video></div>
<p>It can easily handle tables with tens of thousands of rows, and supports sorting by columns – just click on the column header to sort.</p>
<p>In addition to the grid-style appearance, the data can be displayed with a more traditional table-like appearance.</p>
<p><img src="https://shiny.posit.co/blog/posts/shiny-python-0.4.0/data-table.png" class="img-fluid" alt="Data table with more traditional appearance"></p>
<p>These tables aren’t just for displaying data – they can also allow you to select rows, use that selection as an input, as shown here:</p>
<div class="quarto-video"><video id="video_shortcode_videojs_video2" class="video-js vjs-default-skin vjs-fluid" controls="" preload="auto" data-setup="{}" title="Selecting rows in a data table"><source src="data-grid-select.mp4"></video></div>
<p>To use the new tables, put this in your application’s UI:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">  ui.output_data_frame(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mygrid"</span>)</span></code></pre></div>
<p>And in your server function, use <code>@render.data_frame</code> and give it a function that returns a <code>render.DataGrid()</code>; in turn, that function a Pandas data frame.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@output</span></span>
<span id="cb2-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@render.data_frame</span></span>
<span id="cb2-3">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> mygrid():</span>
<span id="cb2-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> render.DataGrid(my_df)</span></code></pre></div>
<p>To get the more traditional table-like styling, return a <code>render.DataTable()</code> instead.</p>
<ul>
<li><a href="https://shinylive.io/py/examples/#data-frame-grid">Try it out with Shinylive</a></li>
<li><a href="https://shiny.posit.co/py/api/render.data_frame.html">API documentation</a></li>
</ul>
</section>
<section id="better-looking-sidebars" class="level2">
<h2 data-anchor-id="better-looking-sidebars">Better-looking sidebars</h2>
<p>In addition to the new tables, we’ve also improved the look of the basic sidebar. Here’s what they used to look like:</p>
<p><img src="https://shiny.posit.co/blog/posts/shiny-python-0.4.0/sidebar-old.png" class="img-fluid" alt="App with old sidebar"></p>
<p>Previously, the sidebar was only as tall as the content in the sidebar, but now they span the full height of the application. Here’s what they look like now:</p>
<p><img src="https://shiny.posit.co/blog/posts/shiny-python-0.4.0/sidebar-new.png" class="img-fluid" alt="App with new sidebar"></p>
<p>You won’t have to change any code to get the new look – your existing code will just work!</p>
<p><a href="https://shinylive.io/py/examples/#cpu-info">Check out a live example here.</a></p>
<p>Enjoy!</p>


</section>

 ]]></description>
  <guid>https://shiny.posit.co/blog/posts/shiny-python-0.4.0/</guid>
  <pubDate>Wed, 28 Jun 2023 04:00:00 GMT</pubDate>
  <media:content url="https://shiny.posit.co/blog/posts/shiny-python-0.4.0/shiny-040.png" medium="image" type="image/png" height="76" width="144"/>
</item>
<item>
  <title>Towards easy, delightful, and customizable dashboards in Shiny for R with {bslib}</title>
  <dc:creator>Carson Sievert</dc:creator>
  <link>https://shiny.posit.co/blog/posts/bslib-dashboards/</link>
  <description><![CDATA[ <!-- Google Tag Manager (noscript) --><noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KHBDBW7" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<style type="text/css">
  #quarto-content>* {
  padding-top: 0px;
  }
</style>
<div class="column-body-outset blog-image-container pb-5">
      <img src="https://shiny.posit.co/blog/posts/bslib-dashboards/feature.png" style="width: 100%; height: auto;">
</div>
    


<style>
.quarto-video > div {
  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
}
</style>
<p>I’m excited to share that the latest release of the <a href="https://rstudio.github.io/bslib"><code>{bslib}</code> R package</a> makes a significant step towards being our recommended way to create Shiny dashboards. Grab it now from CRAN with:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/utils/install.packages.html">install.packages</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bslib"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<p>This release includes a major overhaul of our documentation, including new and updated articles and better organization of content. The <a href="https://rstudio.github.io/bslib/">bslib site</a> nows groups these articles by whether you’re just get started, or want to dive deeper into theming, UI components, or layouts. If you’re primarily interested in making dashboards, make sure to visit the <a href="https://rstudio.github.io/bslib/articles/dashboards.html">Getting Started with dashboards</a> article.</p>
<p>In this blog post, I’ll discuss some of the new features that contribute to the dashboarding experience, as well as why we’ve chosen <a href="https://rstudio.github.io/bslib/">bslib</a> as the home for this work. You can run the examples in this post yourself (without having to install anything!) in <a href="https://posit.cloud/content/6073069">this Posit Cloud project</a>.</p>
<section id="hello-dashboards" class="level3 page-columns page-full"><h3 class="anchored" data-anchor-id="hello-dashboards">Hello dashboards</h3>
<p><a href="https://rstudio.github.io/bslib/">bslib</a>’s <a href="https://shiny.posit.co/blog/posts/announcing-new-r-shiny-ui-components/">last release</a> first introduced some important dashboard components (e.g., cards, value boxes, etc), but this release adds other essential pieces such as sidebar layouts, filling layouts, new column-wise layouts, accordions, and more. <a href="https://rstudio.github.io/bslib/">bslib</a>’s new <a href="https://rstudio.github.io/bslib/articles/dashboards.html">Getting Started with dashboards</a> article introduces all these pieces by first starting with a basic app and working towards some non-trivial dashboards, like the one below:</p>
<div class="column-screen bg-blue py-5 mt-4 mb-5 page-columns page-full">
<div class="column-body-outset">
<div class="quarto-video"><video id="video_shortcode_videojs_video1" class="video-js vjs-default-skin vjs-fluid" controls="" preload="auto" data-setup="{}" title="A Shiny dashboard for exploring the palmerpenguins dataset built using bslib"><source src="dashboard.mp4"></video></div>
<div class="text-center">
<p><a class="btn btn-outline-primary" href="https://posit.cloud/content/6073069" target="_blank" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="01-hello-dashboards.R">  Try on Posit Cloud </a> <a class="btn btn-outline-secondary ms-1 px-3" href="https://gist.github.com/gadenbuie/74ba1d0a4d597aba20caf1b6bf41922f#file-01-hello-dashboards-r" target="_blank" data-bs-toggle="tooltip" data-bs-placement="bottom" title="View Source Code">  <span class="visually-hidden">Source</span> </a></p>
</div>
</div>
</div>
</section><section id="why-bslib-themable-dashboards" class="level3 page-columns page-full"><h3 class="anchored" data-anchor-id="why-bslib-themable-dashboards">Why bslib? Themable dashboards</h3>
<p>Since we <a href="https://posit.co/resources/videos/styling-shiny-apps-with-sass-and-bootstrap-4/">announced it at rstudio::conf(2020)</a><sup>1</sup>, bslib has made it easy to theme virtually any Shiny app, R Markdown document, or R project that utilizes Bootstrap. One notable and unfortunate exception has been <a href="http://rstudio.github.io/shinydashboard/">shinydashboard</a>, arguably the most popular UI extension for Shiny apps.</p>
<p>While projects like <a href="https://rinterface.github.io/bs4Dash/index.html">bs4Dash</a> and <a href="https://github.com/dreamRs/fresh">fresh</a> have helped provide way to upgrade <a href="http://rstudio.github.io/shinydashboard/">shinydashboard</a>’s Bootstrap/AdminLTE dependency and theme dashboards, AdminLTE has kept shinydashboard from keeping up with modern versions of Bootstrap (now on version 5).</p>
<p>Rather than rewriting <a href="http://rstudio.github.io/shinydashboard/">shinydashboard</a>, we’re choosing to expand the footprint of bslib. It now provides themable and modern Bootstrap components that are perfect for dashboard apps, meaning that you can expect <a href="https://rstudio.github.io/bslib/articles/theming.html#real-time">real time themes</a>, <a href="https://rstudio.github.io/bslib/articles/theming.html#bootswatch">Bootswatch themes</a>, and <a href="https://rstudio.github.io/bslib/articles/theming.html#main-colors">custom themes</a> to “just work” like they do for most other Shiny apps and R Markdown docs powered by <a href="https://rstudio.github.io/bslib/">bslib</a>.</p>
<div class="column-screen bg-blue py-5 mt-4 mb-5 page-columns page-full">
<div class="column-body-outset">
<div class="quarto-video"><video id="video_shortcode_videojs_video2" class="video-js vjs-default-skin vjs-fluid" controls="" preload="auto" data-setup="{}" title="Real-time theming a Shiny dashboard with bslib"><source src="dashboard-real-time.mp4"></video></div>
<div class="text-center">
<p><a class="btn btn-outline-primary" href="https://posit.cloud/content/6073069" target="_blank" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="02-themable-dashboards.R">  Try on Posit Cloud </a> <a class="btn btn-outline-secondary ms-1 px-3" href="https://gist.github.com/gadenbuie/74ba1d0a4d597aba20caf1b6bf41922f#file-02-themable-dashboards-r" target="_blank" data-bs-toggle="tooltip" data-bs-placement="bottom" title="View Source Code">  <span class="visually-hidden">Source</span> </a></p>
</div>
</div>
</div>
</section><section id="layout-tooling" class="level3 page-columns page-full"><h3 class="anchored" data-anchor-id="layout-tooling">Layout tooling</h3>
<p>This release includes two big improvements to layouts. First, <a href="https://rstudio.github.io/bslib/">bslib</a> has been re-worked to fully embrace <a href="https://rstudio.github.io/bslib/articles/dashboards.html#scrolling-vs-filling">filling layouts</a> by default. This means that things like <code>page_sidebar()</code>, <code>page_navbar()</code>, and <code>page_fillable()</code> all encourage their children to fill the window (by default), and components like <code>card()</code> also encourage their contents to fill when made <a href="https://rstudio.github.io/bslib/articles/cards.html#filling-outputs">full-screen</a>. Keep in mind, filling layouts aren’t always the best choice for every situation, but you can always <a href="https://rstudio.github.io/bslib/articles/dashboards.html#scrolling-vs-filling">specify fixed sizes, restrict resizing limits, or opt-out of filling layout</a>.</p>
<p>Second, we’ve added <code>layout_columns()</code>, a new approach to <a href="https://rstudio.github.io/bslib/articles/dashboards.html#multi-column">column-wise layout</a>. Compared to <code><a href="https://rdrr.io/pkg/shiny/man/fluidPage.html">shiny::fluidRow()</a></code>/<code><a href="https://rdrr.io/pkg/shiny/man/column.html">shiny::column()</a></code>, this newer interface to Bootstrap’s 12-column grid layout system is much more expressive and is compatible with filling layouts. For example, in just one function call, you can express a 12-column layout with multiple rows (and control the row heights), define negative space, and even responsively change the layout depending on screen size with a new <code>breakpoints()</code> helper function.</p>
<div class="column-screen bg-blue py-5 mt-4 mb-5 page-columns page-full">
<div class="column-body-outset">
<div class="quarto-video"><video id="video_shortcode_videojs_video3" class="video-js vjs-default-skin vjs-fluid" controls="" preload="auto" data-setup="{}" title="A Shiny dashboard with a responsive, filling, layout"><source src="layout-columns.mp4"></video></div>
<div class="text-center">
<p><a class="btn btn-outline-primary" href="https://posit.cloud/content/6073069" target="_blank" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="03-layout-tooling.R">  Try on Posit Cloud </a> <a class="btn btn-outline-secondary ms-1 px-3" href="https://gist.github.com/gadenbuie/74ba1d0a4d597aba20caf1b6bf41922f#file-03-layout-tooling-r" target="_blank" data-bs-toggle="tooltip" data-bs-placement="bottom" title="View Source Code">  <span class="visually-hidden">Source</span> </a></p>
</div>
</div>
</div>
</section><section id="card-level-sidebars" class="level3 page-columns page-full"><h3 class="anchored" data-anchor-id="card-level-sidebars">Card-level sidebars</h3>
<p>In addition to page-level sidebars (via <code>page_sidebar()</code> and <code>page_navbar()</code>), <a href="https://rstudio.github.io/bslib/">bslib</a> also provides <a href="https://rstudio.github.io/bslib/articles/dashboards.html#cards-with-sidebars">card-level sidebars</a>. This provides a convenient way to create keep visual proximity between the sidebar (input) controls and outputs that they effect, and as a result, helps users to better navigate more complex apps. This can be done through the <code>layout_sidebar()</code> function, which can either render standalone or inside of a <code>card()</code> (making it easy to add full-screen expansion, a header, footer, etc).</p>
<div class="column-screen bg-blue py-5 mt-4 mb-5 page-columns page-full">
<div class="column-body-outset">
<div class="quarto-video"><video id="video_shortcode_videojs_video4" class="video-js vjs-default-skin vjs-fluid" controls="" preload="auto" data-setup="{}" title="A couple examples of putting a sidebar inside a card"><source src="layout-sidebar.mp4"></video></div>
<div class="text-center">
<p><a class="btn btn-outline-primary" href="https://posit.cloud/content/6073069" target="_blank" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="04-card-level-sidebars.R">  Try on Posit Cloud </a> <a class="btn btn-outline-secondary ms-1 px-3" href="https://gist.github.com/gadenbuie/74ba1d0a4d597aba20caf1b6bf41922f#file-04-card-level-sidebars-r" target="_blank" data-bs-toggle="tooltip" data-bs-placement="bottom" title="View Source Code">  <span class="visually-hidden">Source</span> </a></p>
</div>
</div>
</div>
</section><section id="accordions" class="level3 page-columns page-full"><h3 class="anchored" data-anchor-id="accordions">Accordions</h3>
<p>This release also includes a new <a href="https://rstudio.github.io/bslib/reference/accordion.html">accordion</a> component, which is a great way to save space by hiding content behind a collapsible header. Accordions can be useful in a variety of apps, but in the context of dashboards, they’re quite useful for grouping numerous related inputs together.</p>
<div class="column-screen bg-blue py-5 mt-4 mb-5 page-columns page-full">
<div class="column-body-outset">
<div class="quarto-video"><video id="video_shortcode_videojs_video5" class="video-js vjs-default-skin vjs-fluid" controls="" preload="auto" data-setup="{}" title="Using an accordion inside a sidebar to group multiple input controls together"><source src="accordion-sidebar.mp4"></video></div>
<div class="text-center">
<p><a class="btn btn-outline-primary" href="https://posit.cloud/content/6073069" target="_blank" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="05-accordions.R">  Try on Posit Cloud </a> <a class="btn btn-outline-secondary ms-1 px-3" href="https://gist.github.com/gadenbuie/74ba1d0a4d597aba20caf1b6bf41922f#file-05-accordions-r" target="_blank" data-bs-toggle="tooltip" data-bs-placement="bottom" title="View Source Code">  <span class="visually-hidden">Source</span> </a></p>
</div>
</div>
</div>
</section><section id="closing-thoughts" class="level3"><h3 class="anchored" data-anchor-id="closing-thoughts">Closing thoughts</h3>
<p>With this release, we now view <a href="https://rstudio.github.io/bslib/">bslib</a> as a viable alternative to <a href="http://rstudio.github.io/shinydashboard/">shinydashboard</a>, and plan on making more improvements geared towards making dashboard creation an even more delightful experience. Compared to <a href="http://rstudio.github.io/shinydashboard/">shinydashboard</a>, <a href="https://rstudio.github.io/bslib/">bslib</a> offers:</p>
<ul>
<li><p><strong>A fresh take on components</strong> which build on the latest <a href="https://getbootstrap.com/">Bootstrap</a>, add new features (e.g., full screen expansion, sidebars, etc), and are more customizable.</p></li>
<li><p><strong>More theming options</strong> including <a href="https://rstudio.github.io/bslib/articles/theming.html#real-time">real-time theming</a>, <a href="https://rstudio.github.io/bslib/articles/theming.html#bootswatch">bootswatch themes</a>, <a href="https://rstudio.github.io/bslib/articles/theming.html#main-colors">main colors / fonts</a>, and <a href="https://rstudio.github.io/bslib/articles/theming.html#theming-variables">more</a>.</p></li>
<li><p><strong>Better layout tools</strong>, like filling and column-wise layouts. You may have noticed that it wasn’t easy to get a row of cards generated by <code>shinydashboard::box()</code> to have a common height, but <code>layout_columns()</code> and <code>layout_column_wrap()</code> do this automatically.</p></li>
<li><p><strong>Portability</strong>: <a href="https://rstudio.github.io/bslib/">bslib</a> is <a href="https://rstudio.github.io/bslib/articles/any-project.html">compatible with most Bootstrap projects</a>, and can be used to create dashboards, websites, R Markdown documents, and more.</p></li>
</ul>
<p>That said, <a href="https://rstudio.github.io/bslib/">bslib</a> is still a work in progress, and we’re still working on making it a “complete” dashboarding solution. If you find yourself missing certain aspects of <a href="http://rstudio.github.io/shinydashboard/">shinydashboard</a>, or generally have ideas things we should add, please let us know by <a href="https://github.com/rstudio/bslib/issues/new?assignees=&amp;labels=&amp;projects=&amp;template=feature_request.md">filing an issue</a> and/or <a href="https://github.com/rstudio/bslib/discussions/618">contributing to this discussion</a>.</p>
<script>
const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
</script>

</section><div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>
<ol>
<li id="fn1"><p>Joe Cheng’s presentation demoed new theming features in the <code>{bootstraplib}</code> package, which evolved into the package known as <a href="https://rstudio.github.io/bslib/">bslib</a> and was released to CRAN in 2021.↩︎</p></li>
</ol></section></div> ]]></description>
  <guid>https://shiny.posit.co/blog/posts/bslib-dashboards/</guid>
  <pubDate>Wed, 07 Jun 2023 04:00:00 GMT</pubDate>
  <media:content url="https://shiny.posit.co/blog/posts/bslib-dashboards/feature.png" medium="image" type="image/png" height="75" width="144"/>
</item>
<item>
  <title>AI chat apps with Shiny for Python</title>
  <dc:creator>Winston Chang</dc:creator>
  <link>https://shiny.posit.co/blog/posts/shiny-python-chatstream/</link>
  <description><![CDATA[ 
<!-- Google Tag Manager (noscript) -->
 <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KHBDBW7" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<style type="text/css">
  #quarto-content>* {
  padding-top: 0px;
  }
</style>


        <div class="column-body-outset blog-image-container pb-5">
      <img src="https://shiny.posit.co/blog/posts/shiny-python-chatstream/shiny-ai-chatbot.jpg" alt="an image with lines representing ai computing lie behind a chatbox icon" style="width: 100%; height: auto;">
    </div>
    


<p>In the short time since they’ve become publicly available, chat interfaces for Large Language Models (LLMs) have become incredibly popular. With Shiny for Python, you can easily create your own chat application with just a few lines of code. If you’ve wanted to make a web application for interacting with AI, you can do it with Shiny for Python.</p>
<p>Here’s a very basic chat app that uses the OpenAI API:</p>
<div class="column-screen bg-blue py-5 mt-4 mb-5 page-columns page-full">
<div class="column-body-outset">
<div class="quarto-video"><video id="video_shortcode_videojs_video1" class="video-js vjs-default-skin vjs-fluid" controls="" preload="auto" data-setup="{}" title="A basic AI chat app"><source src="basic.mp4"></video></div>
</div>
</div>
<p>It makes use of a <a href="https://shiny.posit.co/py/docs/workflow-modules.html">Shiny module</a> in a Python package called <a href="https://github.com/wch/chatstream">chatstream</a>. All you need is one call to <code>chatstream.chat_ui()</code> and one call to <code>chatstream.chat_server()</code>, and to give them the same ID. Here’s the code for <a href="https://github.com/wch/chatstream/tree/main/examples/basic">that app</a>:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> shiny <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> App, Inputs, Outputs, Session, ui</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> chatstream</span>
<span id="cb1-3"></span>
<span id="cb1-4">app_ui <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ui.page_fixed(</span>
<span id="cb1-5">    chatstream.chat_ui(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mychat"</span>),</span>
<span id="cb1-6">)</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> server(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>: Inputs, output: Outputs, session: Session):</span>
<span id="cb1-9">    chatstream.chat_server(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mychat"</span>)</span>
<span id="cb1-10"></span>
<span id="cb1-11">app <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> App(app_ui, server)</span></code></pre></div>
<p>The user types in some text and clicks the button, which tells the server side of the Shiny app to send a request to the <a href="https://platform.openai.com/docs/api-reference">OpenAI API</a>. The OpenAI API endpoint sends a streaming response back, and the server side of the Shiny app then sends the result to the client (browser) side of the Shiny app.</p>
<p>Using an LLM to generate text takes some time, and showing the streaming response as it comes in provides for a much better user experience than having it sit there for several seconds before the response shows up all at once.</p>
<p>The live streaming update is possible because the Shiny’s reactive engine is built using Python’s asyncio library. The streaming HTTP response from the OpenAI server is wrapped into an async generator, which, on each iteration, yields a word of the response.</p>
<p>Because the chat component is in a Shiny module, you can easily add multiple modules and even have them talk to each other. Here are two of them playing 20 questions:</p>
<div class="column-screen bg-blue py-5 mt-4 mb-5 page-columns page-full">
<div class="column-body-outset">
<div class="quarto-video"><video id="video_shortcode_videojs_video2" class="video-js vjs-default-skin vjs-fluid" controls="" preload="auto" data-setup="{}" title="Two chatbots play 20 questions"><source src="20-questions.mp4"></video></div>
</div>
</div>
<p>The chat app is built using the <a href="https://github.com/wch/chatstream">chatstream</a> library. At the moment, chatstream is not on PyPI, but you can install it directly from GitHub. Please keep in mind that chatstream is in the very early stages and may have significant API changes in the future as we learn more about which abstractions are the right ones to use.</p>
<p>Now, the chat app above is neat, but it doesn’t do anything more than the standard web chat inferface provided by OpenAI. We can do something more interesting, though, by using Python to things that Python is good at, and combining that with the LLM for the things that the LLM is good at.</p>
<section id="using-shiny-to-combine-the-power-of-a-programming-language-llm-and-you" class="level3 page-columns page-full">
<h3 data-anchor-id="using-shiny-to-combine-the-power-of-a-programming-language-llm-and-you">Using Shiny to combine the power of a programming language, LLM, and you</h3>
<p>You probably already know that LLMs are extremely useful for generating text and computer code, but they also have another often-overlooked strength: you can feed unstructured data into an LLM and ask it to produce structured data, which you can then do something useful with.</p>
<p>On the flip side, the LLM is not a panacea. One of the drawbacks of LLMs is that the output is not completely predictable – even in the best of circumstances, a human is often needed to verify that the LLM did what we wanted it to do.</p>
<p>An interactive web application can combine the strengths of a programming language, an LLM, and a human. I’ll demonstrate with a Shiny application. If you’ve ever looked for recipes on the internet, you know that many recipe web pages consist mostly of filler material, with a small amount of actual recipe information inside. We can use Shiny to build an app that works this way:</p>
<ul>
<li>The programming language (Python) fetches a web page and extracts text from it.</li>
<li>The LLM converts the unstructured data (the text of the web page) to structured data.</li>
<li>The human verifies that the LLM did the right thing, and if so, tells the app to save the recipe.</li>
</ul>
<p>With Shiny, we can build an application that scrapes text from a recipe website using the BeautifulSoup library, then feeds the (unstructured) text to the OpenAI API along with a prompt that describes the structured data that we want. The prompt tells it to generate a JSON representation of the recipe, and provides an example of what the output should look like.</p>
<div class="column-screen bg-blue py-5 mt-4 mb-5 page-columns page-full">
<div class="column-body-outset">
<div class="quarto-video"><video id="video_shortcode_videojs_video3" class="video-js vjs-default-skin vjs-fluid" controls="" preload="auto" data-setup="{}" title="Scraping recipes from a website to JSON"><source src="recipes.mp4"></video></div>
</div>
</div>
<p>In my experience, the LLM almost always does a good job producing JSON, but it is not 100% perfect. This is where the human comes in. You can take a look at the output, decide if it looks correct, and if so, choose to do something with the data.</p>
<p>You can see the code for this app <a href="https://github.com/wch/chatstream/tree/main/examples/recipes">here</a>.</p>
<p>In the next version of this app, we’ll process the data while it’s streaming to produce HTML that displays in a card-like format so that it’s easier to read, and at the end, we’ll add a button that the user can click on to save it to a database.</p>
<div class="column-screen bg-blue py-5 mt-4 mb-5 page-columns page-full">
<div class="column-body-outset">
<div class="quarto-video"><video id="video_shortcode_videojs_video4" class="video-js vjs-default-skin vjs-fluid" controls="" preload="auto" data-setup="{}" title="Scraping recipes with card output and an add button"><source src="recipes-card.mp4"></video></div>
</div>
</div>
<p>The code for this app is <a href="https://github.com/wch/chatstream/tree/main/examples/recipes_card">here</a>.</p>
<p>Of course, this technique isn’t limited to recipes – you could do something similar with user product reviews, for example.</p>
<p>If you’ve wanted to build an interactive AI chat app using Python, Shiny and chatstream can help make it happen. Take a look at the <a href="https://github.com/wch/chatstream">source</a> and feel free to adapt it to your own use case.</p>
<p>In a future blog post, I’ll show how to use Shiny build an app that lets you ask questions about a document or set of documents. Stay tuned!</p>
<style>
    .quarto-video {
        margin-bottom: 0px;
    }
</style>


</section>

 ]]></description>
  <guid>https://shiny.posit.co/blog/posts/shiny-python-chatstream/</guid>
  <pubDate>Fri, 12 May 2023 04:00:00 GMT</pubDate>
  <media:content url="https://shiny.posit.co/blog/posts/shiny-python-chatstream/shiny-ai-chatbot.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Shiny on Hugging Face</title>
  <dc:creator>Gordon Shotwell</dc:creator>
  <link>https://shiny.posit.co/blog/posts/shiny-on-hugging-face/</link>
  <description><![CDATA[ 
<!-- Google Tag Manager (noscript) -->
 <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KHBDBW7" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<style type="text/css">
  #quarto-content>* {
  padding-top: 0px;
  }
</style>


        <div class="column-body-outset blog-image-container pb-5">
      <img src="https://shiny.posit.co/blog/posts/shiny-on-hugging-face/shiny-on-hf-thumb.jpg" alt="The Shiny hex next to the Hugging Face emoji logo" style="width: 100%; height: auto;">
    </div>
    


<p>We’re thrilled to announce that we’ve partnered with <a href="https://huggingface.co/">Hugging Face</a> to provide templated Spaces for both the R and Python Shiny packages. These Spaces allow you to deploy an R or Python Shiny app on Hugging Face with a click of a button, and make it easy to integrate Hugging Face models into your app.</p>
<section id="about-hugging-face" class="level2">
<h2 data-anchor-id="about-hugging-face">About Hugging Face</h2>
<p>Hugging Face is the most used open platform for AI, where the machine learning (ML) community has shared more than 150,000 models; 25,000 datasets; and 30,000 ML apps, including Stable Diffusion, Bloom, GPT-J, and open source ChatGPT alternatives. These apps enable the community to explore models, replicate results, and lower the barrier of entry for ML. At Posit, we’ve been extremely impressed with the Hugging Face community, and their commitment to supporting open source machine learning models.</p>
</section>
<section id="what-does-shiny-add" class="level2">
<h2 data-anchor-id="what-does-shiny-add">What does Shiny add?</h2>
<p>We think that Shiny is a great front-end for Hugging Face models because it is an efficient and developer-friendly GUI framework. Our reactive execution model allows Shiny to infer the relationships between inputs and outputs and minimally re-render application components. This means that you can quickly build intuitive and beautiful model demos without writing callback functions or caching data, and is particularly useful when calling expensive inference endpoints. Shiny is easy to learn, and there are great educational resources in both <a href="../../../r/getstarted/">R</a> and <a href="https://shiny.posit.co/py/docs/overview.html">Python</a>.</p>
<p>Shiny is great for simple demos, but it also has all of the tools you need to build complex, mission-critical applications. You can design <a href="https://shiny.posit.co/py/docs/ui-page-layouts.html">delightful layouts</a> and user interfaces, control <a href="https://shiny.posit.co/py/docs/workflow-server.html">application routing</a>, and encapsulate and share components using <a href="https://shiny.posit.co/py/docs/workflow-modules.html">modules</a>.</p>
</section>
<section id="which-space-should-i-use" class="level2">
<h2 data-anchor-id="which-space-should-i-use">Which Space should I use?</h2>
<p>We have both R and Python templates available, so you can use your language of choice to write Shiny apps.</p>
<p>Most of the Hugging Face toolchain is built around Python, and as a result the Shiny for Python <a href="https://huggingface.co/new-space?template=posit/shiny-for-python-template">Space</a> is a bit easier to use on Hugging Face. Shiny for Python is a pure python implementation of Shiny, and does not require an R installation. This means that Shiny for Python apps will deploy faster on Hugging Face infrastructure, and integrate better with their Python SDKs.</p>
<p>If you are an R user, or want to make use of some of the amazing <a href="https://github.com/nanxstats/awesome-shiny-extensions">R extensions</a>, then the <a href="https://huggingface.co/new-space?template=posit/shiny-for-r-template">Shiny for R Space</a> is an excellent option. To call Hugging Face tools we recommend communicating with Hugging Face using an <a href="https://huggingface.co/inference-api">API</a> or calling one of their Python SDKs using <a href="https://rstudio.github.io/reticulate/">reticulate</a>.</p>
</section>
<section id="conclusion" class="level2">
<h2 data-anchor-id="conclusion">Conclusion</h2>
<p>Our <a href="https://posit.co/about/pbc-report/">mission</a> at Posit is to support open-source scientific software, and so we’re very proud to support the effort to build advanced AI models under open-source licenses. We can’t wait to see what you build with this integration.</p>


</section>

 ]]></description>
  <guid>https://shiny.posit.co/blog/posts/shiny-on-hugging-face/</guid>
  <pubDate>Mon, 08 May 2023 04:00:00 GMT</pubDate>
  <media:content url="https://shiny.posit.co/blog/posts/shiny-on-hugging-face/shiny-on-hf-thumb.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Shiny for Python out of alpha</title>
  <dc:creator>Winston Chang</dc:creator>
  <link>https://shiny.posit.co/blog/posts/shiny-python-general-availability/</link>
  <description><![CDATA[ 
<!-- Google Tag Manager (noscript) -->
 <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KHBDBW7" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<style type="text/css">
  #quarto-content>* {
  padding-top: 0px;
  }
</style>


        <div class="column-body-outset blog-image-container pb-5">
      <img src="https://shiny.posit.co/blog/posts/shiny-python-general-availability/shiny-for-python.jpg" alt="The Shiny hex sticker next to the Python language logo, saying Shiny for Python" style="width: 100%; height: auto;">
    </div>
    


<p>We are thrilled to announce that <a href="https://shiny.posit.co/py/">Shiny for Python</a> has moved from the alpha stage to general availability. With Shiny for Python, data scientists can build interactive web applications with the expressiveness and power of reactive programming, and combine that with the extensive array of data analysis tools and visualization libraries in Python.</p>
<p>We believe that Shiny for Python strikes the perfect balance between simplicity and power. Unlike Streamlit, Shiny is not constrained by the top-to-bottom computing model, and there’s no limit to how sophisticated your applications can be. Compared to Dash, Shiny is more developer-friendly and boasts a more efficient reactive programming model.</p>
<section id="what-does-it-mean-to-be-out-of-alpha" class="level2">
<h2 data-anchor-id="what-does-it-mean-to-be-out-of-alpha">What does it mean to be out of Alpha?</h2>
<p>When we first introduced Shiny for Python at rstudio::conf last year, we labeled it as an alpha version, acknowledging that we could learn from early users and make changes to the API. After gaining ample experience and feedback, we’re now confident that Shiny for Python is ready for production work.</p>
<p>We’ve gotten some great feedback during the alpha phase of the project, leading to several enhancements:</p>
<ul>
<li>We’ve added a <a href="../../../py/docs/r-quickstart.html">quickstart guide</a> for R users.</li>
<li>You can now interact with plots created using matplotlib, seaborn, and plotnine. (<a href="https://shinylive.io/py/examples/#selecting-data">Example</a>)</li>
<li>We’ve improved the <a href="https://shiny.posit.co/py/api/">API documentation</a>.</li>
<li>We’ve created a new package, <a href="https://github.com/posit-dev/py-shinyswatch">shinyswatch</a>, which lets you modify an app’s visual style with a single line of code. (<a href="https://shinylive.io/py/examples/#shinyswatch">Example</a>)</li>
<li>We released <a href="https://github.com/posit-dev/py-shinywidgets">shinywidgets</a>, which makes it possible to use Jupyter widgets in a Shiny app, including <a href="https://shinylive.io/py/examples/#plotly">Plotly</a> and maps with <a href="https://shinylive.io/py/examples/#map">Leaflet</a>.</li>
</ul>
</section>
<section id="get-started" class="level2">
<h2 data-anchor-id="get-started">Get started</h2>
<p>If you want to learn more Shiny for Python check out <a href="https://shiny.posit.co/py/">the web site</a> and <a href="https://shinylive.io/py/examples/">live examples</a>.</p>
<p>If you’re a Shiny for R user who’s curious about learning Shiny for Python, read our <a href="https://shiny.posit.co/py/docs/r-quickstart.html">Quickstart guide</a>!</p>


</section>

 ]]></description>
  <guid>https://shiny.posit.co/blog/posts/shiny-python-general-availability/</guid>
  <pubDate>Tue, 18 Apr 2023 04:00:00 GMT</pubDate>
  <media:content url="https://shiny.posit.co/blog/posts/shiny-python-general-availability/shiny-for-python.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Shiny Conf 2023 Recap</title>
  <dc:creator>Andrew Holz</dc:creator>
  <link>https://shiny.posit.co/blog/posts/conf-2023-recap-andrew-holz/</link>
  <description><![CDATA[ 
<!-- Google Tag Manager (noscript) -->
 <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KHBDBW7" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<style type="text/css">
  #quarto-content>* {
  padding-top: 0px;
  }
</style>


        <div class="column-body-outset blog-image-container pb-5">
      <img src="https://shiny.posit.co/blog/posts/conf-2023-recap-andrew-holz/shinyconflogo.jpg" alt="The Shiny Conf Logo on a dark blue background" style="width: 100%; height: auto;">
    </div>
    


<p>Appsilon’s Shiny Conf 2023 was a big success, with many incredible speakers (including 3 members of our team!) and many viewers tuning in from afar.</p>
<p>One of the highlights was Barret Schloerke’s talk on the “Lessons learned from testing 2500+ Shiny Apps every day”. This talk provided valuable insights on how to improve the quality of Shiny apps through automated testing and some of the hard lessons learned building out the infrastructure the team uses to maintain quality every day.</p>
<p>Another noteworthy talk was by Carson Sievert, who presented “Towards the next generation of Shiny UI”. His talk delved into some of the new <code>bslib</code> features that we’re most excited about (e.g., expandable cards, accordions, (sidebar) layouts, input controls, etc.), discussed some best design practices for improving user experience with these tools, and presented some real world examples of these tools in action.</p>
<p>Winston Chang’s keynote on “Lessons and opportunities with Shiny for Python” was also a major highlight of the conference. His talk focused on the many lessons learned from his last 10 years of building Shiny for R, and leveraging those lessons while building the latest member of the Shiny family, Shiny for Python.</p>
<p>We will be sharing videos for all of these talks as they become available, so keep an eye out for them. We would also like to thank <a href="https://appsilon.com/">Appsilon</a> for their tireless work making the conference such a great success.</p>
<p>Finally, we would like to invite you to participate in the <a href="https://shinyconf.appsilon.com/state-of-shiny-2023/">survey being conducted along with the conference</a> on the state of Shiny. Everyone who fills it out will get first crack at the data, so don’t miss out on this opportunity.</p>
<div style="padding-top: 20px;">
<p><a class="btn btn-primary no-icon" href="https://shinyconf.appsilon.com/state-of-shiny-2023/" target="_blank">Fill out the survey</a></p>
</div>



 ]]></description>
  <guid>https://shiny.posit.co/blog/posts/conf-2023-recap-andrew-holz/</guid>
  <pubDate>Tue, 28 Mar 2023 04:00:00 GMT</pubDate>
  <media:content url="https://shiny.posit.co/blog/posts/conf-2023-recap-andrew-holz/shinyconflogo.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
