{
  "hash": "2c806da435a0ac43fbb90f6403375e10",
  "result": {
    "markdown": "---\ntitle: \"Shiny for R updates: new default look, dark mode, shinylive updates, and more\"\ndescription: &desc |\n  An overview of recent Shiny for R updates, a new default look, dark mode, shinylive updates, and more.\nauthor:\n  - Carson Sievert\n  - Garrick Aden-Buie\ndate: \"2023-11-30\"\nresources:\n  - flights-new.png\n  - flights-old.png\n  - flights-dark.png\n  - flights-light.png\n  - simple-new.png\n  - simple-old.png\n\nimage: feature.jpg\n\nopen-graph:\n  image: feature.jpg\n  description: *desc\ntwitter-card:\n  image: feature.jpg\n  description: *desc\n\neditor:\n  render-on-save: true\n\nengine: knitr\n\nfilters:\n  - shinylive\n\nfreeze: true\n\nformat:\n  html:\n    code-link: true\n    anchor-sections: true\n    reference-location: section\n\ncode-annotations: hover\n---\n\n\n[shiny]: https://shiny.rstudio.com/\n[bslib]: https://rstudio.github.io/bslib/\n[shinylive]: https://posit-dev.github.io/r-shinylive/\n[flights-demo]: https://bslib.shinyapps.io/flights\n[flights-source]: https://github.com/rstudio/bslib/tree/main/inst/examples/flights\n[chiflights22]: https://github.com/cpsievert/chiflights22\n[bootswatch]: https://bootswatch.com/\n[thematic]: https://rstudio.github.io/thematic/\n[plotly]: https://plotly.com/r/\n[webr]: https://docs.r-wasm.org/webr/latest/\n\n\n```{=html}\n<style>\nimg { border-radius: 8px; }\n.nav-centered > .nav {\n  justify-content: center;\n  border: none;\n}\n.nav-centered > .tab-content {\n  border: none;\n}\n.link-shinylive {\n  position: absolute;\n  bottom: 0;\n  right: 0.5em;\n  background-color: unset;\n  font-family: var(--bs-font-sans-serif);\n}\n</style>\n<script>\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  // Add shinylive links to code blocks\n  document.querySelectorAll(\"[data-shinylive]\").forEach(function(el) {\n    const pre = el.querySelector(\"pre\");\n    const link = document.createElement(\"a\");\n    link.classList.add(\"link-shinylive\");\n    link.target = \"_blank\";\n    link.rel = \"noopener noreferrer\";\n    link.href = el.dataset.shinylive;\n    link.innerHTML = `<i class=\"bi bi-lightning-fill\"></i> Run on shinylive`;\n    pre.appendChild(link);\n  });\n});\n</script>\n```\n\n::: {.cell}\n\n:::\n\n\nThe Shiny team is pleased to announce another round of updates for 13 different R packages,\nincluding [shiny] and [bslib].\nThere are too many improvements to cover in a single post, but we'd like to highlight some of the more notable additions.\nFor a detailed list of changes, be sure to check out the [release notes](#release-notes) section of this post.\n\n[bslib] brings modern Bootstrap versions and new user layouts and inputs to [Shiny], the web framework for data scientists.\nInstall the latest versions of shiny and bslib from CRAN with:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(c(\"shiny\", \"bslib\"))\n```\n:::\n\n\nIn this post, we'll cover three main topics: the [new shiny look](#new-shiny-look), [what's new in shinylive](#shinylive-updates) and a long-awaited [update to selectize.js in shiny](#selectize-js).\n\n\n## A shiny new look {#new-shiny-look}\n\nIn our [last post](/blog/posts/bslib-tooltips/#towards-a-new-shiny-theme), we previewed a new look for `bslib`-powered UIs, which is designed with dashboards in mind.\nThis release of `bslib` adds more polish to this new \"preset\" theme and makes it the default for `bslib` powered UIs.\n\nTo use the new layouts, simply create an app using any `page_*()` function in bslib for the UI.\nHere's a very simple template you can use to get started.\nNotice that we've used [shinylive] to make this example interactive -- the entire app is running in your browser, no server required!\nYou can even edit the app right here in this post and see the changes live when you press the <i class=\"bi bi-play-fill\"></i> play button.\nWe'll talk more about shinylive [later in this post](#shinylive-updates).\n\n::: {.column-page .mb-3}\n```{shinylive-r}\n#| standalone: true\n#| components: [editor, viewer]\n#| viewerHeight: 400\n#| layout: vertical\nlibrary(shiny)\nlibrary(bslib)\n\nui <- page_sidebar(\n  title = \"My dashboard\",\n  sidebar = sidebar(\n    title = \"Settings\",\n    sliderInput(\"n\", \"Observations\", 1, 100, 50, ticks = FALSE),\n    sliderInput(\"bins\", \"Bins\", 1, 10, 5, step = 1, ticks = FALSE),\n  ),\n  plotOutput(\"plot\")\n)\n\nserver <- function(input, output, session) {\n  output$plot <- renderPlot({\n    hist(rnorm(input$n), breaks = input$bins, col = \"#007bc2\")\n  })\n}\n\nshinyApp(ui, server)\n```\n:::\n\nWe're calling this new look the shiny \"preset\" theme, because it's a great place to start building your own theme.\nRemember, you can always customize the preset by passing additional arguments to `bs_theme()`.\nYou can even switch back to the default `preset = \"bootstrap\"` look by using the following `theme` value in your `page_*()` function[^bootswatch]:\n\n[^bootswatch]: `bs_theme()` still supports [Bootswatch] presets too, like `preset = \"flatly\"`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# use default Bootstrap styles\ntheme = bs_theme(preset = \"bootstrap\")\n```\n:::\n\n\nThe new shiny preset is designed with dashboards in mind.\nHere's a more complete example using a full dashboard app ([source][flights-source], [demo][flights-demo]) for exploring [flight data from Chicago][chiflights22].\nToggle between the new and old look to see what's changed with this release.\n\n\n```{=html}\n<div class=\"column-screen py-3 my-3\">\n  <div class=\"column-page\">\n  <ul class=\"nav nav-pills justify-content-center\" role=\"tablist\">\n    <li class=\"nav-item\" role=\"presentation\">\n      <button class=\"nav-link\" data-bs-toggle=\"tab\" data-bs-target=\"#flights-old\" type=\"button\" role=\"tab\" aria-controls=\"flights-old\" aria-selected=\"false\">Old</button>\n    </li>\n    <li class=\"nav-item\" role=\"presentation\">\n      <button class=\"nav-link active\" data-bs-toggle=\"tab\" data-bs-target=\"#flights-new\" type=\"button\" role=\"tab\" aria-controls=\"flights-new\" aria-selected=\"true\">New</button>\n    </li>\n  </ul>\n\n  <div class=\"tab-content p-3 border-0\">\n    <div class=\"tab-pane fade show active\" id=\"flights-new\" role=\"tabpanel\">\n      <img src=\"flights-new.png\" class=\"img-fluid shadow\" alt=\"Flights dashboard with the new styles, featuring a white navbar and white sidebar framing the dashboard area. Cards are also entirely white on a light gray background, with subtle depth created by drop shadows under the cards. Blue accents are found throughout the dashboard in plots and icons.\">\n    </div>\n    <div class=\"tab-pane\" id=\"flights-old\" role=\"tabpanel\">\n      <img src=\"flights-old.png\" class=\"img-fluid shadow\" alt=\"Flights dashboard with the old styles, features solid blue navbar and solid blue value boxes. The sidebar and card headers and footers all have a light gray background.\">\n    </div>\n  </div>\n  </div>\n</div>\n```\n\n\nThe rest of this section will explore a few highlights of the new default look, including:\n\n- New [page-level styling](#page-styling)\n- [Dark mode support](#dark-mode)\n- Improved [`value_box()` styling](#value-box-styling)\n- [Refreshed Shiny UI](#refreshed-shiny-ui) (inputs, modals, notifications, and more)\n\n::: {.callout-note}\n### Quarto and PyShiny dashboards\n\nDashboards are coming to Quarto!\n\nThe new [Quarto dashboard](https://quarto.org/docs/dashboards/) format, as well as newer [PyShiny](https://shypy-test-center.netlify.app/py/) components, are built on the same foundation as `bslib`.\nThus, the concepts you'll learn while building dashboards with `bslib` should also largely apply there as well.\n:::\n\n### Page-level styling {#page-styling}\n\nAs we noted above, the new shiny preset is design with dashboards in mind, but it will make any shiny app look great.\nThe new default look is designed to be light and minimal, with a white navbar and white sidebar framing the dashboard area.\nCards are also entirely white, with subtle depth created by drop shadows under the cards.\nValue boxes provide colorful accents, as will the plots you add to showcase your data.\n\nHere's an example taken straight from the [getting started guide](https://rstudio.github.io/bslib/articles/dashboards/index.html) for `{bslib}` dashboards.\n\n\n```{=html}\n<div class=\"column-screen py-3 my-3\">\n  <div class=\"column-page\">\n  <ul class=\"nav nav-pills justify-content-center\" role=\"tablist\">\n    <li class=\"nav-item\" role=\"presentation\">\n      <button class=\"nav-link\" data-bs-toggle=\"tab\" data-bs-target=\"#simple-old\" type=\"button\" role=\"tab\" aria-controls=\"simple-old\" aria-selected=\"false\">Old</button>\n    </li>\n    <li class=\"nav-item\" role=\"presentation\">\n      <button class=\"nav-link active\" data-bs-toggle=\"tab\" data-bs-target=\"#simple-new\" type=\"button\" role=\"tab\" aria-controls=\"simple-new\" aria-selected=\"true\">New</button>\n    </li>\n  </ul>\n\n  <div class=\"tab-content p-3 border-0\">\n    <div class=\"tab-pane fade show active\" id=\"simple-new\" role=\"tabpanel\">\n      <img src=\"simple-new.png\" class=\"img-fluid shadow\" alt=\"New page_sidebar() styling featuring a light, minimal look with a white title bar, white sidebar and white cards and value boxes. The cards and value boxes have subtle shadows on a light gray background. Value boxes icons are blue with a subtle gradient\">\n\n    </div>\n    <div class=\"tab-pane\" id=\"simple-old\" role=\"tabpanel\">\n      <img src=\"simple-old.png\" class=\"img-fluid shadow\" alt=\"Old page_sidebar() styling with a dark title bar. Sidebars and card headers and footers have a light gray background. Cards and value boxes do not have shadows and value box icons are solid dark gray.\">\n    </div>\n  </div>\n  </div>\n</div>\n```\n\n\n\nTo achieve the full dashboard effect, though, you have opt into the light gray background by adding `class = \"bslib-page-dashboard\"` to your `page_sidebar()` or the `nav_panel()` items in your `page_navbar()`.\nThis class enables a few additional features, namely adding a soft gray background to the main content area under cards and value boxes that help them stand out.\nYou can also add the `class` directly to `page_fillable()` or `page()` to get the same effect in apps with custom layouts.\n\n\n```{=html}\n<div class=\"column-page py-3 my-3 grid align-items-start\">\n  <ul class=\"g-col-md-3 g-col-12 nav nav-pills flex-md-column justify-content-center\" role=\"tablist\">\n    <li class=\"nav-item\" role=\"presentation\">\n      <button class=\"nav-link active font-monospace\" data-bs-toggle=\"tab\" data-bs-target=\"#class-sidebar\" type=\"button\" role=\"tab\" aria-controls=\"class-sidebar\" aria-selected=\"true\">page_sidebar()</button>\n    </li>\n    <li class=\"nav-item\" role=\"presentation\">\n      <button class=\"nav-link font-monospace\" data-bs-toggle=\"tab\" data-bs-target=\"#class-navbar\" type=\"button\" role=\"tab\" aria-controls=\"class-navbar\" aria-selected=\"false\">page_navbar()</button>\n    </li>\n    <li class=\"nav-item\" role=\"presentation\">\n      <button class=\"nav-link font-monospace\" data-bs-toggle=\"tab\" data-bs-target=\"#class-fillable\" type=\"button\" role=\"tab\" aria-controls=\"class-fillable\" aria-selected=\"false\">page_fillable()</button>\n    </li>\n  </ul>\n\n  <div class=\"g-col-md-9 g-col-12 tab-content p-3 border-0\">\n    <div class=\"tab-pane fade show active\" id=\"class-sidebar\" role=\"tabpanel\">\n      <div class=\"sourceCode R\"><pre class=\"sourceCode r\"><code class=\"sourceCode R\">library(shiny)\nlibrary(bslib)\n\nui &lt;- page_sidebar(\n  title = \"My Dashboard\",\n  class = \"bslib-page-dashboard\",\n  sidebar = sidebar(\n    title = \"Settings\",\n    # ... sidebar inputs ...\n  ),\n  # ... dashboard content ...\n)</code></pre></div>\n    </div>\n    <div class=\"tab-pane\" id=\"class-navbar\" role=\"tabpanel\">\n      <div class=\"sourceCode R\"><pre class=\"sourceCode r\"><code class=\"sourceCode R\">library(shiny)\nlibrary(bslib)\n\nui &lt;- page_navbar(\n  title = \"My Dashboard\",\n  nav_panel(\n    title = \"Page 1\",\n    class = \"bslib-page-dashboard\",\n    # ... dashboard content ...\n  ),\n  nav_panel(\"About\", \"Regular content\")\n)</code></pre></div>\n    </div>\n    <div class=\"tab-pane\" id=\"class-fillable\" role=\"tabpanel\">\n      <div class=\"sourceCode R\"><pre class=\"sourceCode r\"><code class=\"sourceCode R\">library(shiny)\nlibrary(bslib)\n\nui &lt;- page_fillable(\n  title = \"My Dashboard\",\n  class = \"bslib-page-dashboard\",\n  # ... custom layout and dashboard content ...\n)</code></pre></div>\n    </div>\n  </div>\n</div>\n```\n\n\n### Built-in dark mode support ☀️ 🌙 {#dark-mode}\n\nThis release of bslib brings built-in dark mode support to any Shiny app that uses `bs_theme()`, thanks to Bootstrap 5.3's new [client-side color mode feature](https://getbootstrap.com/docs/5.3/customize/color-modes/)!\nTo enable dark mode in your app, add `input_dark_mode()` somewhere in your UI.\nIn the example below, we've [put in the navbar](https://github.com/rstudio/bslib/blob/f574b9f0/inst/examples/flights/app.R#L231-L233).\n\n\n```{=html}\n<div class=\"column-screen py-3 my-3\">\n  <div class=\"column-page\">\n  <ul class=\"nav nav-pills justify-content-center\" role=\"tablist\">\n    <li class=\"nav-item\" role=\"presentation\">\n      <button class=\"nav-link\" data-bs-toggle=\"tab\" data-bs-target=\"#flights-light\" type=\"button\" role=\"tab\" aria-controls=\"flights-light\" aria-selected=\"false\">Light</button>\n    </li>\n    <li class=\"nav-item\" role=\"presentation\">\n      <button class=\"nav-link active\" data-bs-toggle=\"tab\" data-bs-target=\"#flights-dark\" type=\"button\" role=\"tab\" aria-controls=\"flights-dark\" aria-selected=\"true\">Dark</button>\n    </li>\n  </ul>\n\n  <div class=\"tab-content p-3 border-0\">\n    <div class=\"tab-pane fade show active\" id=\"flights-dark\" role=\"tabpanel\">\n      <img src=\"flights-dark.png\" class=\"img-fluid shadow\" alt=\"Flights dashboard in dark mode. All white areas are now a deep dark gray. The blue accents remain.\">\n    </div>\n    <div class=\"tab-pane\" id=\"flights-light\" role=\"tabpanel\">\n      <img src=\"flights-light.png\" class=\"img-fluid shadow\" alt=\"Flights dashboard in light mode as previously described.\">\n    </div>\n  </div>\n  </div>\n</div>\n```\n\n\nFor the best results, make sure you have the latest version of [shiny].\nDark mode works with nearly any Bootstrap theme created with `bs_theme()`, including the new shiny preset, but it tends to work best when the theme is designed around light mode first.\nFor matching plots and widgets to the current color mode, you can use [thematic] to automatically style plots or `shiny::getCurrentOutputInfo()` to manually set the colors of your R outputs.\n\nBy default, the color mode is picked from the user's system settings -- i.e. choosing dark mode if their system is also in dark mode -- but you can choose the initial color mode via the `mode` argument.\nIf you give `input_dark_mode()` an `id`, it reports the current color mode as either `\"light\"` or `\"dark\"`.\n\n\n::: {.cell}\n\n```{.r .cell-code data-shinylive=\"https://shinylive.io/r/editor/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKAZwAtaJWAlAB0IdJiw71OY4RBEBXWgAIAPAFolqKAHM4AfWgA3ei3YilFpaVqlqcJQF4lQsABEoPekRYATF7nNLIz1OLQI4RnYBXCUAYk15HiUjJRs4GE4rIitue0ZabW5SQItgrQg4ajMwAAUdewBGf2c3D24vXyViMgpisGiS5KhDPTSYMwhLKdSIVHlSPR8WAGs9GCIfOHZaH0cWpcZV9c3m4-snFzpCvtkp2VkRTgjDCNUNADN5CAJrEm3Z+YxIjzOakGJPRgvRgCJQgQZEKTPOAAUReZH+oIAJAcjhs4DE4ZNphZaO8lBj5tiVms8Y4LmAcS4YYTicSeEQAO4AOSI1netAIUF+EGqAHVKsR4FkcvYcUpODs4ABCJmDKYAX0G6tkmrkECkem01ARUGoelIuXgUUevH4AEF0OxFOCkdCwOqALpAA\"}\nlibrary(shiny)\nlibrary(bslib)\n\nui <- page_navbar(\n  title = \"Dashboard\",\n  nav_spacer(), # push nav items to the right\n  nav_panel(\"Page 1\", \"Dashboard content\"),\n  nav_item(\n    input_dark_mode(id = \"dark_mode\", mode = \"light\")\n  )\n)\n\nserver <- function(input, output, server) {\n  observeEvent(input$dark_mode, {\n    if (input$dark_mode == \"dark\") {\n      showNotification(\"Welcome to the dark side!\")\n    }\n  })\n}\n\nshinyApp(ui, server)\n```\n:::\n\n\n### Value box styling {#value-box-styling}\n\nThe new default look includes improved styling for `value_box()` outputs, which are commonly used in dashboards.\nWe're also excited to announce a new [Build-a-Box app](https://bslib.shinyapps.io/build-a-box) to help build and explore value boxes themes and options in a live Shiny app.\n\nUse the tabs below to learn more about several new features and themes supported by `value_box()`.\n\n:::: {.panel-tabset .nav-pills .nav-centered}\n\n#### Text\n\n\n```{=html}\n<div class=\"column-page-inset overflow-auto mb-3\">\n  <div class=\"d-flex align-items-center\" style=\"height: 200px; min-width: 800px\">\n    <img src=\"value-box-text.png\" alt=\"Three value boxes, with made up statistics in purple, green and blue text. The value boxes feature unadorned plots that fill the bottom half of the box, each a sparkline in the same color as the card.\" class=\"img-fluid\" />\n  </div>\n</div>\n```\n\n\n##### Showcase Bottom with Text-Color Theme\n\nThe new `showcase_layout = \"bottom\"` option is perfect for sparkline-style plots that fill the value box width and expand into full screen plots when the user clicks the *expand* button (enabled by `full_screen = TRUE`).\nSee the [Expandable sparklines](https://rstudio.github.io/bslib/articles/value-boxes/index.html#expandable-sparklines) section of the [value box article](https://rstudio.github.io/bslib/articles/value-boxes/index.html) for an example of how to create these plots with [plotly] and bslib.\n\nThis example also highlights the `text-{color}` value box themes that set the color of the text to a [Bootstrap color](https://getbootstrap.com/docs/5.3/customize/color/#all-colors).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlayout_columns(\n  value_box(\n    title = \"Engagement rate\",\n    value = \"3.8%\",\n    theme = \"text-indigo\",\n    showcase = plotOutput(\"plot_engagement\"),\n    showcase_layout = \"bottom\",\n    full_screen = TRUE\n  ),\n  value_box(\n    title = \"Project Funding\",\n    value = \"$2,805\",\n    theme = \"text-success\",\n    showcase = plotOutput(\"plot_funding\"),\n    showcase_layout = \"bottom\",\n    full_screen = TRUE\n  ),\n  value_box(\n    title = \"Employee satisfaction\",\n    value = \"92.3%\",\n    theme = \"text-blue\",\n    showcase = plotOutput(\"plot_satisfaction\"),\n    showcase_layout = \"bottom\",\n    full_screen = TRUE\n  )\n)\n```\n:::\n\n\n#### Icons\n\n\n```{=html}\n<div class=\"column-page-inset overflow-auto mb-3\">\n  <div class=\"d-flex align-items-center\" style=\"height: 200px; min-width: 800px\">\n    <img src=\"value-box-icons.png\" alt=\"Three value boxes with made up statistics, each with an icon to the left of the box. The cards are not tall and fit neatly into small row. The icons are blue with a subtle gradient toward the bottom right corner, blending from blue into purple.\" class=\"img-fluid\" />\n  </div>\n</div>\n```\n\n\n##### Showcase Left Center with Gradient Icons\n\nThis example uses the default value box styles in the new shiny preset.\nIcons receive a subtle gradient and are placed to the left of the value box content thanks to the default `showcase_layout = \"left center\"`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlayout_columns(\n  value_box(\n    title = \"API Response Time\",\n    value = \"150ms\",\n    showcase = bsicons::bs_icon(\"arrow-left-square-fill\")\n  ),\n  value_box(\n    title = \"Revenue growth\",\n    value = \"+15.2%\",\n    showcase = bsicons::bs_icon(\"arrow-up-circle-fill\")\n  ),\n  value_box(\n    title = \"Market share\",\n    value = \"42%\",\n    showcase = fontawesome::fa_i(\"magnifying-glass-dollar\")\n  )\n)\n```\n:::\n\n\n#### Gradient\n\n\n```{=html}\n<div class=\"column-page-inset overflow-auto mb-3\">\n  <div class=\"d-flex align-items-center\" style=\"height: 200px; min-width: 800px\">\n    <img src=\"value-box-gradient.png\" alt=\"Three value boxes of made up statistics, with vibrant gradient backgrounds: purple-cyan, orange-indigo, and teal-purple. Each card has an icon in the upper right corner and the title and value in the lower left corner.\" class=\"img-fluid\" />\n  </div>\n</div>\n```\n\n\n##### Showcase Top Right with Gradient Backgrounds\n\nThis example uses `theme = \"bg-gradient-{from}-{to}\"` for value boxes with vibrant gradient backgrounds.\nYou can use any of the [Bootstrap color names](https://getbootstrap.com/docs/5.3/customize/color/#all-colors) for the `from` or `to` colors.\n`showcase_layout = \"top right\"` places the icon in the top right corner of the value box.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlayout_columns(\n  value_box(\n    title = \"Average wait\",\n    value = \"4 minutes\",\n    theme = \"bg-gradient-purple-cyan\",\n    showcase = bsicons::bs_icon(\"stopwatch\"),\n    showcase_layout = \"top right\"\n  ),\n  value_box(\n    title = \"Customer churn\",\n    value = \"5%\",\n    theme = \"bg-gradient-orange-indigo\",\n    showcase = fontawesome::fa_i(\"tent-arrow-turn-left\"),\n    showcase_layout = \"top right\"\n  ),\n  value_box(\n    title = \"Daily Active Users\",\n    value = \"8,507\",\n    theme = \"bg-gradient-teal-purple\",\n    showcase = fontawesome::fa_i(\"arrow-up-right-dots\"),\n    showcase_layout = \"top right\"\n  )\n)\n```\n:::\n\n\n::::\n\n\n```{=html}\n<script>\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  // Make nav-pills work in Quarto without directly writing the markup\n  document.querySelectorAll(\".nav-centered.nav-pills\").forEach(function(el) {\n    el.classList.remove('nav-pills');\n    el.firstElementChild.classList.add('nav-pills');\n    el.firstElementChild.classList.remove('nav-tabs');\n  })\n})\n</script>\n```\n\n\n\n\n### Refreshed Shiny UI {#refreshed-shiny-ui}\n\nThe new default look includes a refreshed Shiny UI, which includes new styling for inputs, modals, notifications, and more.\n\n\n```{=html}\n<div class=\"column-page py-3 my-3 grid\">\n  <ul class=\"g-col-md-3 g-col-12 nav nav-pills flex-md-column justify-content-center\" role=\"tablist\">\n    <li class=\"nav-item\" role=\"presentation\">\n      <button class=\"nav-link active\" data-bs-toggle=\"tab\" data-bs-target=\"#preset-inputs\" type=\"button\" role=\"tab\" aria-controls=\"preset-inputs\" aria-selected=\"true\">Inputs</button>\n    </li>\n    <li class=\"nav-item\" role=\"presentation\">\n      <button class=\"nav-link\" data-bs-toggle=\"tab\" data-bs-target=\"#preset-notifications\" type=\"button\" role=\"tab\" aria-controls=\"preset-notifications\" aria-selected=\"false\">Notifications</button>\n    </li>\n    <li class=\"nav-item\" role=\"presentation\">\n      <button class=\"nav-link\" data-bs-toggle=\"tab\" data-bs-target=\"#preset-progress-bar\" type=\"button\" role=\"tab\" aria-controls=\"preset-progress-bar\" aria-selected=\"false\">Progress Bars</button>\n    </li>\n    <li class=\"nav-item\" role=\"presentation\">\n      <button class=\"nav-link\" data-bs-toggle=\"tab\" data-bs-target=\"#preset-modals\" type=\"button\" role=\"tab\" aria-controls=\"preset-modals\" aria-selected=\"false\">Modals</button>\n    </li>\n  </ul>\n  <div class=\"g-col-md-9 g-col-12 tab-content p-3 border-0\">\n    <div class=\"tab-pane fade show active\" id=\"preset-inputs\" role=\"tabpanel\">\n      <img src=\"shiny-preset-inputs.gif\" class=\"img-fluid\" alt=\"New inputs styles, in particular a minimal slider input.\" />\n    </div>\n    <div class=\"tab-pane fade\" id=\"preset-notifications\" role=\"tabpanel\">\n      <img src=\"shiny-preset-notifications.gif\" class=\"img-fluid\" alt=\"New notification styles for default, message, warning and error notifications. Notifications have shadows and have a large amount of padding around the edges compared with Shiny's default design.\" />\n    </div>\n    <div class=\"tab-pane fade\" id=\"preset-progress-bar\" role=\"tabpanel\">\n      <img src=\"shiny-preset-progress-bar.gif\" class=\"img-fluid\" alt=\"New progress bar notification styles, which are similar to notifications.\" />\n    </div>\n    <div class=\"tab-pane fade\" id=\"preset-modals\" role=\"tabpanel\">\n      <img src=\"shiny-preset-modal.png\" class=\"img-fluid\" alt=\"An example modal with the new shiny preset style. The modal is minimal with additional padding and the backdrop has a soft blur effect.\" />\n    </div>\n  </div>\n</div>\n```\n\n\n\n## Shinylive updates {#shinylive-updates}\n\nThanks to the exceptional work by George Stagg on [webR][webr] in collaboration with the Shiny team, [shinylive] can now run Shiny applications entirely in a web browser, without the need for a separate server running R!\n\nWhile sharing a traditional Shiny app requires you to deploy the app to a server, such as [shinyapps.io](https://shinyapps.io), shinylive allows you to share your app by simply sharing a URL or by embedding the shinylive app in a Quarto webpage.\nThe app runs entirely in the browser, directly on the user's device.\n\nWe're please to announce several venues for writing and sharing Shiny apps via shinylive:\n\n1. **[shinylive.io/r](https://shinylive.io/r) contains a gallery of example Shiny apps** that you can run in your browser.\n   You can also use [shinylive.io/r/editor](https://shinylive.io/r/editor) as an online playground to write and share your own apps.\n\n2. **The [shinylive R package](https://posit-dev.github.io/r-shinylive) is now on CRAN!**\n   This package helps you turn an existing Shiny app into a ready-to-share shinylive app.\n\n3. **The [shinylive Quarto extension](https://quarto-ext.github.io/shinylive/) now supports both R and Python Shiny apps** -- even on the same page!\n   With the `shinylive-r` and `shinylive-python` code cells, you can embed Shiny apps directly in Quarto web documents.\n   This is perfect for blog posts, like this one!\n   See [the example](#new-shiny-look) near the start of this post.\n\n\n[webR] and [shinylive] are under active development, so expect ongoing updates and improvements.\nCurrently, shinylive apps download packages from webR's CRAN-like repository at run time, which adds a delay to the initial startup time.\nIn the future, we hope to make this faster and to allow package installation from more sources.\nWe're also really excited that [R-universe now builds WASM binaries](https://ropensci.org/blog/2023/11/17/runiverse-wasm/) for R packages!\n\n## Selectize.js update {#selectize-js}\n\nShiny's `selectInput()` and `selectizeInput()` functions create dropdown menus that allow users to select one or more items from a list.\nThese inputs are powered by the [selectize.js](https://selectize.github.io/selectize.js/) library, and shiny 1.8.0 upgrades selectize.js from version 0.12.4 to 0.15.2.\n\nThis upgrade resolved [a number of outstanding bugs and issues](https://github.com/rstudio/shiny/issues?q=is:issue+is:closed+selectize+sort:updated-desc+) with `selectizeInput()` (as well as introducing some new ones that we had to squash before release).\nMost users won't notice a difference in the select inputs -- now they'll just work _better_ -- but if you do notice a change in behavior, please let use know by [filing an issue](https://github.com/rstudio/shiny/issues).\n\nPower users will find even more selectize.js [options](https://selectize.dev/docs/usage) now available, including more [plugins](https://selectize.dev/docs/demos/plugins).\nWe highly recommend trying both the [`clear_button`](https://selectize.dev/docs/plugins/clear-button) and [`remove_button`](https://selectize.dev/docs/plugins/remove-button) plugins to give users a clear visual cue for removing options:\n\n\n::: text-center\n![](selectize.gif){alt=\"A demo with two select inputs. The first allows a single value and uses the clear_button plugin. An X on the select input allows the user to clear the selection. The second input allows multiple values and uses the remove_button plugin. Each selected value has an X that allows the user to remove the value.\"}\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code data-shinylive=\"https://shinylive.io/r/editor/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKAZwAtaJWAlAB0IdJiw71OY4RBEBXWgAIAPAFolqKAHM4AfQBmtAB5wAJuxFLrSznGpwCpWgC84ASQip5pSxBsBSkJgnHzaDsG4QWAAymEOtvaOpJG2pFDkGNDwuFaB1kSoziScSgC8SnScvqjU8tp8pRXBBA4sevQ+pCTBsgECuf42dg5Orh5ePn751sEw8tTOtXCpwQCyC0sJI8mp1RlwWbBwgzNK84u0y+VKACpYAKoAoqczhcUQTZW01ey19Y0bsFGHAYEQAG76TqkbpyMB9GyyWQiOyMSGMVQaAzyCBjEjsPjeUhRIg+IlROycUIkARKEB5WYQAC+IhRvH4AEF0OxFBS4Gj+QIwEyALpAA\"}\nlibrary(shiny)\nlibrary(bslib)\n\nui <- page_fixed(\n    selectizeInput(\n        \"single\", \"Single select\", state.name,\n        options = list(plugins = \"clear_button\")\n    ),\n    selectizeInput(\n        \"multiple\", \"Multiple select\", state.name,\n        multiple = TRUE,\n        options = list(plugins = \"remove_button\")\n    )\n)\n\nserver <- function(input, output, session) {\n\n}\n\nshinyApp(ui, server)\n```\n:::\n\n\n::: {.column-screen .bg-light .mt-4}\n::: {.column-body}\n\n## Release notes {#release-notes}\n\nThis post doesn't cover all of the changes and updates that happened in the Shiny universe in this release cycle.\nTo learn more about specific changes in each package, dive into the release notes linked below!\n\n**Big shout out to everyone involved!** 💙\nWe'd want to extend a huge thank you to everyone who contributed pull requests, bug reports and feature requests.\nYour contributions make Shiny brilliant!\n\n#### bslib [v0.6.0](https://rstudio.github.io/bslib/news/index.html#bslib-060)\n\n\n::: {.cell}\n\n:::\n\n\n[&#x0040;antoine4ucsd](https://github.com/antoine4ucsd), [&#x0040;awcm0n](https://github.com/awcm0n), [&#x0040;barnesparker](https://github.com/barnesparker), [&#x0040;cpsievert](https://github.com/cpsievert), [&#x0040;ctrlxctrlc](https://github.com/ctrlxctrlc), [&#x0040;daattali](https://github.com/daattali), [&#x0040;DavZim](https://github.com/DavZim), [&#x0040;durraniu](https://github.com/durraniu), [&#x0040;gadenbuie](https://github.com/gadenbuie), [&#x0040;gsmolinski](https://github.com/gsmolinski), [&#x0040;jcheng5](https://github.com/jcheng5), [&#x0040;jmbarbone](https://github.com/jmbarbone), [&#x0040;JohnCoene](https://github.com/JohnCoene), [&#x0040;kelly-sovacool](https://github.com/kelly-sovacool), [&#x0040;lmullany](https://github.com/lmullany), [&#x0040;m-austen](https://github.com/m-austen), [&#x0040;MayaGans](https://github.com/MayaGans), [&#x0040;mhanf](https://github.com/mhanf), [&#x0040;ncullen93](https://github.com/ncullen93), [&#x0040;ngoodkindGSI](https://github.com/ngoodkindGSI), [&#x0040;oude-gao](https://github.com/oude-gao), [&#x0040;schloerke](https://github.com/schloerke), [&#x0040;scrapeable](https://github.com/scrapeable), [&#x0040;tuge98](https://github.com/tuge98), and [&#x0040;wch](https://github.com/wch).\n\n#### bsicons [v0.1.2](https://rstudio.github.io/bsicons/news/index.html#bsicons-012)\n\n[&#x0040;cpsievert](https://github.com/cpsievert).\n\n#### crosstalk [v1.2.1](https://cran.r-project.org/web/packages/crosstalk/news/news.html)\n\n[&#x0040;cpsievert](https://github.com/cpsievert), [&#x0040;ctedja](https://github.com/ctedja), [&#x0040;daattali](https://github.com/daattali), [&#x0040;danielludolf](https://github.com/danielludolf), [&#x0040;DataStrategist](https://github.com/DataStrategist), [&#x0040;dmresearch15](https://github.com/dmresearch15), [&#x0040;gadenbuie](https://github.com/gadenbuie), [&#x0040;helgasoft](https://github.com/helgasoft), [&#x0040;hlydecker](https://github.com/hlydecker), [&#x0040;JacobBraslaw22](https://github.com/JacobBraslaw22), [&#x0040;jcheng5](https://github.com/jcheng5), [&#x0040;jonathanmburns](https://github.com/jonathanmburns), [&#x0040;jonspring](https://github.com/jonspring), [&#x0040;LDSamson](https://github.com/LDSamson), [&#x0040;MichaelChirico](https://github.com/MichaelChirico), [&#x0040;mmfc](https://github.com/mmfc), [&#x0040;novotny1akub](https://github.com/novotny1akub), [&#x0040;oobd](https://github.com/oobd), [&#x0040;pfh](https://github.com/pfh), [&#x0040;schloerke](https://github.com/schloerke), [&#x0040;tbrittoborges](https://github.com/tbrittoborges), [&#x0040;ThierryO](https://github.com/ThierryO), [&#x0040;tomsing1](https://github.com/tomsing1), [&#x0040;ulyngs](https://github.com/ulyngs), [&#x0040;warnes](https://github.com/warnes), [&#x0040;yb2125](https://github.com/yb2125), and [&#x0040;yogat3ch](https://github.com/yogat3ch).\n\n#### histoslider [v0.1.1](https://cran.r-project.org/web/packages/histoslider/news/news.html)\n\n[&#x0040;cpsievert](https://github.com/cpsievert).\n\n#### htmltools [v0.5.7](https://rstudio.github.io/htmltools/news/index.html#htmltools-057)\n\n[&#x0040;bjcarothers](https://github.com/bjcarothers), [&#x0040;cpsievert](https://github.com/cpsievert), [&#x0040;gadenbuie](https://github.com/gadenbuie), [&#x0040;HenningLorenzen-ext-bayer](https://github.com/HenningLorenzen-ext-bayer), [&#x0040;mgirlich](https://github.com/mgirlich), and [&#x0040;stla](https://github.com/stla).\n\n#### htmlwidgets [v1.6.3](https://cran.r-project.org/web/packages/htmlwidgets/news/news.html)\n\n[&#x0040;barracuda156](https://github.com/barracuda156), [&#x0040;cpsievert](https://github.com/cpsievert), [&#x0040;DavisVaughan](https://github.com/DavisVaughan), [&#x0040;dmurdoch](https://github.com/dmurdoch), [&#x0040;gadenbuie](https://github.com/gadenbuie), [&#x0040;pietrodito](https://github.com/pietrodito), and [&#x0040;yihui](https://github.com/yihui).\n\n#### httpuv [v1.6.12](https://cran.r-project.org/web/packages/httpuv/news/news.html)\n\n[&#x0040;Camilo-Mora](https://github.com/Camilo-Mora), [&#x0040;gadenbuie](https://github.com/gadenbuie), [&#x0040;jcheng5](https://github.com/jcheng5), [&#x0040;jeroen](https://github.com/jeroen), [&#x0040;nealrichardson](https://github.com/nealrichardson), and [&#x0040;wfulp](https://github.com/wfulp).\n\n#### leaflet.providers [v2.0.0](https://cran.r-project.org/web/packages/leaflet.providers/news/news.html)\n\n[&#x0040;gadenbuie](https://github.com/gadenbuie), [&#x0040;schloerke](https://github.com/schloerke), and [&#x0040;SimonGoring](https://github.com/SimonGoring).\n\n#### leaflet [v2.2.1](https://cran.r-project.org/web/packages/leaflet/news/news.html)\n\n\n::: {.cell}\n\n:::\n\n\n[&#x0040;barracuda156](https://github.com/barracuda156), [&#x0040;Bryan1qr](https://github.com/Bryan1qr), [&#x0040;gadenbuie](https://github.com/gadenbuie), [&#x0040;gtalavera](https://github.com/gtalavera), [&#x0040;jmelichar](https://github.com/jmelichar), [&#x0040;mjdzr](https://github.com/mjdzr), and [&#x0040;PietrH](https://github.com/PietrH).\n\n#### learnr [v0.11.4](https://rstudio.github.io/learnr/news/index.html#learnr-0115)\n\n[&#x0040;davidkane9](https://github.com/davidkane9), [&#x0040;gadenbuie](https://github.com/gadenbuie), [&#x0040;jimjam-slam](https://github.com/jimjam-slam), [&#x0040;katieravenwood](https://github.com/katieravenwood), and [&#x0040;NaturallyAsh](https://github.com/NaturallyAsh).\n\n#### plotly [v4.10.3](https://cran.r-project.org/web/packages/plotly/news/news.html)\n\n[&#x0040;AdroMine](https://github.com/AdroMine), [&#x0040;AlexisDerumigny](https://github.com/AlexisDerumigny), [&#x0040;Apompetti-Cori](https://github.com/Apompetti-Cori), [&#x0040;cashfields](https://github.com/cashfields), [&#x0040;cpsievert](https://github.com/cpsievert), [&#x0040;CristianRiccio](https://github.com/CristianRiccio), [&#x0040;davidhodge931](https://github.com/davidhodge931), [&#x0040;DrMattG](https://github.com/DrMattG), [&#x0040;geejaytee](https://github.com/geejaytee), [&#x0040;jacole3](https://github.com/jacole3), [&#x0040;jrbarber37](https://github.com/jrbarber37), [&#x0040;lennartraman](https://github.com/lennartraman), [&#x0040;LouisLeNezet](https://github.com/LouisLeNezet), [&#x0040;MichalLauer](https://github.com/MichalLauer), [&#x0040;mjdzr](https://github.com/mjdzr), [&#x0040;mumbarkar](https://github.com/mumbarkar), [&#x0040;Obsidian-user](https://github.com/Obsidian-user), [&#x0040;olivroy](https://github.com/olivroy), [&#x0040;OverLordGoldDragon](https://github.com/OverLordGoldDragon), [&#x0040;rsbivand](https://github.com/rsbivand), [&#x0040;stephanmg](https://github.com/stephanmg), [&#x0040;stla](https://github.com/stla), [&#x0040;TheAnalyticalEdge](https://github.com/TheAnalyticalEdge), [&#x0040;ThierryO](https://github.com/ThierryO), [&#x0040;tomasnobrega](https://github.com/tomasnobrega), [&#x0040;tvedebrink](https://github.com/tvedebrink), [&#x0040;uriahf](https://github.com/uriahf), [&#x0040;whitejf](https://github.com/whitejf), [&#x0040;wholmes105](https://github.com/wholmes105), [&#x0040;wmay](https://github.com/wmay), [&#x0040;yogat3ch](https://github.com/yogat3ch), and [&#x0040;zeehio](https://github.com/zeehio).\n\n#### shiny [v1.8.0](https://shyr-test-center.netlify.app/r/reference/shiny/1.8.0/upgrade.html)\n\n\n::: {.cell}\n\n:::\n\n\n[&#x0040;avsdev-cw](https://github.com/avsdev-cw), [&#x0040;bathyscapher](https://github.com/bathyscapher), [&#x0040;chlebowa](https://github.com/chlebowa), [&#x0040;cpsievert](https://github.com/cpsievert), [&#x0040;deining](https://github.com/deining), [&#x0040;flachboard](https://github.com/flachboard), [&#x0040;gadenbuie](https://github.com/gadenbuie), [&#x0040;jcheng5](https://github.com/jcheng5), [&#x0040;karangattu](https://github.com/karangattu), [&#x0040;nstrayer](https://github.com/nstrayer), [&#x0040;wbakerrobinson](https://github.com/wbakerrobinson), and [&#x0040;wch](https://github.com/wch).\n\n#### shinyvalidate [v0.1.3](https://rstudio.github.io/shinyvalidate/news/index.html#shinyvalidate-013)\n\n[&#x0040;BajczA475](https://github.com/BajczA475), [&#x0040;bhogan-mitre](https://github.com/bhogan-mitre), [&#x0040;chlebowa](https://github.com/chlebowa), [&#x0040;cleber-n-borges](https://github.com/cleber-n-borges), [&#x0040;cpsievert](https://github.com/cpsievert), [&#x0040;dependabot[bot]](https://github.com/dependabot[bot]), [&#x0040;DivadNojnarg](https://github.com/DivadNojnarg), [&#x0040;doncqueurs](https://github.com/doncqueurs), [&#x0040;Sebastian-T-T](https://github.com/Sebastian-T-T), [&#x0040;stefanoborini](https://github.com/stefanoborini), [&#x0040;stephenwilliams22](https://github.com/stephenwilliams22), [&#x0040;Teebusch](https://github.com/Teebusch), and [&#x0040;Wezz0234](https://github.com/Wezz0234).\n\n#### thematic [0.1.4](https://rstudio.github.io/thematic/news/index.html#thematic-014)\n\n[&#x0040;AlbertRapp](https://github.com/AlbertRapp), [&#x0040;cpsievert](https://github.com/cpsievert), and [&#x0040;jfulponi](https://github.com/jfulponi).\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}